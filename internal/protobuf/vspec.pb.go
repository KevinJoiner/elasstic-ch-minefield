// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: vspec.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Vehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionVSS                 *VehicleVersionVSS            `protobuf:"bytes,1,opt,name=VersionVSS,proto3" json:"VersionVSS,omitempty"`
	VehicleIdentification      *VehicleVehicleIdentification `protobuf:"bytes,2,opt,name=VehicleIdentification,proto3" json:"VehicleIdentification,omitempty"`
	LowVoltageSystemState      string                        `protobuf:"bytes,3,opt,name=LowVoltageSystemState,proto3" json:"LowVoltageSystemState,omitempty"`
	LowVoltageBattery          *VehicleLowVoltageBattery     `protobuf:"bytes,4,opt,name=LowVoltageBattery,proto3" json:"LowVoltageBattery,omitempty"`
	Speed                      float32                       `protobuf:"fixed32,5,opt,name=Speed,proto3" json:"Speed,omitempty"`
	TraveledDistance           float32                       `protobuf:"fixed32,6,opt,name=TraveledDistance,proto3" json:"TraveledDistance,omitempty"`
	TraveledDistanceSinceStart float32                       `protobuf:"fixed32,7,opt,name=TraveledDistanceSinceStart,proto3" json:"TraveledDistanceSinceStart,omitempty"`
	StartTime                  string                        `protobuf:"bytes,8,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	TripDuration               float32                       `protobuf:"fixed32,9,opt,name=TripDuration,proto3" json:"TripDuration,omitempty"`
	TripMeterReading           float32                       `protobuf:"fixed32,10,opt,name=TripMeterReading,proto3" json:"TripMeterReading,omitempty"`
	IsBrokenDown               bool                          `protobuf:"varint,11,opt,name=IsBrokenDown,proto3" json:"IsBrokenDown,omitempty"`
	IsMoving                   bool                          `protobuf:"varint,12,opt,name=IsMoving,proto3" json:"IsMoving,omitempty"`
	AverageSpeed               float32                       `protobuf:"fixed32,13,opt,name=AverageSpeed,proto3" json:"AverageSpeed,omitempty"`
	Acceleration               *VehicleAcceleration          `protobuf:"bytes,14,opt,name=Acceleration,proto3" json:"Acceleration,omitempty"`
	AngularVelocity            *VehicleAngularVelocity       `protobuf:"bytes,15,opt,name=AngularVelocity,proto3" json:"AngularVelocity,omitempty"`
	RoofLoad                   int32                         `protobuf:"varint,16,opt,name=RoofLoad,proto3" json:"RoofLoad,omitempty"`
	CargoVolume                float32                       `protobuf:"fixed32,17,opt,name=CargoVolume,proto3" json:"CargoVolume,omitempty"`
	EmissionsCO2               int32                         `protobuf:"varint,18,opt,name=EmissionsCO2,proto3" json:"EmissionsCO2,omitempty"`
	CurrentOverallWeight       uint32                        `protobuf:"varint,19,opt,name=CurrentOverallWeight,proto3" json:"CurrentOverallWeight,omitempty"`
	CurbWeight                 uint32                        `protobuf:"varint,20,opt,name=CurbWeight,proto3" json:"CurbWeight,omitempty"`
	GrossWeight                uint32                        `protobuf:"varint,21,opt,name=GrossWeight,proto3" json:"GrossWeight,omitempty"`
	MaxTowWeight               uint32                        `protobuf:"varint,22,opt,name=MaxTowWeight,proto3" json:"MaxTowWeight,omitempty"`
	MaxTowBallWeight           uint32                        `protobuf:"varint,23,opt,name=MaxTowBallWeight,proto3" json:"MaxTowBallWeight,omitempty"`
	Length                     uint32                        `protobuf:"varint,24,opt,name=Length,proto3" json:"Length,omitempty"`
	Height                     uint32                        `protobuf:"varint,25,opt,name=Height,proto3" json:"Height,omitempty"`
	Width                      uint32                        `protobuf:"varint,26,opt,name=Width,proto3" json:"Width,omitempty"`
	WidthExcludingMirrors      uint32                        `protobuf:"varint,27,opt,name=WidthExcludingMirrors,proto3" json:"WidthExcludingMirrors,omitempty"`
	WidthIncludingMirrors      uint32                        `protobuf:"varint,28,opt,name=WidthIncludingMirrors,proto3" json:"WidthIncludingMirrors,omitempty"`
	WidthFoldedMirrors         uint32                        `protobuf:"varint,29,opt,name=WidthFoldedMirrors,proto3" json:"WidthFoldedMirrors,omitempty"`
	TurningDiameter            uint32                        `protobuf:"varint,30,opt,name=TurningDiameter,proto3" json:"TurningDiameter,omitempty"`
	Trailer                    *VehicleTrailer               `protobuf:"bytes,31,opt,name=Trailer,proto3" json:"Trailer,omitempty"`
	CurrentLocation            *VehicleCurrentLocation       `protobuf:"bytes,32,opt,name=CurrentLocation,proto3" json:"CurrentLocation,omitempty"`
	PowerOptimizeLevel         uint32                        `protobuf:"varint,33,opt,name=PowerOptimizeLevel,proto3" json:"PowerOptimizeLevel,omitempty"`
	IsAutoPowerOptimize        bool                          `protobuf:"varint,34,opt,name=IsAutoPowerOptimize,proto3" json:"IsAutoPowerOptimize,omitempty"`
	Powertrain                 *VehiclePowertrain            `protobuf:"bytes,35,opt,name=Powertrain,proto3" json:"Powertrain,omitempty"`
	Body                       *VehicleBody                  `protobuf:"bytes,36,opt,name=Body,proto3" json:"Body,omitempty"`
	Cabin                      *VehicleCabin                 `protobuf:"bytes,37,opt,name=Cabin,proto3" json:"Cabin,omitempty"`
	ADAS                       *VehicleADAS                  `protobuf:"bytes,38,opt,name=ADAS,proto3" json:"ADAS,omitempty"`
	Chassis                    *VehicleChassis               `protobuf:"bytes,39,opt,name=Chassis,proto3" json:"Chassis,omitempty"`
	OBD                        *VehicleOBD                   `protobuf:"bytes,40,opt,name=OBD,proto3" json:"OBD,omitempty"`
	Driver                     *VehicleDriver                `protobuf:"bytes,41,opt,name=Driver,proto3" json:"Driver,omitempty"`
	Exterior                   *VehicleExterior              `protobuf:"bytes,42,opt,name=Exterior,proto3" json:"Exterior,omitempty"`
	Service                    *VehicleService               `protobuf:"bytes,43,opt,name=Service,proto3" json:"Service,omitempty"`
	Connectivity               *VehicleConnectivity          `protobuf:"bytes,44,opt,name=Connectivity,proto3" json:"Connectivity,omitempty"`
	Subject                    string                        `protobuf:"bytes,45,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Timestamp                  string                        `protobuf:"bytes,46,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	DIMO                       *VehicleDIMO                  `protobuf:"bytes,47,opt,name=DIMO,proto3" json:"DIMO,omitempty"`
}

func (x *Vehicle) Reset() {
	*x = Vehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vehicle) ProtoMessage() {}

func (x *Vehicle) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vehicle.ProtoReflect.Descriptor instead.
func (*Vehicle) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{0}
}

func (x *Vehicle) GetVersionVSS() *VehicleVersionVSS {
	if x != nil {
		return x.VersionVSS
	}
	return nil
}

func (x *Vehicle) GetVehicleIdentification() *VehicleVehicleIdentification {
	if x != nil {
		return x.VehicleIdentification
	}
	return nil
}

func (x *Vehicle) GetLowVoltageSystemState() string {
	if x != nil {
		return x.LowVoltageSystemState
	}
	return ""
}

func (x *Vehicle) GetLowVoltageBattery() *VehicleLowVoltageBattery {
	if x != nil {
		return x.LowVoltageBattery
	}
	return nil
}

func (x *Vehicle) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *Vehicle) GetTraveledDistance() float32 {
	if x != nil {
		return x.TraveledDistance
	}
	return 0
}

func (x *Vehicle) GetTraveledDistanceSinceStart() float32 {
	if x != nil {
		return x.TraveledDistanceSinceStart
	}
	return 0
}

func (x *Vehicle) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Vehicle) GetTripDuration() float32 {
	if x != nil {
		return x.TripDuration
	}
	return 0
}

func (x *Vehicle) GetTripMeterReading() float32 {
	if x != nil {
		return x.TripMeterReading
	}
	return 0
}

func (x *Vehicle) GetIsBrokenDown() bool {
	if x != nil {
		return x.IsBrokenDown
	}
	return false
}

func (x *Vehicle) GetIsMoving() bool {
	if x != nil {
		return x.IsMoving
	}
	return false
}

func (x *Vehicle) GetAverageSpeed() float32 {
	if x != nil {
		return x.AverageSpeed
	}
	return 0
}

func (x *Vehicle) GetAcceleration() *VehicleAcceleration {
	if x != nil {
		return x.Acceleration
	}
	return nil
}

func (x *Vehicle) GetAngularVelocity() *VehicleAngularVelocity {
	if x != nil {
		return x.AngularVelocity
	}
	return nil
}

func (x *Vehicle) GetRoofLoad() int32 {
	if x != nil {
		return x.RoofLoad
	}
	return 0
}

func (x *Vehicle) GetCargoVolume() float32 {
	if x != nil {
		return x.CargoVolume
	}
	return 0
}

func (x *Vehicle) GetEmissionsCO2() int32 {
	if x != nil {
		return x.EmissionsCO2
	}
	return 0
}

func (x *Vehicle) GetCurrentOverallWeight() uint32 {
	if x != nil {
		return x.CurrentOverallWeight
	}
	return 0
}

func (x *Vehicle) GetCurbWeight() uint32 {
	if x != nil {
		return x.CurbWeight
	}
	return 0
}

func (x *Vehicle) GetGrossWeight() uint32 {
	if x != nil {
		return x.GrossWeight
	}
	return 0
}

func (x *Vehicle) GetMaxTowWeight() uint32 {
	if x != nil {
		return x.MaxTowWeight
	}
	return 0
}

func (x *Vehicle) GetMaxTowBallWeight() uint32 {
	if x != nil {
		return x.MaxTowBallWeight
	}
	return 0
}

func (x *Vehicle) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Vehicle) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Vehicle) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Vehicle) GetWidthExcludingMirrors() uint32 {
	if x != nil {
		return x.WidthExcludingMirrors
	}
	return 0
}

func (x *Vehicle) GetWidthIncludingMirrors() uint32 {
	if x != nil {
		return x.WidthIncludingMirrors
	}
	return 0
}

func (x *Vehicle) GetWidthFoldedMirrors() uint32 {
	if x != nil {
		return x.WidthFoldedMirrors
	}
	return 0
}

func (x *Vehicle) GetTurningDiameter() uint32 {
	if x != nil {
		return x.TurningDiameter
	}
	return 0
}

func (x *Vehicle) GetTrailer() *VehicleTrailer {
	if x != nil {
		return x.Trailer
	}
	return nil
}

func (x *Vehicle) GetCurrentLocation() *VehicleCurrentLocation {
	if x != nil {
		return x.CurrentLocation
	}
	return nil
}

func (x *Vehicle) GetPowerOptimizeLevel() uint32 {
	if x != nil {
		return x.PowerOptimizeLevel
	}
	return 0
}

func (x *Vehicle) GetIsAutoPowerOptimize() bool {
	if x != nil {
		return x.IsAutoPowerOptimize
	}
	return false
}

func (x *Vehicle) GetPowertrain() *VehiclePowertrain {
	if x != nil {
		return x.Powertrain
	}
	return nil
}

func (x *Vehicle) GetBody() *VehicleBody {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Vehicle) GetCabin() *VehicleCabin {
	if x != nil {
		return x.Cabin
	}
	return nil
}

func (x *Vehicle) GetADAS() *VehicleADAS {
	if x != nil {
		return x.ADAS
	}
	return nil
}

func (x *Vehicle) GetChassis() *VehicleChassis {
	if x != nil {
		return x.Chassis
	}
	return nil
}

func (x *Vehicle) GetOBD() *VehicleOBD {
	if x != nil {
		return x.OBD
	}
	return nil
}

func (x *Vehicle) GetDriver() *VehicleDriver {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *Vehicle) GetExterior() *VehicleExterior {
	if x != nil {
		return x.Exterior
	}
	return nil
}

func (x *Vehicle) GetService() *VehicleService {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *Vehicle) GetConnectivity() *VehicleConnectivity {
	if x != nil {
		return x.Connectivity
	}
	return nil
}

func (x *Vehicle) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Vehicle) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Vehicle) GetDIMO() *VehicleDIMO {
	if x != nil {
		return x.DIMO
	}
	return nil
}

type VehicleVersionVSS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Major uint32 `protobuf:"varint,1,opt,name=Major,proto3" json:"Major,omitempty"`
	Minor uint32 `protobuf:"varint,2,opt,name=Minor,proto3" json:"Minor,omitempty"`
	Patch uint32 `protobuf:"varint,3,opt,name=Patch,proto3" json:"Patch,omitempty"`
	Label string `protobuf:"bytes,4,opt,name=Label,proto3" json:"Label,omitempty"`
}

func (x *VehicleVersionVSS) Reset() {
	*x = VehicleVersionVSS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleVersionVSS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleVersionVSS) ProtoMessage() {}

func (x *VehicleVersionVSS) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleVersionVSS.ProtoReflect.Descriptor instead.
func (*VehicleVersionVSS) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{1}
}

func (x *VehicleVersionVSS) GetMajor() uint32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *VehicleVersionVSS) GetMinor() uint32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *VehicleVersionVSS) GetPatch() uint32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *VehicleVersionVSS) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type VehicleVehicleIdentification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VIN                        string   `protobuf:"bytes,1,opt,name=VIN,proto3" json:"VIN,omitempty"`
	WMI                        string   `protobuf:"bytes,2,opt,name=WMI,proto3" json:"WMI,omitempty"`
	Brand                      string   `protobuf:"bytes,3,opt,name=Brand,proto3" json:"Brand,omitempty"`
	Model                      string   `protobuf:"bytes,4,opt,name=Model,proto3" json:"Model,omitempty"`
	Year                       uint32   `protobuf:"varint,5,opt,name=Year,proto3" json:"Year,omitempty"`
	AcrissCode                 string   `protobuf:"bytes,6,opt,name=AcrissCode,proto3" json:"AcrissCode,omitempty"`
	BodyType                   string   `protobuf:"bytes,7,opt,name=BodyType,proto3" json:"BodyType,omitempty"`
	DateVehicleFirstRegistered string   `protobuf:"bytes,8,opt,name=DateVehicleFirstRegistered,proto3" json:"DateVehicleFirstRegistered,omitempty"`
	LicensePlate               string   `protobuf:"bytes,9,opt,name=LicensePlate,proto3" json:"LicensePlate,omitempty"`
	MeetsEmissionStandard      string   `protobuf:"bytes,10,opt,name=MeetsEmissionStandard,proto3" json:"MeetsEmissionStandard,omitempty"`
	ProductionDate             string   `protobuf:"bytes,11,opt,name=ProductionDate,proto3" json:"ProductionDate,omitempty"`
	PurchaseDate               string   `protobuf:"bytes,12,opt,name=PurchaseDate,proto3" json:"PurchaseDate,omitempty"`
	VehicleModelDate           string   `protobuf:"bytes,13,opt,name=VehicleModelDate,proto3" json:"VehicleModelDate,omitempty"`
	VehicleConfiguration       string   `protobuf:"bytes,14,opt,name=VehicleConfiguration,proto3" json:"VehicleConfiguration,omitempty"`
	VehicleSeatingCapacity     uint32   `protobuf:"varint,15,opt,name=VehicleSeatingCapacity,proto3" json:"VehicleSeatingCapacity,omitempty"`
	VehicleSpecialUsage        string   `protobuf:"bytes,16,opt,name=VehicleSpecialUsage,proto3" json:"VehicleSpecialUsage,omitempty"`
	VehicleExteriorColor       string   `protobuf:"bytes,17,opt,name=VehicleExteriorColor,proto3" json:"VehicleExteriorColor,omitempty"`
	VehicleInteriorColor       string   `protobuf:"bytes,18,opt,name=VehicleInteriorColor,proto3" json:"VehicleInteriorColor,omitempty"`
	VehicleInteriorType        string   `protobuf:"bytes,19,opt,name=VehicleInteriorType,proto3" json:"VehicleInteriorType,omitempty"`
	KnownVehicleDamages        string   `protobuf:"bytes,20,opt,name=KnownVehicleDamages,proto3" json:"KnownVehicleDamages,omitempty"`
	OptionalExtras             []string `protobuf:"bytes,21,rep,name=OptionalExtras,proto3" json:"OptionalExtras,omitempty"`
}

func (x *VehicleVehicleIdentification) Reset() {
	*x = VehicleVehicleIdentification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleVehicleIdentification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleVehicleIdentification) ProtoMessage() {}

func (x *VehicleVehicleIdentification) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleVehicleIdentification.ProtoReflect.Descriptor instead.
func (*VehicleVehicleIdentification) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{2}
}

func (x *VehicleVehicleIdentification) GetVIN() string {
	if x != nil {
		return x.VIN
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetWMI() string {
	if x != nil {
		return x.WMI
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *VehicleVehicleIdentification) GetAcrissCode() string {
	if x != nil {
		return x.AcrissCode
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetBodyType() string {
	if x != nil {
		return x.BodyType
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetDateVehicleFirstRegistered() string {
	if x != nil {
		return x.DateVehicleFirstRegistered
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetMeetsEmissionStandard() string {
	if x != nil {
		return x.MeetsEmissionStandard
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetProductionDate() string {
	if x != nil {
		return x.ProductionDate
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetPurchaseDate() string {
	if x != nil {
		return x.PurchaseDate
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetVehicleModelDate() string {
	if x != nil {
		return x.VehicleModelDate
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetVehicleConfiguration() string {
	if x != nil {
		return x.VehicleConfiguration
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetVehicleSeatingCapacity() uint32 {
	if x != nil {
		return x.VehicleSeatingCapacity
	}
	return 0
}

func (x *VehicleVehicleIdentification) GetVehicleSpecialUsage() string {
	if x != nil {
		return x.VehicleSpecialUsage
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetVehicleExteriorColor() string {
	if x != nil {
		return x.VehicleExteriorColor
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetVehicleInteriorColor() string {
	if x != nil {
		return x.VehicleInteriorColor
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetVehicleInteriorType() string {
	if x != nil {
		return x.VehicleInteriorType
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetKnownVehicleDamages() string {
	if x != nil {
		return x.KnownVehicleDamages
	}
	return ""
}

func (x *VehicleVehicleIdentification) GetOptionalExtras() []string {
	if x != nil {
		return x.OptionalExtras
	}
	return nil
}

type VehicleLowVoltageBattery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NominalVoltage  uint32  `protobuf:"varint,1,opt,name=NominalVoltage,proto3" json:"NominalVoltage,omitempty"`
	NominalCapacity uint32  `protobuf:"varint,2,opt,name=NominalCapacity,proto3" json:"NominalCapacity,omitempty"`
	CurrentVoltage  float32 `protobuf:"fixed32,3,opt,name=CurrentVoltage,proto3" json:"CurrentVoltage,omitempty"`
	CurrentCurrent  float32 `protobuf:"fixed32,4,opt,name=CurrentCurrent,proto3" json:"CurrentCurrent,omitempty"`
}

func (x *VehicleLowVoltageBattery) Reset() {
	*x = VehicleLowVoltageBattery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleLowVoltageBattery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleLowVoltageBattery) ProtoMessage() {}

func (x *VehicleLowVoltageBattery) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleLowVoltageBattery.ProtoReflect.Descriptor instead.
func (*VehicleLowVoltageBattery) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{3}
}

func (x *VehicleLowVoltageBattery) GetNominalVoltage() uint32 {
	if x != nil {
		return x.NominalVoltage
	}
	return 0
}

func (x *VehicleLowVoltageBattery) GetNominalCapacity() uint32 {
	if x != nil {
		return x.NominalCapacity
	}
	return 0
}

func (x *VehicleLowVoltageBattery) GetCurrentVoltage() float32 {
	if x != nil {
		return x.CurrentVoltage
	}
	return 0
}

func (x *VehicleLowVoltageBattery) GetCurrentCurrent() float32 {
	if x != nil {
		return x.CurrentCurrent
	}
	return 0
}

type VehicleAcceleration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Longitudinal float32 `protobuf:"fixed32,1,opt,name=Longitudinal,proto3" json:"Longitudinal,omitempty"`
	Lateral      float32 `protobuf:"fixed32,2,opt,name=Lateral,proto3" json:"Lateral,omitempty"`
	Vertical     float32 `protobuf:"fixed32,3,opt,name=Vertical,proto3" json:"Vertical,omitempty"`
}

func (x *VehicleAcceleration) Reset() {
	*x = VehicleAcceleration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleAcceleration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleAcceleration) ProtoMessage() {}

func (x *VehicleAcceleration) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleAcceleration.ProtoReflect.Descriptor instead.
func (*VehicleAcceleration) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{4}
}

func (x *VehicleAcceleration) GetLongitudinal() float32 {
	if x != nil {
		return x.Longitudinal
	}
	return 0
}

func (x *VehicleAcceleration) GetLateral() float32 {
	if x != nil {
		return x.Lateral
	}
	return 0
}

func (x *VehicleAcceleration) GetVertical() float32 {
	if x != nil {
		return x.Vertical
	}
	return 0
}

type VehicleAngularVelocity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roll  float32 `protobuf:"fixed32,1,opt,name=Roll,proto3" json:"Roll,omitempty"`
	Pitch float32 `protobuf:"fixed32,2,opt,name=Pitch,proto3" json:"Pitch,omitempty"`
	Yaw   float32 `protobuf:"fixed32,3,opt,name=Yaw,proto3" json:"Yaw,omitempty"`
}

func (x *VehicleAngularVelocity) Reset() {
	*x = VehicleAngularVelocity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleAngularVelocity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleAngularVelocity) ProtoMessage() {}

func (x *VehicleAngularVelocity) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleAngularVelocity.ProtoReflect.Descriptor instead.
func (*VehicleAngularVelocity) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{5}
}

func (x *VehicleAngularVelocity) GetRoll() float32 {
	if x != nil {
		return x.Roll
	}
	return 0
}

func (x *VehicleAngularVelocity) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *VehicleAngularVelocity) GetYaw() float32 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

type VehicleTrailer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsConnected bool `protobuf:"varint,1,opt,name=IsConnected,proto3" json:"IsConnected,omitempty"`
}

func (x *VehicleTrailer) Reset() {
	*x = VehicleTrailer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleTrailer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleTrailer) ProtoMessage() {}

func (x *VehicleTrailer) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleTrailer.ProtoReflect.Descriptor instead.
func (*VehicleTrailer) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{6}
}

func (x *VehicleTrailer) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

type VehicleCurrentLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp          string                              `protobuf:"bytes,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Latitude           float64                             `protobuf:"fixed64,2,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude          float64                             `protobuf:"fixed64,3,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	Heading            float64                             `protobuf:"fixed64,4,opt,name=Heading,proto3" json:"Heading,omitempty"`
	HorizontalAccuracy float64                             `protobuf:"fixed64,5,opt,name=HorizontalAccuracy,proto3" json:"HorizontalAccuracy,omitempty"`
	Altitude           float64                             `protobuf:"fixed64,6,opt,name=Altitude,proto3" json:"Altitude,omitempty"`
	VerticalAccuracy   float64                             `protobuf:"fixed64,7,opt,name=VerticalAccuracy,proto3" json:"VerticalAccuracy,omitempty"`
	GNSSReceiver       *VehicleCurrentLocationGNSSReceiver `protobuf:"bytes,8,opt,name=GNSSReceiver,proto3" json:"GNSSReceiver,omitempty"`
}

func (x *VehicleCurrentLocation) Reset() {
	*x = VehicleCurrentLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCurrentLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCurrentLocation) ProtoMessage() {}

func (x *VehicleCurrentLocation) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCurrentLocation.ProtoReflect.Descriptor instead.
func (*VehicleCurrentLocation) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{7}
}

func (x *VehicleCurrentLocation) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *VehicleCurrentLocation) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *VehicleCurrentLocation) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *VehicleCurrentLocation) GetHeading() float64 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *VehicleCurrentLocation) GetHorizontalAccuracy() float64 {
	if x != nil {
		return x.HorizontalAccuracy
	}
	return 0
}

func (x *VehicleCurrentLocation) GetAltitude() float64 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *VehicleCurrentLocation) GetVerticalAccuracy() float64 {
	if x != nil {
		return x.VerticalAccuracy
	}
	return 0
}

func (x *VehicleCurrentLocation) GetGNSSReceiver() *VehicleCurrentLocationGNSSReceiver {
	if x != nil {
		return x.GNSSReceiver
	}
	return nil
}

type VehicleCurrentLocationGNSSReceiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FixType          string                                              `protobuf:"bytes,1,opt,name=FixType,proto3" json:"FixType,omitempty"`
	MountingPosition *VehicleCurrentLocationGNSSReceiverMountingPosition `protobuf:"bytes,2,opt,name=MountingPosition,proto3" json:"MountingPosition,omitempty"`
}

func (x *VehicleCurrentLocationGNSSReceiver) Reset() {
	*x = VehicleCurrentLocationGNSSReceiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCurrentLocationGNSSReceiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCurrentLocationGNSSReceiver) ProtoMessage() {}

func (x *VehicleCurrentLocationGNSSReceiver) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCurrentLocationGNSSReceiver.ProtoReflect.Descriptor instead.
func (*VehicleCurrentLocationGNSSReceiver) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{8}
}

func (x *VehicleCurrentLocationGNSSReceiver) GetFixType() string {
	if x != nil {
		return x.FixType
	}
	return ""
}

func (x *VehicleCurrentLocationGNSSReceiver) GetMountingPosition() *VehicleCurrentLocationGNSSReceiverMountingPosition {
	if x != nil {
		return x.MountingPosition
	}
	return nil
}

type VehicleCurrentLocationGNSSReceiverMountingPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=X,proto3" json:"X,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=Y,proto3" json:"Y,omitempty"`
	Z int32 `protobuf:"varint,3,opt,name=Z,proto3" json:"Z,omitempty"`
}

func (x *VehicleCurrentLocationGNSSReceiverMountingPosition) Reset() {
	*x = VehicleCurrentLocationGNSSReceiverMountingPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCurrentLocationGNSSReceiverMountingPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCurrentLocationGNSSReceiverMountingPosition) ProtoMessage() {}

func (x *VehicleCurrentLocationGNSSReceiverMountingPosition) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCurrentLocationGNSSReceiverMountingPosition.ProtoReflect.Descriptor instead.
func (*VehicleCurrentLocationGNSSReceiverMountingPosition) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{9}
}

func (x *VehicleCurrentLocationGNSSReceiverMountingPosition) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *VehicleCurrentLocationGNSSReceiverMountingPosition) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *VehicleCurrentLocationGNSSReceiverMountingPosition) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type VehiclePowertrain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccumulatedBrakingEnergy float32                            `protobuf:"fixed32,1,opt,name=AccumulatedBrakingEnergy,proto3" json:"AccumulatedBrakingEnergy,omitempty"`
	Range                    uint32                             `protobuf:"varint,2,opt,name=Range,proto3" json:"Range,omitempty"`
	TimeRemaining            uint32                             `protobuf:"varint,3,opt,name=TimeRemaining,proto3" json:"TimeRemaining,omitempty"`
	Type                     string                             `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	PowerOptimizeLevel       uint32                             `protobuf:"varint,5,opt,name=PowerOptimizeLevel,proto3" json:"PowerOptimizeLevel,omitempty"`
	IsAutoPowerOptimize      bool                               `protobuf:"varint,6,opt,name=IsAutoPowerOptimize,proto3" json:"IsAutoPowerOptimize,omitempty"`
	CombustionEngine         *VehiclePowertrainCombustionEngine `protobuf:"bytes,7,opt,name=CombustionEngine,proto3" json:"CombustionEngine,omitempty"`
	Transmission             *VehiclePowertrainTransmission     `protobuf:"bytes,8,opt,name=Transmission,proto3" json:"Transmission,omitempty"`
	ElectricMotor            *VehiclePowertrainElectricMotor    `protobuf:"bytes,9,opt,name=ElectricMotor,proto3" json:"ElectricMotor,omitempty"`
	TractionBattery          *VehiclePowertrainTractionBattery  `protobuf:"bytes,10,opt,name=TractionBattery,proto3" json:"TractionBattery,omitempty"`
	FuelSystem               *VehiclePowertrainFuelSystem       `protobuf:"bytes,11,opt,name=FuelSystem,proto3" json:"FuelSystem,omitempty"`
}

func (x *VehiclePowertrain) Reset() {
	*x = VehiclePowertrain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrain) ProtoMessage() {}

func (x *VehiclePowertrain) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrain.ProtoReflect.Descriptor instead.
func (*VehiclePowertrain) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{10}
}

func (x *VehiclePowertrain) GetAccumulatedBrakingEnergy() float32 {
	if x != nil {
		return x.AccumulatedBrakingEnergy
	}
	return 0
}

func (x *VehiclePowertrain) GetRange() uint32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *VehiclePowertrain) GetTimeRemaining() uint32 {
	if x != nil {
		return x.TimeRemaining
	}
	return 0
}

func (x *VehiclePowertrain) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *VehiclePowertrain) GetPowerOptimizeLevel() uint32 {
	if x != nil {
		return x.PowerOptimizeLevel
	}
	return 0
}

func (x *VehiclePowertrain) GetIsAutoPowerOptimize() bool {
	if x != nil {
		return x.IsAutoPowerOptimize
	}
	return false
}

func (x *VehiclePowertrain) GetCombustionEngine() *VehiclePowertrainCombustionEngine {
	if x != nil {
		return x.CombustionEngine
	}
	return nil
}

func (x *VehiclePowertrain) GetTransmission() *VehiclePowertrainTransmission {
	if x != nil {
		return x.Transmission
	}
	return nil
}

func (x *VehiclePowertrain) GetElectricMotor() *VehiclePowertrainElectricMotor {
	if x != nil {
		return x.ElectricMotor
	}
	return nil
}

func (x *VehiclePowertrain) GetTractionBattery() *VehiclePowertrainTractionBattery {
	if x != nil {
		return x.TractionBattery
	}
	return nil
}

func (x *VehiclePowertrain) GetFuelSystem() *VehiclePowertrainFuelSystem {
	if x != nil {
		return x.FuelSystem
	}
	return nil
}

type VehiclePowertrainCombustionEngine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EngineCode                string                                                    `protobuf:"bytes,1,opt,name=EngineCode,proto3" json:"EngineCode,omitempty"`
	Displacement              uint32                                                    `protobuf:"varint,2,opt,name=Displacement,proto3" json:"Displacement,omitempty"`
	StrokeLength              float32                                                   `protobuf:"fixed32,3,opt,name=StrokeLength,proto3" json:"StrokeLength,omitempty"`
	Bore                      float32                                                   `protobuf:"fixed32,4,opt,name=Bore,proto3" json:"Bore,omitempty"`
	Configuration             string                                                    `protobuf:"bytes,5,opt,name=Configuration,proto3" json:"Configuration,omitempty"`
	NumberOfCylinders         uint32                                                    `protobuf:"varint,6,opt,name=NumberOfCylinders,proto3" json:"NumberOfCylinders,omitempty"`
	NumberOfValvesPerCylinder uint32                                                    `protobuf:"varint,7,opt,name=NumberOfValvesPerCylinder,proto3" json:"NumberOfValvesPerCylinder,omitempty"`
	CompressionRatio          string                                                    `protobuf:"bytes,8,opt,name=CompressionRatio,proto3" json:"CompressionRatio,omitempty"`
	EngineOilCapacity         float32                                                   `protobuf:"fixed32,9,opt,name=EngineOilCapacity,proto3" json:"EngineOilCapacity,omitempty"`
	EngineCoolantCapacity     float32                                                   `protobuf:"fixed32,10,opt,name=EngineCoolantCapacity,proto3" json:"EngineCoolantCapacity,omitempty"`
	MaxPower                  uint32                                                    `protobuf:"varint,11,opt,name=MaxPower,proto3" json:"MaxPower,omitempty"`
	MaxTorque                 uint32                                                    `protobuf:"varint,12,opt,name=MaxTorque,proto3" json:"MaxTorque,omitempty"`
	AspirationType            string                                                    `protobuf:"bytes,13,opt,name=AspirationType,proto3" json:"AspirationType,omitempty"`
	EngineOilLevel            string                                                    `protobuf:"bytes,14,opt,name=EngineOilLevel,proto3" json:"EngineOilLevel,omitempty"`
	OilLifeRemaining          int32                                                     `protobuf:"varint,15,opt,name=OilLifeRemaining,proto3" json:"OilLifeRemaining,omitempty"`
	IsRunning                 bool                                                      `protobuf:"varint,16,opt,name=IsRunning,proto3" json:"IsRunning,omitempty"`
	Speed                     uint32                                                    `protobuf:"varint,17,opt,name=Speed,proto3" json:"Speed,omitempty"`
	EngineHours               float32                                                   `protobuf:"fixed32,18,opt,name=EngineHours,proto3" json:"EngineHours,omitempty"`
	IdleHours                 float32                                                   `protobuf:"fixed32,19,opt,name=IdleHours,proto3" json:"IdleHours,omitempty"`
	ECT                       float32                                                   `protobuf:"fixed32,20,opt,name=ECT,proto3" json:"ECT,omitempty"`
	EOT                       float32                                                   `protobuf:"fixed32,21,opt,name=EOT,proto3" json:"EOT,omitempty"`
	MAP                       uint32                                                    `protobuf:"varint,22,opt,name=MAP,proto3" json:"MAP,omitempty"`
	MAF                       uint32                                                    `protobuf:"varint,23,opt,name=MAF,proto3" json:"MAF,omitempty"`
	TPS                       uint32                                                    `protobuf:"varint,24,opt,name=TPS,proto3" json:"TPS,omitempty"`
	EOP                       uint32                                                    `protobuf:"varint,25,opt,name=EOP,proto3" json:"EOP,omitempty"`
	Power                     uint32                                                    `protobuf:"varint,26,opt,name=Power,proto3" json:"Power,omitempty"`
	Torque                    int32                                                     `protobuf:"varint,27,opt,name=Torque,proto3" json:"Torque,omitempty"`
	DieselExhaustFluid        *VehiclePowertrainCombustionEngineDieselExhaustFluid      `protobuf:"bytes,28,opt,name=DieselExhaustFluid,proto3" json:"DieselExhaustFluid,omitempty"`
	DieselParticulateFilter   *VehiclePowertrainCombustionEngineDieselParticulateFilter `protobuf:"bytes,29,opt,name=DieselParticulateFilter,proto3" json:"DieselParticulateFilter,omitempty"`
}

func (x *VehiclePowertrainCombustionEngine) Reset() {
	*x = VehiclePowertrainCombustionEngine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainCombustionEngine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainCombustionEngine) ProtoMessage() {}

func (x *VehiclePowertrainCombustionEngine) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainCombustionEngine.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainCombustionEngine) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{11}
}

func (x *VehiclePowertrainCombustionEngine) GetEngineCode() string {
	if x != nil {
		return x.EngineCode
	}
	return ""
}

func (x *VehiclePowertrainCombustionEngine) GetDisplacement() uint32 {
	if x != nil {
		return x.Displacement
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetStrokeLength() float32 {
	if x != nil {
		return x.StrokeLength
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetBore() float32 {
	if x != nil {
		return x.Bore
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetConfiguration() string {
	if x != nil {
		return x.Configuration
	}
	return ""
}

func (x *VehiclePowertrainCombustionEngine) GetNumberOfCylinders() uint32 {
	if x != nil {
		return x.NumberOfCylinders
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetNumberOfValvesPerCylinder() uint32 {
	if x != nil {
		return x.NumberOfValvesPerCylinder
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetCompressionRatio() string {
	if x != nil {
		return x.CompressionRatio
	}
	return ""
}

func (x *VehiclePowertrainCombustionEngine) GetEngineOilCapacity() float32 {
	if x != nil {
		return x.EngineOilCapacity
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetEngineCoolantCapacity() float32 {
	if x != nil {
		return x.EngineCoolantCapacity
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetMaxPower() uint32 {
	if x != nil {
		return x.MaxPower
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetMaxTorque() uint32 {
	if x != nil {
		return x.MaxTorque
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetAspirationType() string {
	if x != nil {
		return x.AspirationType
	}
	return ""
}

func (x *VehiclePowertrainCombustionEngine) GetEngineOilLevel() string {
	if x != nil {
		return x.EngineOilLevel
	}
	return ""
}

func (x *VehiclePowertrainCombustionEngine) GetOilLifeRemaining() int32 {
	if x != nil {
		return x.OilLifeRemaining
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetIsRunning() bool {
	if x != nil {
		return x.IsRunning
	}
	return false
}

func (x *VehiclePowertrainCombustionEngine) GetSpeed() uint32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetEngineHours() float32 {
	if x != nil {
		return x.EngineHours
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetIdleHours() float32 {
	if x != nil {
		return x.IdleHours
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetECT() float32 {
	if x != nil {
		return x.ECT
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetEOT() float32 {
	if x != nil {
		return x.EOT
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetMAP() uint32 {
	if x != nil {
		return x.MAP
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetMAF() uint32 {
	if x != nil {
		return x.MAF
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetTPS() uint32 {
	if x != nil {
		return x.TPS
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetEOP() uint32 {
	if x != nil {
		return x.EOP
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetPower() uint32 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetTorque() int32 {
	if x != nil {
		return x.Torque
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngine) GetDieselExhaustFluid() *VehiclePowertrainCombustionEngineDieselExhaustFluid {
	if x != nil {
		return x.DieselExhaustFluid
	}
	return nil
}

func (x *VehiclePowertrainCombustionEngine) GetDieselParticulateFilter() *VehiclePowertrainCombustionEngineDieselParticulateFilter {
	if x != nil {
		return x.DieselParticulateFilter
	}
	return nil
}

type VehiclePowertrainCombustionEngineDieselExhaustFluid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capacity   float32 `protobuf:"fixed32,1,opt,name=Capacity,proto3" json:"Capacity,omitempty"`
	Level      uint32  `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`
	Range      uint32  `protobuf:"varint,3,opt,name=Range,proto3" json:"Range,omitempty"`
	IsLevelLow bool    `protobuf:"varint,4,opt,name=IsLevelLow,proto3" json:"IsLevelLow,omitempty"`
}

func (x *VehiclePowertrainCombustionEngineDieselExhaustFluid) Reset() {
	*x = VehiclePowertrainCombustionEngineDieselExhaustFluid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainCombustionEngineDieselExhaustFluid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainCombustionEngineDieselExhaustFluid) ProtoMessage() {}

func (x *VehiclePowertrainCombustionEngineDieselExhaustFluid) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainCombustionEngineDieselExhaustFluid.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainCombustionEngineDieselExhaustFluid) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{12}
}

func (x *VehiclePowertrainCombustionEngineDieselExhaustFluid) GetCapacity() float32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngineDieselExhaustFluid) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngineDieselExhaustFluid) GetRange() uint32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngineDieselExhaustFluid) GetIsLevelLow() bool {
	if x != nil {
		return x.IsLevelLow
	}
	return false
}

type VehiclePowertrainCombustionEngineDieselParticulateFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InletTemperature  float32 `protobuf:"fixed32,1,opt,name=InletTemperature,proto3" json:"InletTemperature,omitempty"`
	OutletTemperature float32 `protobuf:"fixed32,2,opt,name=OutletTemperature,proto3" json:"OutletTemperature,omitempty"`
	DeltaPressure     float32 `protobuf:"fixed32,3,opt,name=DeltaPressure,proto3" json:"DeltaPressure,omitempty"`
}

func (x *VehiclePowertrainCombustionEngineDieselParticulateFilter) Reset() {
	*x = VehiclePowertrainCombustionEngineDieselParticulateFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainCombustionEngineDieselParticulateFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainCombustionEngineDieselParticulateFilter) ProtoMessage() {}

func (x *VehiclePowertrainCombustionEngineDieselParticulateFilter) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainCombustionEngineDieselParticulateFilter.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainCombustionEngineDieselParticulateFilter) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{13}
}

func (x *VehiclePowertrainCombustionEngineDieselParticulateFilter) GetInletTemperature() float32 {
	if x != nil {
		return x.InletTemperature
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngineDieselParticulateFilter) GetOutletTemperature() float32 {
	if x != nil {
		return x.OutletTemperature
	}
	return 0
}

func (x *VehiclePowertrainCombustionEngineDieselParticulateFilter) GetDeltaPressure() float32 {
	if x != nil {
		return x.DeltaPressure
	}
	return 0
}

type VehiclePowertrainTransmission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                          string  `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	GearCount                     int32   `protobuf:"varint,2,opt,name=GearCount,proto3" json:"GearCount,omitempty"`
	DriveType                     string  `protobuf:"bytes,3,opt,name=DriveType,proto3" json:"DriveType,omitempty"`
	TravelledDistance             float32 `protobuf:"fixed32,4,opt,name=TravelledDistance,proto3" json:"TravelledDistance,omitempty"`
	CurrentGear                   int32   `protobuf:"varint,5,opt,name=CurrentGear,proto3" json:"CurrentGear,omitempty"`
	SelectedGear                  int32   `protobuf:"varint,6,opt,name=SelectedGear,proto3" json:"SelectedGear,omitempty"`
	IsParkLockEngaged             bool    `protobuf:"varint,7,opt,name=IsParkLockEngaged,proto3" json:"IsParkLockEngaged,omitempty"`
	IsLowRangeEngaged             bool    `protobuf:"varint,8,opt,name=IsLowRangeEngaged,proto3" json:"IsLowRangeEngaged,omitempty"`
	IsElectricalPowertrainEngaged bool    `protobuf:"varint,9,opt,name=IsElectricalPowertrainEngaged,proto3" json:"IsElectricalPowertrainEngaged,omitempty"`
	PerformanceMode               string  `protobuf:"bytes,10,opt,name=PerformanceMode,proto3" json:"PerformanceMode,omitempty"`
	GearChangeMode                string  `protobuf:"bytes,11,opt,name=GearChangeMode,proto3" json:"GearChangeMode,omitempty"`
	Temperature                   float32 `protobuf:"fixed32,12,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	ClutchEngagement              float32 `protobuf:"fixed32,13,opt,name=ClutchEngagement,proto3" json:"ClutchEngagement,omitempty"`
	ClutchWear                    uint32  `protobuf:"varint,14,opt,name=ClutchWear,proto3" json:"ClutchWear,omitempty"`
	DiffLockFrontEngagement       float32 `protobuf:"fixed32,15,opt,name=DiffLockFrontEngagement,proto3" json:"DiffLockFrontEngagement,omitempty"`
	DiffLockRearEngagement        float32 `protobuf:"fixed32,16,opt,name=DiffLockRearEngagement,proto3" json:"DiffLockRearEngagement,omitempty"`
	TorqueDistribution            float32 `protobuf:"fixed32,17,opt,name=TorqueDistribution,proto3" json:"TorqueDistribution,omitempty"`
}

func (x *VehiclePowertrainTransmission) Reset() {
	*x = VehiclePowertrainTransmission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainTransmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainTransmission) ProtoMessage() {}

func (x *VehiclePowertrainTransmission) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainTransmission.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainTransmission) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{14}
}

func (x *VehiclePowertrainTransmission) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *VehiclePowertrainTransmission) GetGearCount() int32 {
	if x != nil {
		return x.GearCount
	}
	return 0
}

func (x *VehiclePowertrainTransmission) GetDriveType() string {
	if x != nil {
		return x.DriveType
	}
	return ""
}

func (x *VehiclePowertrainTransmission) GetTravelledDistance() float32 {
	if x != nil {
		return x.TravelledDistance
	}
	return 0
}

func (x *VehiclePowertrainTransmission) GetCurrentGear() int32 {
	if x != nil {
		return x.CurrentGear
	}
	return 0
}

func (x *VehiclePowertrainTransmission) GetSelectedGear() int32 {
	if x != nil {
		return x.SelectedGear
	}
	return 0
}

func (x *VehiclePowertrainTransmission) GetIsParkLockEngaged() bool {
	if x != nil {
		return x.IsParkLockEngaged
	}
	return false
}

func (x *VehiclePowertrainTransmission) GetIsLowRangeEngaged() bool {
	if x != nil {
		return x.IsLowRangeEngaged
	}
	return false
}

func (x *VehiclePowertrainTransmission) GetIsElectricalPowertrainEngaged() bool {
	if x != nil {
		return x.IsElectricalPowertrainEngaged
	}
	return false
}

func (x *VehiclePowertrainTransmission) GetPerformanceMode() string {
	if x != nil {
		return x.PerformanceMode
	}
	return ""
}

func (x *VehiclePowertrainTransmission) GetGearChangeMode() string {
	if x != nil {
		return x.GearChangeMode
	}
	return ""
}

func (x *VehiclePowertrainTransmission) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *VehiclePowertrainTransmission) GetClutchEngagement() float32 {
	if x != nil {
		return x.ClutchEngagement
	}
	return 0
}

func (x *VehiclePowertrainTransmission) GetClutchWear() uint32 {
	if x != nil {
		return x.ClutchWear
	}
	return 0
}

func (x *VehiclePowertrainTransmission) GetDiffLockFrontEngagement() float32 {
	if x != nil {
		return x.DiffLockFrontEngagement
	}
	return 0
}

func (x *VehiclePowertrainTransmission) GetDiffLockRearEngagement() float32 {
	if x != nil {
		return x.DiffLockRearEngagement
	}
	return 0
}

func (x *VehiclePowertrainTransmission) GetTorqueDistribution() float32 {
	if x != nil {
		return x.TorqueDistribution
	}
	return 0
}

type VehiclePowertrainElectricMotor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EngineCode         string  `protobuf:"bytes,1,opt,name=EngineCode,proto3" json:"EngineCode,omitempty"`
	MaxPower           uint32  `protobuf:"varint,2,opt,name=MaxPower,proto3" json:"MaxPower,omitempty"`
	MaxTorque          uint32  `protobuf:"varint,3,opt,name=MaxTorque,proto3" json:"MaxTorque,omitempty"`
	MaxRegenPower      uint32  `protobuf:"varint,4,opt,name=MaxRegenPower,proto3" json:"MaxRegenPower,omitempty"`
	MaxRegenTorque     uint32  `protobuf:"varint,5,opt,name=MaxRegenTorque,proto3" json:"MaxRegenTorque,omitempty"`
	Speed              int32   `protobuf:"varint,6,opt,name=Speed,proto3" json:"Speed,omitempty"`
	Temperature        float32 `protobuf:"fixed32,7,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	CoolantTemperature float32 `protobuf:"fixed32,8,opt,name=CoolantTemperature,proto3" json:"CoolantTemperature,omitempty"`
	Power              int32   `protobuf:"varint,9,opt,name=Power,proto3" json:"Power,omitempty"`
	Torque             int32   `protobuf:"varint,10,opt,name=Torque,proto3" json:"Torque,omitempty"`
}

func (x *VehiclePowertrainElectricMotor) Reset() {
	*x = VehiclePowertrainElectricMotor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainElectricMotor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainElectricMotor) ProtoMessage() {}

func (x *VehiclePowertrainElectricMotor) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainElectricMotor.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainElectricMotor) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{15}
}

func (x *VehiclePowertrainElectricMotor) GetEngineCode() string {
	if x != nil {
		return x.EngineCode
	}
	return ""
}

func (x *VehiclePowertrainElectricMotor) GetMaxPower() uint32 {
	if x != nil {
		return x.MaxPower
	}
	return 0
}

func (x *VehiclePowertrainElectricMotor) GetMaxTorque() uint32 {
	if x != nil {
		return x.MaxTorque
	}
	return 0
}

func (x *VehiclePowertrainElectricMotor) GetMaxRegenPower() uint32 {
	if x != nil {
		return x.MaxRegenPower
	}
	return 0
}

func (x *VehiclePowertrainElectricMotor) GetMaxRegenTorque() uint32 {
	if x != nil {
		return x.MaxRegenTorque
	}
	return 0
}

func (x *VehiclePowertrainElectricMotor) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *VehiclePowertrainElectricMotor) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *VehiclePowertrainElectricMotor) GetCoolantTemperature() float32 {
	if x != nil {
		return x.CoolantTemperature
	}
	return 0
}

func (x *VehiclePowertrainElectricMotor) GetPower() int32 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *VehiclePowertrainElectricMotor) GetTorque() int32 {
	if x != nil {
		return x.Torque
	}
	return 0
}

type VehiclePowertrainTractionBattery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                            string                                         `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ProductionDate                string                                         `protobuf:"bytes,2,opt,name=ProductionDate,proto3" json:"ProductionDate,omitempty"`
	ErrorCodes                    []string                                       `protobuf:"bytes,3,rep,name=ErrorCodes,proto3" json:"ErrorCodes,omitempty"`
	IsPowerConnected              bool                                           `protobuf:"varint,4,opt,name=IsPowerConnected,proto3" json:"IsPowerConnected,omitempty"`
	IsGroundConnected             bool                                           `protobuf:"varint,5,opt,name=IsGroundConnected,proto3" json:"IsGroundConnected,omitempty"`
	Temperature                   *VehiclePowertrainTractionBatteryTemperature   `protobuf:"bytes,6,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	CellVoltage                   *VehiclePowertrainTractionBatteryCellVoltage   `protobuf:"bytes,7,opt,name=CellVoltage,proto3" json:"CellVoltage,omitempty"`
	GrossCapacity                 uint32                                         `protobuf:"varint,8,opt,name=GrossCapacity,proto3" json:"GrossCapacity,omitempty"`
	NetCapacity                   uint32                                         `protobuf:"varint,9,opt,name=NetCapacity,proto3" json:"NetCapacity,omitempty"`
	StateOfHealth                 float32                                        `protobuf:"fixed32,10,opt,name=StateOfHealth,proto3" json:"StateOfHealth,omitempty"`
	StateOfCharge                 *VehiclePowertrainTractionBatteryStateOfCharge `protobuf:"bytes,11,opt,name=StateOfCharge,proto3" json:"StateOfCharge,omitempty"`
	NominalVoltage                uint32                                         `protobuf:"varint,12,opt,name=NominalVoltage,proto3" json:"NominalVoltage,omitempty"`
	MaxVoltage                    uint32                                         `protobuf:"varint,13,opt,name=MaxVoltage,proto3" json:"MaxVoltage,omitempty"`
	CurrentVoltage                float32                                        `protobuf:"fixed32,14,opt,name=CurrentVoltage,proto3" json:"CurrentVoltage,omitempty"`
	CurrentCurrent                float32                                        `protobuf:"fixed32,15,opt,name=CurrentCurrent,proto3" json:"CurrentCurrent,omitempty"`
	CurrentPower                  float32                                        `protobuf:"fixed32,16,opt,name=CurrentPower,proto3" json:"CurrentPower,omitempty"`
	AccumulatedChargedEnergy      float32                                        `protobuf:"fixed32,17,opt,name=AccumulatedChargedEnergy,proto3" json:"AccumulatedChargedEnergy,omitempty"`
	AccumulatedConsumedEnergy     float32                                        `protobuf:"fixed32,18,opt,name=AccumulatedConsumedEnergy,proto3" json:"AccumulatedConsumedEnergy,omitempty"`
	AccumulatedChargedThroughput  float32                                        `protobuf:"fixed32,19,opt,name=AccumulatedChargedThroughput,proto3" json:"AccumulatedChargedThroughput,omitempty"`
	AccumulatedConsumedThroughput float32                                        `protobuf:"fixed32,20,opt,name=AccumulatedConsumedThroughput,proto3" json:"AccumulatedConsumedThroughput,omitempty"`
	PowerLoss                     float32                                        `protobuf:"fixed32,21,opt,name=PowerLoss,proto3" json:"PowerLoss,omitempty"`
	Range                         uint32                                         `protobuf:"varint,22,opt,name=Range,proto3" json:"Range,omitempty"`
	TimeRemaining                 uint32                                         `protobuf:"varint,23,opt,name=TimeRemaining,proto3" json:"TimeRemaining,omitempty"`
	Charging                      *VehiclePowertrainTractionBatteryCharging      `protobuf:"bytes,24,opt,name=Charging,proto3" json:"Charging,omitempty"`
	DCDC                          *VehiclePowertrainTractionBatteryDCDC          `protobuf:"bytes,25,opt,name=DCDC,proto3" json:"DCDC,omitempty"`
}

func (x *VehiclePowertrainTractionBattery) Reset() {
	*x = VehiclePowertrainTractionBattery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainTractionBattery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainTractionBattery) ProtoMessage() {}

func (x *VehiclePowertrainTractionBattery) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainTractionBattery.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainTractionBattery) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{16}
}

func (x *VehiclePowertrainTractionBattery) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VehiclePowertrainTractionBattery) GetProductionDate() string {
	if x != nil {
		return x.ProductionDate
	}
	return ""
}

func (x *VehiclePowertrainTractionBattery) GetErrorCodes() []string {
	if x != nil {
		return x.ErrorCodes
	}
	return nil
}

func (x *VehiclePowertrainTractionBattery) GetIsPowerConnected() bool {
	if x != nil {
		return x.IsPowerConnected
	}
	return false
}

func (x *VehiclePowertrainTractionBattery) GetIsGroundConnected() bool {
	if x != nil {
		return x.IsGroundConnected
	}
	return false
}

func (x *VehiclePowertrainTractionBattery) GetTemperature() *VehiclePowertrainTractionBatteryTemperature {
	if x != nil {
		return x.Temperature
	}
	return nil
}

func (x *VehiclePowertrainTractionBattery) GetCellVoltage() *VehiclePowertrainTractionBatteryCellVoltage {
	if x != nil {
		return x.CellVoltage
	}
	return nil
}

func (x *VehiclePowertrainTractionBattery) GetGrossCapacity() uint32 {
	if x != nil {
		return x.GrossCapacity
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetNetCapacity() uint32 {
	if x != nil {
		return x.NetCapacity
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetStateOfHealth() float32 {
	if x != nil {
		return x.StateOfHealth
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetStateOfCharge() *VehiclePowertrainTractionBatteryStateOfCharge {
	if x != nil {
		return x.StateOfCharge
	}
	return nil
}

func (x *VehiclePowertrainTractionBattery) GetNominalVoltage() uint32 {
	if x != nil {
		return x.NominalVoltage
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetMaxVoltage() uint32 {
	if x != nil {
		return x.MaxVoltage
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetCurrentVoltage() float32 {
	if x != nil {
		return x.CurrentVoltage
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetCurrentCurrent() float32 {
	if x != nil {
		return x.CurrentCurrent
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetCurrentPower() float32 {
	if x != nil {
		return x.CurrentPower
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetAccumulatedChargedEnergy() float32 {
	if x != nil {
		return x.AccumulatedChargedEnergy
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetAccumulatedConsumedEnergy() float32 {
	if x != nil {
		return x.AccumulatedConsumedEnergy
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetAccumulatedChargedThroughput() float32 {
	if x != nil {
		return x.AccumulatedChargedThroughput
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetAccumulatedConsumedThroughput() float32 {
	if x != nil {
		return x.AccumulatedConsumedThroughput
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetPowerLoss() float32 {
	if x != nil {
		return x.PowerLoss
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetRange() uint32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetTimeRemaining() uint32 {
	if x != nil {
		return x.TimeRemaining
	}
	return 0
}

func (x *VehiclePowertrainTractionBattery) GetCharging() *VehiclePowertrainTractionBatteryCharging {
	if x != nil {
		return x.Charging
	}
	return nil
}

func (x *VehiclePowertrainTractionBattery) GetDCDC() *VehiclePowertrainTractionBatteryDCDC {
	if x != nil {
		return x.DCDC
	}
	return nil
}

type VehiclePowertrainTractionBatteryTemperature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Average         float32   `protobuf:"fixed32,1,opt,name=Average,proto3" json:"Average,omitempty"`
	Min             float32   `protobuf:"fixed32,2,opt,name=Min,proto3" json:"Min,omitempty"`
	Max             float32   `protobuf:"fixed32,3,opt,name=Max,proto3" json:"Max,omitempty"`
	CellTemperature []float32 `protobuf:"fixed32,4,rep,packed,name=CellTemperature,proto3" json:"CellTemperature,omitempty"`
}

func (x *VehiclePowertrainTractionBatteryTemperature) Reset() {
	*x = VehiclePowertrainTractionBatteryTemperature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainTractionBatteryTemperature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainTractionBatteryTemperature) ProtoMessage() {}

func (x *VehiclePowertrainTractionBatteryTemperature) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainTractionBatteryTemperature.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainTractionBatteryTemperature) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{17}
}

func (x *VehiclePowertrainTractionBatteryTemperature) GetAverage() float32 {
	if x != nil {
		return x.Average
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryTemperature) GetMin() float32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryTemperature) GetMax() float32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryTemperature) GetCellTemperature() []float32 {
	if x != nil {
		return x.CellTemperature
	}
	return nil
}

type VehiclePowertrainTractionBatteryCellVoltage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min          float32   `protobuf:"fixed32,1,opt,name=Min,proto3" json:"Min,omitempty"`
	IdMin        uint32    `protobuf:"varint,2,opt,name=IdMin,proto3" json:"IdMin,omitempty"`
	Max          float32   `protobuf:"fixed32,3,opt,name=Max,proto3" json:"Max,omitempty"`
	IdMax        uint32    `protobuf:"varint,4,opt,name=IdMax,proto3" json:"IdMax,omitempty"`
	CellVoltages []float32 `protobuf:"fixed32,5,rep,packed,name=CellVoltages,proto3" json:"CellVoltages,omitempty"`
}

func (x *VehiclePowertrainTractionBatteryCellVoltage) Reset() {
	*x = VehiclePowertrainTractionBatteryCellVoltage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainTractionBatteryCellVoltage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainTractionBatteryCellVoltage) ProtoMessage() {}

func (x *VehiclePowertrainTractionBatteryCellVoltage) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainTractionBatteryCellVoltage.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainTractionBatteryCellVoltage) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{18}
}

func (x *VehiclePowertrainTractionBatteryCellVoltage) GetMin() float32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryCellVoltage) GetIdMin() uint32 {
	if x != nil {
		return x.IdMin
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryCellVoltage) GetMax() float32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryCellVoltage) GetIdMax() uint32 {
	if x != nil {
		return x.IdMax
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryCellVoltage) GetCellVoltages() []float32 {
	if x != nil {
		return x.CellVoltages
	}
	return nil
}

type VehiclePowertrainTractionBatteryStateOfCharge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current       float32 `protobuf:"fixed32,1,opt,name=Current,proto3" json:"Current,omitempty"`
	Displayed     float32 `protobuf:"fixed32,2,opt,name=Displayed,proto3" json:"Displayed,omitempty"`
	CurrentEnergy float32 `protobuf:"fixed32,3,opt,name=CurrentEnergy,proto3" json:"CurrentEnergy,omitempty"`
}

func (x *VehiclePowertrainTractionBatteryStateOfCharge) Reset() {
	*x = VehiclePowertrainTractionBatteryStateOfCharge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainTractionBatteryStateOfCharge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainTractionBatteryStateOfCharge) ProtoMessage() {}

func (x *VehiclePowertrainTractionBatteryStateOfCharge) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainTractionBatteryStateOfCharge.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainTractionBatteryStateOfCharge) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{19}
}

func (x *VehiclePowertrainTractionBatteryStateOfCharge) GetCurrent() float32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryStateOfCharge) GetDisplayed() float32 {
	if x != nil {
		return x.Displayed
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryStateOfCharge) GetCurrentEnergy() float32 {
	if x != nil {
		return x.CurrentEnergy
	}
	return 0
}

type VehiclePowertrainTractionBatteryCharging struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChargeLimit              uint32                                                          `protobuf:"varint,1,opt,name=ChargeLimit,proto3" json:"ChargeLimit,omitempty"`
	MaximumChargingCurrent   *VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent `protobuf:"bytes,2,opt,name=MaximumChargingCurrent,proto3" json:"MaximumChargingCurrent,omitempty"`
	ChargePortFlap           string                                                          `protobuf:"bytes,3,opt,name=ChargePortFlap,proto3" json:"ChargePortFlap,omitempty"`
	IsChargePortFlapOpen     bool                                                            `protobuf:"varint,4,opt,name=IsChargePortFlapOpen,proto3" json:"IsChargePortFlapOpen,omitempty"`
	IsChargingCableConnected bool                                                            `protobuf:"varint,5,opt,name=IsChargingCableConnected,proto3" json:"IsChargingCableConnected,omitempty"`
	IsChargingCableLocked    bool                                                            `protobuf:"varint,6,opt,name=IsChargingCableLocked,proto3" json:"IsChargingCableLocked,omitempty"`
	ChargePlugType           []string                                                        `protobuf:"bytes,7,rep,name=ChargePlugType,proto3" json:"ChargePlugType,omitempty"`
	ChargePortType           []string                                                        `protobuf:"bytes,8,rep,name=ChargePortType,proto3" json:"ChargePortType,omitempty"`
	ChargePortPosition       []string                                                        `protobuf:"bytes,9,rep,name=ChargePortPosition,proto3" json:"ChargePortPosition,omitempty"`
	Mode                     string                                                          `protobuf:"bytes,10,opt,name=Mode,proto3" json:"Mode,omitempty"`
	IsCharging               bool                                                            `protobuf:"varint,11,opt,name=IsCharging,proto3" json:"IsCharging,omitempty"`
	IsDischarging            bool                                                            `protobuf:"varint,12,opt,name=IsDischarging,proto3" json:"IsDischarging,omitempty"`
	StartStopCharging        string                                                          `protobuf:"bytes,13,opt,name=StartStopCharging,proto3" json:"StartStopCharging,omitempty"`
	ChargeCurrent            *VehiclePowertrainTractionBatteryChargingChargeCurrent          `protobuf:"bytes,14,opt,name=ChargeCurrent,proto3" json:"ChargeCurrent,omitempty"`
	ChargeVoltage            *VehiclePowertrainTractionBatteryChargingChargeVoltage          `protobuf:"bytes,15,opt,name=ChargeVoltage,proto3" json:"ChargeVoltage,omitempty"`
	AveragePower             float32                                                         `protobuf:"fixed32,16,opt,name=AveragePower,proto3" json:"AveragePower,omitempty"`
	MaxPower                 float32                                                         `protobuf:"fixed32,17,opt,name=MaxPower,proto3" json:"MaxPower,omitempty"`
	EvseId                   string                                                          `protobuf:"bytes,18,opt,name=EvseId,proto3" json:"EvseId,omitempty"`
	Location                 *VehiclePowertrainTractionBatteryChargingLocation               `protobuf:"bytes,19,opt,name=Location,proto3" json:"Location,omitempty"`
	PowerLoss                float32                                                         `protobuf:"fixed32,20,opt,name=PowerLoss,proto3" json:"PowerLoss,omitempty"`
	Temperature              float32                                                         `protobuf:"fixed32,21,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	ChargeRate               float32                                                         `protobuf:"fixed32,22,opt,name=ChargeRate,proto3" json:"ChargeRate,omitempty"`
	TimeToComplete           uint32                                                          `protobuf:"varint,23,opt,name=TimeToComplete,proto3" json:"TimeToComplete,omitempty"`
	Timer                    *VehiclePowertrainTractionBatteryChargingTimer                  `protobuf:"bytes,24,opt,name=Timer,proto3" json:"Timer,omitempty"`
}

func (x *VehiclePowertrainTractionBatteryCharging) Reset() {
	*x = VehiclePowertrainTractionBatteryCharging{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainTractionBatteryCharging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainTractionBatteryCharging) ProtoMessage() {}

func (x *VehiclePowertrainTractionBatteryCharging) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainTractionBatteryCharging.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainTractionBatteryCharging) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{20}
}

func (x *VehiclePowertrainTractionBatteryCharging) GetChargeLimit() uint32 {
	if x != nil {
		return x.ChargeLimit
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryCharging) GetMaximumChargingCurrent() *VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent {
	if x != nil {
		return x.MaximumChargingCurrent
	}
	return nil
}

func (x *VehiclePowertrainTractionBatteryCharging) GetChargePortFlap() string {
	if x != nil {
		return x.ChargePortFlap
	}
	return ""
}

func (x *VehiclePowertrainTractionBatteryCharging) GetIsChargePortFlapOpen() bool {
	if x != nil {
		return x.IsChargePortFlapOpen
	}
	return false
}

func (x *VehiclePowertrainTractionBatteryCharging) GetIsChargingCableConnected() bool {
	if x != nil {
		return x.IsChargingCableConnected
	}
	return false
}

func (x *VehiclePowertrainTractionBatteryCharging) GetIsChargingCableLocked() bool {
	if x != nil {
		return x.IsChargingCableLocked
	}
	return false
}

func (x *VehiclePowertrainTractionBatteryCharging) GetChargePlugType() []string {
	if x != nil {
		return x.ChargePlugType
	}
	return nil
}

func (x *VehiclePowertrainTractionBatteryCharging) GetChargePortType() []string {
	if x != nil {
		return x.ChargePortType
	}
	return nil
}

func (x *VehiclePowertrainTractionBatteryCharging) GetChargePortPosition() []string {
	if x != nil {
		return x.ChargePortPosition
	}
	return nil
}

func (x *VehiclePowertrainTractionBatteryCharging) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *VehiclePowertrainTractionBatteryCharging) GetIsCharging() bool {
	if x != nil {
		return x.IsCharging
	}
	return false
}

func (x *VehiclePowertrainTractionBatteryCharging) GetIsDischarging() bool {
	if x != nil {
		return x.IsDischarging
	}
	return false
}

func (x *VehiclePowertrainTractionBatteryCharging) GetStartStopCharging() string {
	if x != nil {
		return x.StartStopCharging
	}
	return ""
}

func (x *VehiclePowertrainTractionBatteryCharging) GetChargeCurrent() *VehiclePowertrainTractionBatteryChargingChargeCurrent {
	if x != nil {
		return x.ChargeCurrent
	}
	return nil
}

func (x *VehiclePowertrainTractionBatteryCharging) GetChargeVoltage() *VehiclePowertrainTractionBatteryChargingChargeVoltage {
	if x != nil {
		return x.ChargeVoltage
	}
	return nil
}

func (x *VehiclePowertrainTractionBatteryCharging) GetAveragePower() float32 {
	if x != nil {
		return x.AveragePower
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryCharging) GetMaxPower() float32 {
	if x != nil {
		return x.MaxPower
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryCharging) GetEvseId() string {
	if x != nil {
		return x.EvseId
	}
	return ""
}

func (x *VehiclePowertrainTractionBatteryCharging) GetLocation() *VehiclePowertrainTractionBatteryChargingLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *VehiclePowertrainTractionBatteryCharging) GetPowerLoss() float32 {
	if x != nil {
		return x.PowerLoss
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryCharging) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryCharging) GetChargeRate() float32 {
	if x != nil {
		return x.ChargeRate
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryCharging) GetTimeToComplete() uint32 {
	if x != nil {
		return x.TimeToComplete
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryCharging) GetTimer() *VehiclePowertrainTractionBatteryChargingTimer {
	if x != nil {
		return x.Timer
	}
	return nil
}

type VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DC     float32 `protobuf:"fixed32,1,opt,name=DC,proto3" json:"DC,omitempty"`
	Phase1 float32 `protobuf:"fixed32,2,opt,name=Phase1,proto3" json:"Phase1,omitempty"`
	Phase2 float32 `protobuf:"fixed32,3,opt,name=Phase2,proto3" json:"Phase2,omitempty"`
	Phase3 float32 `protobuf:"fixed32,4,opt,name=Phase3,proto3" json:"Phase3,omitempty"`
}

func (x *VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent) Reset() {
	*x = VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent) ProtoMessage() {}

func (x *VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{21}
}

func (x *VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent) GetDC() float32 {
	if x != nil {
		return x.DC
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent) GetPhase1() float32 {
	if x != nil {
		return x.Phase1
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent) GetPhase2() float32 {
	if x != nil {
		return x.Phase2
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent) GetPhase3() float32 {
	if x != nil {
		return x.Phase3
	}
	return 0
}

type VehiclePowertrainTractionBatteryChargingChargeCurrent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DC     float32 `protobuf:"fixed32,1,opt,name=DC,proto3" json:"DC,omitempty"`
	Phase1 float32 `protobuf:"fixed32,2,opt,name=Phase1,proto3" json:"Phase1,omitempty"`
	Phase2 float32 `protobuf:"fixed32,3,opt,name=Phase2,proto3" json:"Phase2,omitempty"`
	Phase3 float32 `protobuf:"fixed32,4,opt,name=Phase3,proto3" json:"Phase3,omitempty"`
}

func (x *VehiclePowertrainTractionBatteryChargingChargeCurrent) Reset() {
	*x = VehiclePowertrainTractionBatteryChargingChargeCurrent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainTractionBatteryChargingChargeCurrent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainTractionBatteryChargingChargeCurrent) ProtoMessage() {}

func (x *VehiclePowertrainTractionBatteryChargingChargeCurrent) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainTractionBatteryChargingChargeCurrent.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainTractionBatteryChargingChargeCurrent) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{22}
}

func (x *VehiclePowertrainTractionBatteryChargingChargeCurrent) GetDC() float32 {
	if x != nil {
		return x.DC
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryChargingChargeCurrent) GetPhase1() float32 {
	if x != nil {
		return x.Phase1
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryChargingChargeCurrent) GetPhase2() float32 {
	if x != nil {
		return x.Phase2
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryChargingChargeCurrent) GetPhase3() float32 {
	if x != nil {
		return x.Phase3
	}
	return 0
}

type VehiclePowertrainTractionBatteryChargingChargeVoltage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DC     float32 `protobuf:"fixed32,1,opt,name=DC,proto3" json:"DC,omitempty"`
	Phase1 float32 `protobuf:"fixed32,2,opt,name=Phase1,proto3" json:"Phase1,omitempty"`
	Phase2 float32 `protobuf:"fixed32,3,opt,name=Phase2,proto3" json:"Phase2,omitempty"`
	Phase3 float32 `protobuf:"fixed32,4,opt,name=Phase3,proto3" json:"Phase3,omitempty"`
}

func (x *VehiclePowertrainTractionBatteryChargingChargeVoltage) Reset() {
	*x = VehiclePowertrainTractionBatteryChargingChargeVoltage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainTractionBatteryChargingChargeVoltage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainTractionBatteryChargingChargeVoltage) ProtoMessage() {}

func (x *VehiclePowertrainTractionBatteryChargingChargeVoltage) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainTractionBatteryChargingChargeVoltage.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainTractionBatteryChargingChargeVoltage) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{23}
}

func (x *VehiclePowertrainTractionBatteryChargingChargeVoltage) GetDC() float32 {
	if x != nil {
		return x.DC
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryChargingChargeVoltage) GetPhase1() float32 {
	if x != nil {
		return x.Phase1
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryChargingChargeVoltage) GetPhase2() float32 {
	if x != nil {
		return x.Phase2
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryChargingChargeVoltage) GetPhase3() float32 {
	if x != nil {
		return x.Phase3
	}
	return 0
}

type VehiclePowertrainTractionBatteryChargingLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	Altitude  float64 `protobuf:"fixed64,3,opt,name=Altitude,proto3" json:"Altitude,omitempty"`
}

func (x *VehiclePowertrainTractionBatteryChargingLocation) Reset() {
	*x = VehiclePowertrainTractionBatteryChargingLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainTractionBatteryChargingLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainTractionBatteryChargingLocation) ProtoMessage() {}

func (x *VehiclePowertrainTractionBatteryChargingLocation) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainTractionBatteryChargingLocation.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainTractionBatteryChargingLocation) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{24}
}

func (x *VehiclePowertrainTractionBatteryChargingLocation) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryChargingLocation) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryChargingLocation) GetAltitude() float64 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

type VehiclePowertrainTractionBatteryChargingTimer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode string `protobuf:"bytes,1,opt,name=Mode,proto3" json:"Mode,omitempty"`
	Time string `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *VehiclePowertrainTractionBatteryChargingTimer) Reset() {
	*x = VehiclePowertrainTractionBatteryChargingTimer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainTractionBatteryChargingTimer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainTractionBatteryChargingTimer) ProtoMessage() {}

func (x *VehiclePowertrainTractionBatteryChargingTimer) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainTractionBatteryChargingTimer.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainTractionBatteryChargingTimer) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{25}
}

func (x *VehiclePowertrainTractionBatteryChargingTimer) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *VehiclePowertrainTractionBatteryChargingTimer) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type VehiclePowertrainTractionBatteryDCDC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PowerLoss   float32 `protobuf:"fixed32,1,opt,name=PowerLoss,proto3" json:"PowerLoss,omitempty"`
	Temperature float32 `protobuf:"fixed32,2,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
}

func (x *VehiclePowertrainTractionBatteryDCDC) Reset() {
	*x = VehiclePowertrainTractionBatteryDCDC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainTractionBatteryDCDC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainTractionBatteryDCDC) ProtoMessage() {}

func (x *VehiclePowertrainTractionBatteryDCDC) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainTractionBatteryDCDC.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainTractionBatteryDCDC) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{26}
}

func (x *VehiclePowertrainTractionBatteryDCDC) GetPowerLoss() float32 {
	if x != nil {
		return x.PowerLoss
	}
	return 0
}

func (x *VehiclePowertrainTractionBatteryDCDC) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

type VehiclePowertrainFuelSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SupportedFuelTypes       []string `protobuf:"bytes,1,rep,name=SupportedFuelTypes,proto3" json:"SupportedFuelTypes,omitempty"`
	SupportedFuel            []string `protobuf:"bytes,2,rep,name=SupportedFuel,proto3" json:"SupportedFuel,omitempty"`
	HybridType               string   `protobuf:"bytes,3,opt,name=HybridType,proto3" json:"HybridType,omitempty"`
	TankCapacity             float32  `protobuf:"fixed32,4,opt,name=TankCapacity,proto3" json:"TankCapacity,omitempty"`
	AbsoluteLevel            float32  `protobuf:"fixed32,5,opt,name=AbsoluteLevel,proto3" json:"AbsoluteLevel,omitempty"`
	RelativeLevel            uint32   `protobuf:"varint,6,opt,name=RelativeLevel,proto3" json:"RelativeLevel,omitempty"`
	Range                    uint32   `protobuf:"varint,7,opt,name=Range,proto3" json:"Range,omitempty"`
	TimeRemaining            uint32   `protobuf:"varint,8,opt,name=TimeRemaining,proto3" json:"TimeRemaining,omitempty"`
	InstantConsumption       float32  `protobuf:"fixed32,9,opt,name=InstantConsumption,proto3" json:"InstantConsumption,omitempty"`
	AverageConsumption       float32  `protobuf:"fixed32,10,opt,name=AverageConsumption,proto3" json:"AverageConsumption,omitempty"`
	ConsumptionSinceStart    float32  `protobuf:"fixed32,11,opt,name=ConsumptionSinceStart,proto3" json:"ConsumptionSinceStart,omitempty"`
	IsEngineStopStartEnabled bool     `protobuf:"varint,12,opt,name=IsEngineStopStartEnabled,proto3" json:"IsEngineStopStartEnabled,omitempty"`
	IsFuelLevelLow           bool     `protobuf:"varint,13,opt,name=IsFuelLevelLow,proto3" json:"IsFuelLevelLow,omitempty"`
	RefuelPortPosition       []string `protobuf:"bytes,14,rep,name=RefuelPortPosition,proto3" json:"RefuelPortPosition,omitempty"`
	IsFuelPortFlapOpen       bool     `protobuf:"varint,15,opt,name=IsFuelPortFlapOpen,proto3" json:"IsFuelPortFlapOpen,omitempty"`
}

func (x *VehiclePowertrainFuelSystem) Reset() {
	*x = VehiclePowertrainFuelSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePowertrainFuelSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePowertrainFuelSystem) ProtoMessage() {}

func (x *VehiclePowertrainFuelSystem) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePowertrainFuelSystem.ProtoReflect.Descriptor instead.
func (*VehiclePowertrainFuelSystem) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{27}
}

func (x *VehiclePowertrainFuelSystem) GetSupportedFuelTypes() []string {
	if x != nil {
		return x.SupportedFuelTypes
	}
	return nil
}

func (x *VehiclePowertrainFuelSystem) GetSupportedFuel() []string {
	if x != nil {
		return x.SupportedFuel
	}
	return nil
}

func (x *VehiclePowertrainFuelSystem) GetHybridType() string {
	if x != nil {
		return x.HybridType
	}
	return ""
}

func (x *VehiclePowertrainFuelSystem) GetTankCapacity() float32 {
	if x != nil {
		return x.TankCapacity
	}
	return 0
}

func (x *VehiclePowertrainFuelSystem) GetAbsoluteLevel() float32 {
	if x != nil {
		return x.AbsoluteLevel
	}
	return 0
}

func (x *VehiclePowertrainFuelSystem) GetRelativeLevel() uint32 {
	if x != nil {
		return x.RelativeLevel
	}
	return 0
}

func (x *VehiclePowertrainFuelSystem) GetRange() uint32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *VehiclePowertrainFuelSystem) GetTimeRemaining() uint32 {
	if x != nil {
		return x.TimeRemaining
	}
	return 0
}

func (x *VehiclePowertrainFuelSystem) GetInstantConsumption() float32 {
	if x != nil {
		return x.InstantConsumption
	}
	return 0
}

func (x *VehiclePowertrainFuelSystem) GetAverageConsumption() float32 {
	if x != nil {
		return x.AverageConsumption
	}
	return 0
}

func (x *VehiclePowertrainFuelSystem) GetConsumptionSinceStart() float32 {
	if x != nil {
		return x.ConsumptionSinceStart
	}
	return 0
}

func (x *VehiclePowertrainFuelSystem) GetIsEngineStopStartEnabled() bool {
	if x != nil {
		return x.IsEngineStopStartEnabled
	}
	return false
}

func (x *VehiclePowertrainFuelSystem) GetIsFuelLevelLow() bool {
	if x != nil {
		return x.IsFuelLevelLow
	}
	return false
}

func (x *VehiclePowertrainFuelSystem) GetRefuelPortPosition() []string {
	if x != nil {
		return x.RefuelPortPosition
	}
	return nil
}

func (x *VehiclePowertrainFuelSystem) GetIsFuelPortFlapOpen() bool {
	if x != nil {
		return x.IsFuelPortFlapOpen
	}
	return false
}

type VehicleBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BodyType                string                    `protobuf:"bytes,1,opt,name=BodyType,proto3" json:"BodyType,omitempty"`
	RefuelPosition          string                    `protobuf:"bytes,2,opt,name=RefuelPosition,proto3" json:"RefuelPosition,omitempty"`
	Hood                    *VehicleBodyHood          `protobuf:"bytes,3,opt,name=Hood,proto3" json:"Hood,omitempty"`
	Trunk                   *VehicleBodyTrunk         `protobuf:"bytes,4,opt,name=Trunk,proto3" json:"Trunk,omitempty"`
	Horn                    *VehicleBodyHorn          `protobuf:"bytes,5,opt,name=Horn,proto3" json:"Horn,omitempty"`
	Raindetection           *VehicleBodyRaindetection `protobuf:"bytes,6,opt,name=Raindetection,proto3" json:"Raindetection,omitempty"`
	Windshield              *VehicleBodyWindshield    `protobuf:"bytes,7,opt,name=Windshield,proto3" json:"Windshield,omitempty"`
	Lights                  *VehicleBodyLights        `protobuf:"bytes,8,opt,name=Lights,proto3" json:"Lights,omitempty"`
	Mirrors                 *VehicleBodyMirrors       `protobuf:"bytes,9,opt,name=Mirrors,proto3" json:"Mirrors,omitempty"`
	RearMainSpoilerPosition float32                   `protobuf:"fixed32,10,opt,name=RearMainSpoilerPosition,proto3" json:"RearMainSpoilerPosition,omitempty"`
	PowerOptimizeLevel      uint32                    `protobuf:"varint,11,opt,name=PowerOptimizeLevel,proto3" json:"PowerOptimizeLevel,omitempty"`
	IsAutoPowerOptimize     bool                      `protobuf:"varint,12,opt,name=IsAutoPowerOptimize,proto3" json:"IsAutoPowerOptimize,omitempty"`
}

func (x *VehicleBody) Reset() {
	*x = VehicleBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBody) ProtoMessage() {}

func (x *VehicleBody) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBody.ProtoReflect.Descriptor instead.
func (*VehicleBody) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{28}
}

func (x *VehicleBody) GetBodyType() string {
	if x != nil {
		return x.BodyType
	}
	return ""
}

func (x *VehicleBody) GetRefuelPosition() string {
	if x != nil {
		return x.RefuelPosition
	}
	return ""
}

func (x *VehicleBody) GetHood() *VehicleBodyHood {
	if x != nil {
		return x.Hood
	}
	return nil
}

func (x *VehicleBody) GetTrunk() *VehicleBodyTrunk {
	if x != nil {
		return x.Trunk
	}
	return nil
}

func (x *VehicleBody) GetHorn() *VehicleBodyHorn {
	if x != nil {
		return x.Horn
	}
	return nil
}

func (x *VehicleBody) GetRaindetection() *VehicleBodyRaindetection {
	if x != nil {
		return x.Raindetection
	}
	return nil
}

func (x *VehicleBody) GetWindshield() *VehicleBodyWindshield {
	if x != nil {
		return x.Windshield
	}
	return nil
}

func (x *VehicleBody) GetLights() *VehicleBodyLights {
	if x != nil {
		return x.Lights
	}
	return nil
}

func (x *VehicleBody) GetMirrors() *VehicleBodyMirrors {
	if x != nil {
		return x.Mirrors
	}
	return nil
}

func (x *VehicleBody) GetRearMainSpoilerPosition() float32 {
	if x != nil {
		return x.RearMainSpoilerPosition
	}
	return 0
}

func (x *VehicleBody) GetPowerOptimizeLevel() uint32 {
	if x != nil {
		return x.PowerOptimizeLevel
	}
	return 0
}

func (x *VehicleBody) GetIsAutoPowerOptimize() bool {
	if x != nil {
		return x.IsAutoPowerOptimize
	}
	return false
}

type VehicleBodyHood struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen   bool   `protobuf:"varint,1,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position uint32 `protobuf:"varint,2,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch   string `protobuf:"bytes,3,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleBodyHood) Reset() {
	*x = VehicleBodyHood{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyHood) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyHood) ProtoMessage() {}

func (x *VehicleBodyHood) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyHood.ProtoReflect.Descriptor instead.
func (*VehicleBodyHood) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{29}
}

func (x *VehicleBodyHood) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleBodyHood) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleBodyHood) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

type VehicleBodyTrunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Front *VehicleBodyTrunkFront `protobuf:"bytes,1,opt,name=Front,proto3" json:"Front,omitempty"`
	Rear  *VehicleBodyTrunkRear  `protobuf:"bytes,2,opt,name=Rear,proto3" json:"Rear,omitempty"`
}

func (x *VehicleBodyTrunk) Reset() {
	*x = VehicleBodyTrunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyTrunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyTrunk) ProtoMessage() {}

func (x *VehicleBodyTrunk) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyTrunk.ProtoReflect.Descriptor instead.
func (*VehicleBodyTrunk) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{30}
}

func (x *VehicleBodyTrunk) GetFront() *VehicleBodyTrunkFront {
	if x != nil {
		return x.Front
	}
	return nil
}

func (x *VehicleBodyTrunk) GetRear() *VehicleBodyTrunkRear {
	if x != nil {
		return x.Rear
	}
	return nil
}

type VehicleBodyTrunkFront struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLocked  bool   `protobuf:"varint,1,opt,name=IsLocked,proto3" json:"IsLocked,omitempty"`
	IsOpen    bool   `protobuf:"varint,2,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position  uint32 `protobuf:"varint,3,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch    string `protobuf:"bytes,4,opt,name=Switch,proto3" json:"Switch,omitempty"`
	IsLightOn bool   `protobuf:"varint,5,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
}

func (x *VehicleBodyTrunkFront) Reset() {
	*x = VehicleBodyTrunkFront{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyTrunkFront) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyTrunkFront) ProtoMessage() {}

func (x *VehicleBodyTrunkFront) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyTrunkFront.ProtoReflect.Descriptor instead.
func (*VehicleBodyTrunkFront) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{31}
}

func (x *VehicleBodyTrunkFront) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *VehicleBodyTrunkFront) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleBodyTrunkFront) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleBodyTrunkFront) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

func (x *VehicleBodyTrunkFront) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

type VehicleBodyTrunkRear struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLocked  bool   `protobuf:"varint,1,opt,name=IsLocked,proto3" json:"IsLocked,omitempty"`
	IsOpen    bool   `protobuf:"varint,2,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position  uint32 `protobuf:"varint,3,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch    string `protobuf:"bytes,4,opt,name=Switch,proto3" json:"Switch,omitempty"`
	IsLightOn bool   `protobuf:"varint,5,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
}

func (x *VehicleBodyTrunkRear) Reset() {
	*x = VehicleBodyTrunkRear{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyTrunkRear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyTrunkRear) ProtoMessage() {}

func (x *VehicleBodyTrunkRear) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyTrunkRear.ProtoReflect.Descriptor instead.
func (*VehicleBodyTrunkRear) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{32}
}

func (x *VehicleBodyTrunkRear) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *VehicleBodyTrunkRear) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleBodyTrunkRear) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleBodyTrunkRear) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

func (x *VehicleBodyTrunkRear) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

type VehicleBodyHorn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsActive bool `protobuf:"varint,1,opt,name=IsActive,proto3" json:"IsActive,omitempty"`
}

func (x *VehicleBodyHorn) Reset() {
	*x = VehicleBodyHorn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyHorn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyHorn) ProtoMessage() {}

func (x *VehicleBodyHorn) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyHorn.ProtoReflect.Descriptor instead.
func (*VehicleBodyHorn) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{33}
}

func (x *VehicleBodyHorn) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type VehicleBodyRaindetection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Intensity uint32 `protobuf:"varint,1,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
}

func (x *VehicleBodyRaindetection) Reset() {
	*x = VehicleBodyRaindetection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyRaindetection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyRaindetection) ProtoMessage() {}

func (x *VehicleBodyRaindetection) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyRaindetection.ProtoReflect.Descriptor instead.
func (*VehicleBodyRaindetection) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{34}
}

func (x *VehicleBodyRaindetection) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

type VehicleBodyWindshield struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Front *VehicleBodyWindshieldFront `protobuf:"bytes,1,opt,name=Front,proto3" json:"Front,omitempty"`
	Rear  *VehicleBodyWindshieldRear  `protobuf:"bytes,2,opt,name=Rear,proto3" json:"Rear,omitempty"`
}

func (x *VehicleBodyWindshield) Reset() {
	*x = VehicleBodyWindshield{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyWindshield) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyWindshield) ProtoMessage() {}

func (x *VehicleBodyWindshield) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyWindshield.ProtoReflect.Descriptor instead.
func (*VehicleBodyWindshield) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{35}
}

func (x *VehicleBodyWindshield) GetFront() *VehicleBodyWindshieldFront {
	if x != nil {
		return x.Front
	}
	return nil
}

func (x *VehicleBodyWindshield) GetRear() *VehicleBodyWindshieldRear {
	if x != nil {
		return x.Rear
	}
	return nil
}

type VehicleBodyWindshieldFront struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wiping      *VehicleBodyWindshieldFrontWiping      `protobuf:"bytes,1,opt,name=Wiping,proto3" json:"Wiping,omitempty"`
	IsHeatingOn bool                                   `protobuf:"varint,2,opt,name=IsHeatingOn,proto3" json:"IsHeatingOn,omitempty"`
	WasherFluid *VehicleBodyWindshieldFrontWasherFluid `protobuf:"bytes,3,opt,name=WasherFluid,proto3" json:"WasherFluid,omitempty"`
}

func (x *VehicleBodyWindshieldFront) Reset() {
	*x = VehicleBodyWindshieldFront{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyWindshieldFront) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyWindshieldFront) ProtoMessage() {}

func (x *VehicleBodyWindshieldFront) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyWindshieldFront.ProtoReflect.Descriptor instead.
func (*VehicleBodyWindshieldFront) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{36}
}

func (x *VehicleBodyWindshieldFront) GetWiping() *VehicleBodyWindshieldFrontWiping {
	if x != nil {
		return x.Wiping
	}
	return nil
}

func (x *VehicleBodyWindshieldFront) GetIsHeatingOn() bool {
	if x != nil {
		return x.IsHeatingOn
	}
	return false
}

func (x *VehicleBodyWindshieldFront) GetWasherFluid() *VehicleBodyWindshieldFrontWasherFluid {
	if x != nil {
		return x.WasherFluid
	}
	return nil
}

type VehicleBodyWindshieldFrontWiping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode         string                                  `protobuf:"bytes,1,opt,name=Mode,proto3" json:"Mode,omitempty"`
	Intensity    uint32                                  `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	System       *VehicleBodyWindshieldFrontWipingSystem `protobuf:"bytes,3,opt,name=System,proto3" json:"System,omitempty"`
	WiperWear    uint32                                  `protobuf:"varint,4,opt,name=WiperWear,proto3" json:"WiperWear,omitempty"`
	IsWipersWorn bool                                    `protobuf:"varint,5,opt,name=IsWipersWorn,proto3" json:"IsWipersWorn,omitempty"`
}

func (x *VehicleBodyWindshieldFrontWiping) Reset() {
	*x = VehicleBodyWindshieldFrontWiping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyWindshieldFrontWiping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyWindshieldFrontWiping) ProtoMessage() {}

func (x *VehicleBodyWindshieldFrontWiping) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyWindshieldFrontWiping.ProtoReflect.Descriptor instead.
func (*VehicleBodyWindshieldFrontWiping) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{37}
}

func (x *VehicleBodyWindshieldFrontWiping) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *VehicleBodyWindshieldFrontWiping) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleBodyWindshieldFrontWiping) GetSystem() *VehicleBodyWindshieldFrontWipingSystem {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *VehicleBodyWindshieldFrontWiping) GetWiperWear() uint32 {
	if x != nil {
		return x.WiperWear
	}
	return 0
}

func (x *VehicleBodyWindshieldFrontWiping) GetIsWipersWorn() bool {
	if x != nil {
		return x.IsWipersWorn
	}
	return false
}

type VehicleBodyWindshieldFrontWipingSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode              string  `protobuf:"bytes,1,opt,name=Mode,proto3" json:"Mode,omitempty"`
	Frequency         uint32  `protobuf:"varint,2,opt,name=Frequency,proto3" json:"Frequency,omitempty"`
	TargetPosition    float32 `protobuf:"fixed32,3,opt,name=TargetPosition,proto3" json:"TargetPosition,omitempty"`
	ActualPosition    float32 `protobuf:"fixed32,4,opt,name=ActualPosition,proto3" json:"ActualPosition,omitempty"`
	DriveCurrent      float32 `protobuf:"fixed32,5,opt,name=DriveCurrent,proto3" json:"DriveCurrent,omitempty"`
	IsWiping          bool    `protobuf:"varint,6,opt,name=IsWiping,proto3" json:"IsWiping,omitempty"`
	IsEndingWipeCycle bool    `protobuf:"varint,7,opt,name=IsEndingWipeCycle,proto3" json:"IsEndingWipeCycle,omitempty"`
	IsWiperError      bool    `protobuf:"varint,8,opt,name=IsWiperError,proto3" json:"IsWiperError,omitempty"`
	IsPositionReached bool    `protobuf:"varint,9,opt,name=IsPositionReached,proto3" json:"IsPositionReached,omitempty"`
	IsBlocked         bool    `protobuf:"varint,10,opt,name=IsBlocked,proto3" json:"IsBlocked,omitempty"`
	IsOverheated      bool    `protobuf:"varint,11,opt,name=IsOverheated,proto3" json:"IsOverheated,omitempty"`
}

func (x *VehicleBodyWindshieldFrontWipingSystem) Reset() {
	*x = VehicleBodyWindshieldFrontWipingSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyWindshieldFrontWipingSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyWindshieldFrontWipingSystem) ProtoMessage() {}

func (x *VehicleBodyWindshieldFrontWipingSystem) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyWindshieldFrontWipingSystem.ProtoReflect.Descriptor instead.
func (*VehicleBodyWindshieldFrontWipingSystem) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{38}
}

func (x *VehicleBodyWindshieldFrontWipingSystem) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *VehicleBodyWindshieldFrontWipingSystem) GetFrequency() uint32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *VehicleBodyWindshieldFrontWipingSystem) GetTargetPosition() float32 {
	if x != nil {
		return x.TargetPosition
	}
	return 0
}

func (x *VehicleBodyWindshieldFrontWipingSystem) GetActualPosition() float32 {
	if x != nil {
		return x.ActualPosition
	}
	return 0
}

func (x *VehicleBodyWindshieldFrontWipingSystem) GetDriveCurrent() float32 {
	if x != nil {
		return x.DriveCurrent
	}
	return 0
}

func (x *VehicleBodyWindshieldFrontWipingSystem) GetIsWiping() bool {
	if x != nil {
		return x.IsWiping
	}
	return false
}

func (x *VehicleBodyWindshieldFrontWipingSystem) GetIsEndingWipeCycle() bool {
	if x != nil {
		return x.IsEndingWipeCycle
	}
	return false
}

func (x *VehicleBodyWindshieldFrontWipingSystem) GetIsWiperError() bool {
	if x != nil {
		return x.IsWiperError
	}
	return false
}

func (x *VehicleBodyWindshieldFrontWipingSystem) GetIsPositionReached() bool {
	if x != nil {
		return x.IsPositionReached
	}
	return false
}

func (x *VehicleBodyWindshieldFrontWipingSystem) GetIsBlocked() bool {
	if x != nil {
		return x.IsBlocked
	}
	return false
}

func (x *VehicleBodyWindshieldFrontWipingSystem) GetIsOverheated() bool {
	if x != nil {
		return x.IsOverheated
	}
	return false
}

type VehicleBodyWindshieldFrontWasherFluid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLevelLow bool   `protobuf:"varint,1,opt,name=IsLevelLow,proto3" json:"IsLevelLow,omitempty"`
	Level      uint32 `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`
}

func (x *VehicleBodyWindshieldFrontWasherFluid) Reset() {
	*x = VehicleBodyWindshieldFrontWasherFluid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyWindshieldFrontWasherFluid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyWindshieldFrontWasherFluid) ProtoMessage() {}

func (x *VehicleBodyWindshieldFrontWasherFluid) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyWindshieldFrontWasherFluid.ProtoReflect.Descriptor instead.
func (*VehicleBodyWindshieldFrontWasherFluid) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{39}
}

func (x *VehicleBodyWindshieldFrontWasherFluid) GetIsLevelLow() bool {
	if x != nil {
		return x.IsLevelLow
	}
	return false
}

func (x *VehicleBodyWindshieldFrontWasherFluid) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type VehicleBodyWindshieldRear struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wiping      *VehicleBodyWindshieldRearWiping      `protobuf:"bytes,1,opt,name=Wiping,proto3" json:"Wiping,omitempty"`
	IsHeatingOn bool                                  `protobuf:"varint,2,opt,name=IsHeatingOn,proto3" json:"IsHeatingOn,omitempty"`
	WasherFluid *VehicleBodyWindshieldRearWasherFluid `protobuf:"bytes,3,opt,name=WasherFluid,proto3" json:"WasherFluid,omitempty"`
}

func (x *VehicleBodyWindshieldRear) Reset() {
	*x = VehicleBodyWindshieldRear{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyWindshieldRear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyWindshieldRear) ProtoMessage() {}

func (x *VehicleBodyWindshieldRear) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyWindshieldRear.ProtoReflect.Descriptor instead.
func (*VehicleBodyWindshieldRear) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{40}
}

func (x *VehicleBodyWindshieldRear) GetWiping() *VehicleBodyWindshieldRearWiping {
	if x != nil {
		return x.Wiping
	}
	return nil
}

func (x *VehicleBodyWindshieldRear) GetIsHeatingOn() bool {
	if x != nil {
		return x.IsHeatingOn
	}
	return false
}

func (x *VehicleBodyWindshieldRear) GetWasherFluid() *VehicleBodyWindshieldRearWasherFluid {
	if x != nil {
		return x.WasherFluid
	}
	return nil
}

type VehicleBodyWindshieldRearWiping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode         string                                 `protobuf:"bytes,1,opt,name=Mode,proto3" json:"Mode,omitempty"`
	Intensity    uint32                                 `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	System       *VehicleBodyWindshieldRearWipingSystem `protobuf:"bytes,3,opt,name=System,proto3" json:"System,omitempty"`
	WiperWear    uint32                                 `protobuf:"varint,4,opt,name=WiperWear,proto3" json:"WiperWear,omitempty"`
	IsWipersWorn bool                                   `protobuf:"varint,5,opt,name=IsWipersWorn,proto3" json:"IsWipersWorn,omitempty"`
}

func (x *VehicleBodyWindshieldRearWiping) Reset() {
	*x = VehicleBodyWindshieldRearWiping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyWindshieldRearWiping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyWindshieldRearWiping) ProtoMessage() {}

func (x *VehicleBodyWindshieldRearWiping) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyWindshieldRearWiping.ProtoReflect.Descriptor instead.
func (*VehicleBodyWindshieldRearWiping) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{41}
}

func (x *VehicleBodyWindshieldRearWiping) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *VehicleBodyWindshieldRearWiping) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleBodyWindshieldRearWiping) GetSystem() *VehicleBodyWindshieldRearWipingSystem {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *VehicleBodyWindshieldRearWiping) GetWiperWear() uint32 {
	if x != nil {
		return x.WiperWear
	}
	return 0
}

func (x *VehicleBodyWindshieldRearWiping) GetIsWipersWorn() bool {
	if x != nil {
		return x.IsWipersWorn
	}
	return false
}

type VehicleBodyWindshieldRearWipingSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode              string  `protobuf:"bytes,1,opt,name=Mode,proto3" json:"Mode,omitempty"`
	Frequency         uint32  `protobuf:"varint,2,opt,name=Frequency,proto3" json:"Frequency,omitempty"`
	TargetPosition    float32 `protobuf:"fixed32,3,opt,name=TargetPosition,proto3" json:"TargetPosition,omitempty"`
	ActualPosition    float32 `protobuf:"fixed32,4,opt,name=ActualPosition,proto3" json:"ActualPosition,omitempty"`
	DriveCurrent      float32 `protobuf:"fixed32,5,opt,name=DriveCurrent,proto3" json:"DriveCurrent,omitempty"`
	IsWiping          bool    `protobuf:"varint,6,opt,name=IsWiping,proto3" json:"IsWiping,omitempty"`
	IsEndingWipeCycle bool    `protobuf:"varint,7,opt,name=IsEndingWipeCycle,proto3" json:"IsEndingWipeCycle,omitempty"`
	IsWiperError      bool    `protobuf:"varint,8,opt,name=IsWiperError,proto3" json:"IsWiperError,omitempty"`
	IsPositionReached bool    `protobuf:"varint,9,opt,name=IsPositionReached,proto3" json:"IsPositionReached,omitempty"`
	IsBlocked         bool    `protobuf:"varint,10,opt,name=IsBlocked,proto3" json:"IsBlocked,omitempty"`
	IsOverheated      bool    `protobuf:"varint,11,opt,name=IsOverheated,proto3" json:"IsOverheated,omitempty"`
}

func (x *VehicleBodyWindshieldRearWipingSystem) Reset() {
	*x = VehicleBodyWindshieldRearWipingSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyWindshieldRearWipingSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyWindshieldRearWipingSystem) ProtoMessage() {}

func (x *VehicleBodyWindshieldRearWipingSystem) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyWindshieldRearWipingSystem.ProtoReflect.Descriptor instead.
func (*VehicleBodyWindshieldRearWipingSystem) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{42}
}

func (x *VehicleBodyWindshieldRearWipingSystem) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *VehicleBodyWindshieldRearWipingSystem) GetFrequency() uint32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *VehicleBodyWindshieldRearWipingSystem) GetTargetPosition() float32 {
	if x != nil {
		return x.TargetPosition
	}
	return 0
}

func (x *VehicleBodyWindshieldRearWipingSystem) GetActualPosition() float32 {
	if x != nil {
		return x.ActualPosition
	}
	return 0
}

func (x *VehicleBodyWindshieldRearWipingSystem) GetDriveCurrent() float32 {
	if x != nil {
		return x.DriveCurrent
	}
	return 0
}

func (x *VehicleBodyWindshieldRearWipingSystem) GetIsWiping() bool {
	if x != nil {
		return x.IsWiping
	}
	return false
}

func (x *VehicleBodyWindshieldRearWipingSystem) GetIsEndingWipeCycle() bool {
	if x != nil {
		return x.IsEndingWipeCycle
	}
	return false
}

func (x *VehicleBodyWindshieldRearWipingSystem) GetIsWiperError() bool {
	if x != nil {
		return x.IsWiperError
	}
	return false
}

func (x *VehicleBodyWindshieldRearWipingSystem) GetIsPositionReached() bool {
	if x != nil {
		return x.IsPositionReached
	}
	return false
}

func (x *VehicleBodyWindshieldRearWipingSystem) GetIsBlocked() bool {
	if x != nil {
		return x.IsBlocked
	}
	return false
}

func (x *VehicleBodyWindshieldRearWipingSystem) GetIsOverheated() bool {
	if x != nil {
		return x.IsOverheated
	}
	return false
}

type VehicleBodyWindshieldRearWasherFluid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLevelLow bool   `protobuf:"varint,1,opt,name=IsLevelLow,proto3" json:"IsLevelLow,omitempty"`
	Level      uint32 `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`
}

func (x *VehicleBodyWindshieldRearWasherFluid) Reset() {
	*x = VehicleBodyWindshieldRearWasherFluid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyWindshieldRearWasherFluid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyWindshieldRearWasherFluid) ProtoMessage() {}

func (x *VehicleBodyWindshieldRearWasherFluid) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyWindshieldRearWasherFluid.ProtoReflect.Descriptor instead.
func (*VehicleBodyWindshieldRearWasherFluid) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{43}
}

func (x *VehicleBodyWindshieldRearWasherFluid) GetIsLevelLow() bool {
	if x != nil {
		return x.IsLevelLow
	}
	return false
}

func (x *VehicleBodyWindshieldRearWasherFluid) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type VehicleBodyLights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LightSwitch        string                               `protobuf:"bytes,1,opt,name=LightSwitch,proto3" json:"LightSwitch,omitempty"`
	IsHighBeamSwitchOn bool                                 `protobuf:"varint,2,opt,name=IsHighBeamSwitchOn,proto3" json:"IsHighBeamSwitchOn,omitempty"`
	Beam               *VehicleBodyLightsBeam               `protobuf:"bytes,3,opt,name=Beam,proto3" json:"Beam,omitempty"`
	Running            *VehicleBodyLightsRunning            `protobuf:"bytes,4,opt,name=Running,proto3" json:"Running,omitempty"`
	Backup             *VehicleBodyLightsBackup             `protobuf:"bytes,5,opt,name=Backup,proto3" json:"Backup,omitempty"`
	Parking            *VehicleBodyLightsParking            `protobuf:"bytes,6,opt,name=Parking,proto3" json:"Parking,omitempty"`
	Fog                *VehicleBodyLightsFog                `protobuf:"bytes,7,opt,name=Fog,proto3" json:"Fog,omitempty"`
	LicensePlate       *VehicleBodyLightsLicensePlate       `protobuf:"bytes,8,opt,name=LicensePlate,proto3" json:"LicensePlate,omitempty"`
	Brake              *VehicleBodyLightsBrake              `protobuf:"bytes,9,opt,name=Brake,proto3" json:"Brake,omitempty"`
	Hazard             *VehicleBodyLightsHazard             `protobuf:"bytes,10,opt,name=Hazard,proto3" json:"Hazard,omitempty"`
	DirectionIndicator *VehicleBodyLightsDirectionIndicator `protobuf:"bytes,11,opt,name=DirectionIndicator,proto3" json:"DirectionIndicator,omitempty"`
}

func (x *VehicleBodyLights) Reset() {
	*x = VehicleBodyLights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLights) ProtoMessage() {}

func (x *VehicleBodyLights) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLights.ProtoReflect.Descriptor instead.
func (*VehicleBodyLights) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{44}
}

func (x *VehicleBodyLights) GetLightSwitch() string {
	if x != nil {
		return x.LightSwitch
	}
	return ""
}

func (x *VehicleBodyLights) GetIsHighBeamSwitchOn() bool {
	if x != nil {
		return x.IsHighBeamSwitchOn
	}
	return false
}

func (x *VehicleBodyLights) GetBeam() *VehicleBodyLightsBeam {
	if x != nil {
		return x.Beam
	}
	return nil
}

func (x *VehicleBodyLights) GetRunning() *VehicleBodyLightsRunning {
	if x != nil {
		return x.Running
	}
	return nil
}

func (x *VehicleBodyLights) GetBackup() *VehicleBodyLightsBackup {
	if x != nil {
		return x.Backup
	}
	return nil
}

func (x *VehicleBodyLights) GetParking() *VehicleBodyLightsParking {
	if x != nil {
		return x.Parking
	}
	return nil
}

func (x *VehicleBodyLights) GetFog() *VehicleBodyLightsFog {
	if x != nil {
		return x.Fog
	}
	return nil
}

func (x *VehicleBodyLights) GetLicensePlate() *VehicleBodyLightsLicensePlate {
	if x != nil {
		return x.LicensePlate
	}
	return nil
}

func (x *VehicleBodyLights) GetBrake() *VehicleBodyLightsBrake {
	if x != nil {
		return x.Brake
	}
	return nil
}

func (x *VehicleBodyLights) GetHazard() *VehicleBodyLightsHazard {
	if x != nil {
		return x.Hazard
	}
	return nil
}

func (x *VehicleBodyLights) GetDirectionIndicator() *VehicleBodyLightsDirectionIndicator {
	if x != nil {
		return x.DirectionIndicator
	}
	return nil
}

type VehicleBodyLightsBeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Low  *VehicleBodyLightsBeamLow  `protobuf:"bytes,1,opt,name=Low,proto3" json:"Low,omitempty"`
	High *VehicleBodyLightsBeamHigh `protobuf:"bytes,2,opt,name=High,proto3" json:"High,omitempty"`
}

func (x *VehicleBodyLightsBeam) Reset() {
	*x = VehicleBodyLightsBeam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsBeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsBeam) ProtoMessage() {}

func (x *VehicleBodyLightsBeam) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsBeam.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsBeam) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{45}
}

func (x *VehicleBodyLightsBeam) GetLow() *VehicleBodyLightsBeamLow {
	if x != nil {
		return x.Low
	}
	return nil
}

func (x *VehicleBodyLightsBeam) GetHigh() *VehicleBodyLightsBeamHigh {
	if x != nil {
		return x.High
	}
	return nil
}

type VehicleBodyLightsBeamLow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOn     bool `protobuf:"varint,1,opt,name=IsOn,proto3" json:"IsOn,omitempty"`
	IsDefect bool `protobuf:"varint,2,opt,name=IsDefect,proto3" json:"IsDefect,omitempty"`
}

func (x *VehicleBodyLightsBeamLow) Reset() {
	*x = VehicleBodyLightsBeamLow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsBeamLow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsBeamLow) ProtoMessage() {}

func (x *VehicleBodyLightsBeamLow) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsBeamLow.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsBeamLow) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{46}
}

func (x *VehicleBodyLightsBeamLow) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

func (x *VehicleBodyLightsBeamLow) GetIsDefect() bool {
	if x != nil {
		return x.IsDefect
	}
	return false
}

type VehicleBodyLightsBeamHigh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOn     bool `protobuf:"varint,1,opt,name=IsOn,proto3" json:"IsOn,omitempty"`
	IsDefect bool `protobuf:"varint,2,opt,name=IsDefect,proto3" json:"IsDefect,omitempty"`
}

func (x *VehicleBodyLightsBeamHigh) Reset() {
	*x = VehicleBodyLightsBeamHigh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsBeamHigh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsBeamHigh) ProtoMessage() {}

func (x *VehicleBodyLightsBeamHigh) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsBeamHigh.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsBeamHigh) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{47}
}

func (x *VehicleBodyLightsBeamHigh) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

func (x *VehicleBodyLightsBeamHigh) GetIsDefect() bool {
	if x != nil {
		return x.IsDefect
	}
	return false
}

type VehicleBodyLightsRunning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOn     bool `protobuf:"varint,1,opt,name=IsOn,proto3" json:"IsOn,omitempty"`
	IsDefect bool `protobuf:"varint,2,opt,name=IsDefect,proto3" json:"IsDefect,omitempty"`
}

func (x *VehicleBodyLightsRunning) Reset() {
	*x = VehicleBodyLightsRunning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsRunning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsRunning) ProtoMessage() {}

func (x *VehicleBodyLightsRunning) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsRunning.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsRunning) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{48}
}

func (x *VehicleBodyLightsRunning) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

func (x *VehicleBodyLightsRunning) GetIsDefect() bool {
	if x != nil {
		return x.IsDefect
	}
	return false
}

type VehicleBodyLightsBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOn     bool `protobuf:"varint,1,opt,name=IsOn,proto3" json:"IsOn,omitempty"`
	IsDefect bool `protobuf:"varint,2,opt,name=IsDefect,proto3" json:"IsDefect,omitempty"`
}

func (x *VehicleBodyLightsBackup) Reset() {
	*x = VehicleBodyLightsBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsBackup) ProtoMessage() {}

func (x *VehicleBodyLightsBackup) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsBackup.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsBackup) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{49}
}

func (x *VehicleBodyLightsBackup) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

func (x *VehicleBodyLightsBackup) GetIsDefect() bool {
	if x != nil {
		return x.IsDefect
	}
	return false
}

type VehicleBodyLightsParking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOn     bool `protobuf:"varint,1,opt,name=IsOn,proto3" json:"IsOn,omitempty"`
	IsDefect bool `protobuf:"varint,2,opt,name=IsDefect,proto3" json:"IsDefect,omitempty"`
}

func (x *VehicleBodyLightsParking) Reset() {
	*x = VehicleBodyLightsParking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsParking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsParking) ProtoMessage() {}

func (x *VehicleBodyLightsParking) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsParking.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsParking) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{50}
}

func (x *VehicleBodyLightsParking) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

func (x *VehicleBodyLightsParking) GetIsDefect() bool {
	if x != nil {
		return x.IsDefect
	}
	return false
}

type VehicleBodyLightsFog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rear  *VehicleBodyLightsFogRear  `protobuf:"bytes,1,opt,name=Rear,proto3" json:"Rear,omitempty"`
	Front *VehicleBodyLightsFogFront `protobuf:"bytes,2,opt,name=Front,proto3" json:"Front,omitempty"`
}

func (x *VehicleBodyLightsFog) Reset() {
	*x = VehicleBodyLightsFog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsFog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsFog) ProtoMessage() {}

func (x *VehicleBodyLightsFog) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsFog.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsFog) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{51}
}

func (x *VehicleBodyLightsFog) GetRear() *VehicleBodyLightsFogRear {
	if x != nil {
		return x.Rear
	}
	return nil
}

func (x *VehicleBodyLightsFog) GetFront() *VehicleBodyLightsFogFront {
	if x != nil {
		return x.Front
	}
	return nil
}

type VehicleBodyLightsFogRear struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOn     bool `protobuf:"varint,1,opt,name=IsOn,proto3" json:"IsOn,omitempty"`
	IsDefect bool `protobuf:"varint,2,opt,name=IsDefect,proto3" json:"IsDefect,omitempty"`
}

func (x *VehicleBodyLightsFogRear) Reset() {
	*x = VehicleBodyLightsFogRear{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsFogRear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsFogRear) ProtoMessage() {}

func (x *VehicleBodyLightsFogRear) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsFogRear.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsFogRear) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{52}
}

func (x *VehicleBodyLightsFogRear) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

func (x *VehicleBodyLightsFogRear) GetIsDefect() bool {
	if x != nil {
		return x.IsDefect
	}
	return false
}

type VehicleBodyLightsFogFront struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOn     bool `protobuf:"varint,1,opt,name=IsOn,proto3" json:"IsOn,omitempty"`
	IsDefect bool `protobuf:"varint,2,opt,name=IsDefect,proto3" json:"IsDefect,omitempty"`
}

func (x *VehicleBodyLightsFogFront) Reset() {
	*x = VehicleBodyLightsFogFront{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsFogFront) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsFogFront) ProtoMessage() {}

func (x *VehicleBodyLightsFogFront) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsFogFront.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsFogFront) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{53}
}

func (x *VehicleBodyLightsFogFront) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

func (x *VehicleBodyLightsFogFront) GetIsDefect() bool {
	if x != nil {
		return x.IsDefect
	}
	return false
}

type VehicleBodyLightsLicensePlate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOn     bool `protobuf:"varint,1,opt,name=IsOn,proto3" json:"IsOn,omitempty"`
	IsDefect bool `protobuf:"varint,2,opt,name=IsDefect,proto3" json:"IsDefect,omitempty"`
}

func (x *VehicleBodyLightsLicensePlate) Reset() {
	*x = VehicleBodyLightsLicensePlate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsLicensePlate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsLicensePlate) ProtoMessage() {}

func (x *VehicleBodyLightsLicensePlate) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsLicensePlate.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsLicensePlate) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{54}
}

func (x *VehicleBodyLightsLicensePlate) GetIsOn() bool {
	if x != nil {
		return x.IsOn
	}
	return false
}

func (x *VehicleBodyLightsLicensePlate) GetIsDefect() bool {
	if x != nil {
		return x.IsDefect
	}
	return false
}

type VehicleBodyLightsBrake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsActive string `protobuf:"bytes,1,opt,name=IsActive,proto3" json:"IsActive,omitempty"`
	IsDefect bool   `protobuf:"varint,2,opt,name=IsDefect,proto3" json:"IsDefect,omitempty"`
}

func (x *VehicleBodyLightsBrake) Reset() {
	*x = VehicleBodyLightsBrake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsBrake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsBrake) ProtoMessage() {}

func (x *VehicleBodyLightsBrake) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsBrake.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsBrake) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{55}
}

func (x *VehicleBodyLightsBrake) GetIsActive() string {
	if x != nil {
		return x.IsActive
	}
	return ""
}

func (x *VehicleBodyLightsBrake) GetIsDefect() bool {
	if x != nil {
		return x.IsDefect
	}
	return false
}

type VehicleBodyLightsHazard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSignaling bool `protobuf:"varint,1,opt,name=IsSignaling,proto3" json:"IsSignaling,omitempty"`
	IsDefect    bool `protobuf:"varint,2,opt,name=IsDefect,proto3" json:"IsDefect,omitempty"`
}

func (x *VehicleBodyLightsHazard) Reset() {
	*x = VehicleBodyLightsHazard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsHazard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsHazard) ProtoMessage() {}

func (x *VehicleBodyLightsHazard) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsHazard.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsHazard) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{56}
}

func (x *VehicleBodyLightsHazard) GetIsSignaling() bool {
	if x != nil {
		return x.IsSignaling
	}
	return false
}

func (x *VehicleBodyLightsHazard) GetIsDefect() bool {
	if x != nil {
		return x.IsDefect
	}
	return false
}

type VehicleBodyLightsDirectionIndicator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left  *VehicleBodyLightsDirectionIndicatorLeft  `protobuf:"bytes,1,opt,name=Left,proto3" json:"Left,omitempty"`
	Right *VehicleBodyLightsDirectionIndicatorRight `protobuf:"bytes,2,opt,name=Right,proto3" json:"Right,omitempty"`
}

func (x *VehicleBodyLightsDirectionIndicator) Reset() {
	*x = VehicleBodyLightsDirectionIndicator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsDirectionIndicator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsDirectionIndicator) ProtoMessage() {}

func (x *VehicleBodyLightsDirectionIndicator) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsDirectionIndicator.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsDirectionIndicator) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{57}
}

func (x *VehicleBodyLightsDirectionIndicator) GetLeft() *VehicleBodyLightsDirectionIndicatorLeft {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *VehicleBodyLightsDirectionIndicator) GetRight() *VehicleBodyLightsDirectionIndicatorRight {
	if x != nil {
		return x.Right
	}
	return nil
}

type VehicleBodyLightsDirectionIndicatorLeft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSignaling bool `protobuf:"varint,1,opt,name=IsSignaling,proto3" json:"IsSignaling,omitempty"`
	IsDefect    bool `protobuf:"varint,2,opt,name=IsDefect,proto3" json:"IsDefect,omitempty"`
}

func (x *VehicleBodyLightsDirectionIndicatorLeft) Reset() {
	*x = VehicleBodyLightsDirectionIndicatorLeft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsDirectionIndicatorLeft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsDirectionIndicatorLeft) ProtoMessage() {}

func (x *VehicleBodyLightsDirectionIndicatorLeft) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsDirectionIndicatorLeft.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsDirectionIndicatorLeft) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{58}
}

func (x *VehicleBodyLightsDirectionIndicatorLeft) GetIsSignaling() bool {
	if x != nil {
		return x.IsSignaling
	}
	return false
}

func (x *VehicleBodyLightsDirectionIndicatorLeft) GetIsDefect() bool {
	if x != nil {
		return x.IsDefect
	}
	return false
}

type VehicleBodyLightsDirectionIndicatorRight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSignaling bool `protobuf:"varint,1,opt,name=IsSignaling,proto3" json:"IsSignaling,omitempty"`
	IsDefect    bool `protobuf:"varint,2,opt,name=IsDefect,proto3" json:"IsDefect,omitempty"`
}

func (x *VehicleBodyLightsDirectionIndicatorRight) Reset() {
	*x = VehicleBodyLightsDirectionIndicatorRight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyLightsDirectionIndicatorRight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyLightsDirectionIndicatorRight) ProtoMessage() {}

func (x *VehicleBodyLightsDirectionIndicatorRight) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyLightsDirectionIndicatorRight.ProtoReflect.Descriptor instead.
func (*VehicleBodyLightsDirectionIndicatorRight) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{59}
}

func (x *VehicleBodyLightsDirectionIndicatorRight) GetIsSignaling() bool {
	if x != nil {
		return x.IsSignaling
	}
	return false
}

func (x *VehicleBodyLightsDirectionIndicatorRight) GetIsDefect() bool {
	if x != nil {
		return x.IsDefect
	}
	return false
}

type VehicleBodyMirrors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverSide    *VehicleBodyMirrorsDriverSide    `protobuf:"bytes,1,opt,name=DriverSide,proto3" json:"DriverSide,omitempty"`
	PassengerSide *VehicleBodyMirrorsPassengerSide `protobuf:"bytes,2,opt,name=PassengerSide,proto3" json:"PassengerSide,omitempty"`
}

func (x *VehicleBodyMirrors) Reset() {
	*x = VehicleBodyMirrors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyMirrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyMirrors) ProtoMessage() {}

func (x *VehicleBodyMirrors) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyMirrors.ProtoReflect.Descriptor instead.
func (*VehicleBodyMirrors) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{60}
}

func (x *VehicleBodyMirrors) GetDriverSide() *VehicleBodyMirrorsDriverSide {
	if x != nil {
		return x.DriverSide
	}
	return nil
}

func (x *VehicleBodyMirrors) GetPassengerSide() *VehicleBodyMirrorsPassengerSide {
	if x != nil {
		return x.PassengerSide
	}
	return nil
}

type VehicleBodyMirrorsDriverSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tilt        int32 `protobuf:"varint,1,opt,name=Tilt,proto3" json:"Tilt,omitempty"`
	Pan         int32 `protobuf:"varint,2,opt,name=Pan,proto3" json:"Pan,omitempty"`
	IsHeatingOn bool  `protobuf:"varint,3,opt,name=IsHeatingOn,proto3" json:"IsHeatingOn,omitempty"`
	IsLocked    bool  `protobuf:"varint,4,opt,name=IsLocked,proto3" json:"IsLocked,omitempty"`
	IsFolded    bool  `protobuf:"varint,5,opt,name=IsFolded,proto3" json:"IsFolded,omitempty"`
}

func (x *VehicleBodyMirrorsDriverSide) Reset() {
	*x = VehicleBodyMirrorsDriverSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyMirrorsDriverSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyMirrorsDriverSide) ProtoMessage() {}

func (x *VehicleBodyMirrorsDriverSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyMirrorsDriverSide.ProtoReflect.Descriptor instead.
func (*VehicleBodyMirrorsDriverSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{61}
}

func (x *VehicleBodyMirrorsDriverSide) GetTilt() int32 {
	if x != nil {
		return x.Tilt
	}
	return 0
}

func (x *VehicleBodyMirrorsDriverSide) GetPan() int32 {
	if x != nil {
		return x.Pan
	}
	return 0
}

func (x *VehicleBodyMirrorsDriverSide) GetIsHeatingOn() bool {
	if x != nil {
		return x.IsHeatingOn
	}
	return false
}

func (x *VehicleBodyMirrorsDriverSide) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *VehicleBodyMirrorsDriverSide) GetIsFolded() bool {
	if x != nil {
		return x.IsFolded
	}
	return false
}

type VehicleBodyMirrorsPassengerSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tilt        int32 `protobuf:"varint,1,opt,name=Tilt,proto3" json:"Tilt,omitempty"`
	Pan         int32 `protobuf:"varint,2,opt,name=Pan,proto3" json:"Pan,omitempty"`
	IsHeatingOn bool  `protobuf:"varint,3,opt,name=IsHeatingOn,proto3" json:"IsHeatingOn,omitempty"`
	IsLocked    bool  `protobuf:"varint,4,opt,name=IsLocked,proto3" json:"IsLocked,omitempty"`
	IsFolded    bool  `protobuf:"varint,5,opt,name=IsFolded,proto3" json:"IsFolded,omitempty"`
}

func (x *VehicleBodyMirrorsPassengerSide) Reset() {
	*x = VehicleBodyMirrorsPassengerSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleBodyMirrorsPassengerSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleBodyMirrorsPassengerSide) ProtoMessage() {}

func (x *VehicleBodyMirrorsPassengerSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleBodyMirrorsPassengerSide.ProtoReflect.Descriptor instead.
func (*VehicleBodyMirrorsPassengerSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{62}
}

func (x *VehicleBodyMirrorsPassengerSide) GetTilt() int32 {
	if x != nil {
		return x.Tilt
	}
	return 0
}

func (x *VehicleBodyMirrorsPassengerSide) GetPan() int32 {
	if x != nil {
		return x.Pan
	}
	return 0
}

func (x *VehicleBodyMirrorsPassengerSide) GetIsHeatingOn() bool {
	if x != nil {
		return x.IsHeatingOn
	}
	return false
}

func (x *VehicleBodyMirrorsPassengerSide) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *VehicleBodyMirrorsPassengerSide) GetIsFolded() bool {
	if x != nil {
		return x.IsFolded
	}
	return false
}

type VehicleCabin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RearShade                *VehicleCabinRearShade      `protobuf:"bytes,1,opt,name=RearShade,proto3" json:"RearShade,omitempty"`
	HVAC                     *VehicleCabinHVAC           `protobuf:"bytes,2,opt,name=HVAC,proto3" json:"HVAC,omitempty"`
	Infotainment             *VehicleCabinInfotainment   `protobuf:"bytes,3,opt,name=Infotainment,proto3" json:"Infotainment,omitempty"`
	Sunroof                  *VehicleCabinSunroof        `protobuf:"bytes,4,opt,name=Sunroof,proto3" json:"Sunroof,omitempty"`
	RearviewMirror           *VehicleCabinRearviewMirror `protobuf:"bytes,5,opt,name=RearviewMirror,proto3" json:"RearviewMirror,omitempty"`
	Light                    *VehicleCabinLight          `protobuf:"bytes,6,opt,name=Light,proto3" json:"Light,omitempty"`
	Door                     *VehicleCabinDoor           `protobuf:"bytes,7,opt,name=Door,proto3" json:"Door,omitempty"`
	DoorCount                uint32                      `protobuf:"varint,8,opt,name=DoorCount,proto3" json:"DoorCount,omitempty"`
	IsWindowChildLockEngaged bool                        `protobuf:"varint,9,opt,name=IsWindowChildLockEngaged,proto3" json:"IsWindowChildLockEngaged,omitempty"`
	Seat                     *VehicleCabinSeat           `protobuf:"bytes,10,opt,name=Seat,proto3" json:"Seat,omitempty"`
	DriverPosition           string                      `protobuf:"bytes,11,opt,name=DriverPosition,proto3" json:"DriverPosition,omitempty"`
	SeatRowCount             uint32                      `protobuf:"varint,12,opt,name=SeatRowCount,proto3" json:"SeatRowCount,omitempty"`
	SeatPosCount             []uint32                    `protobuf:"varint,13,rep,packed,name=SeatPosCount,proto3" json:"SeatPosCount,omitempty"`
	Convertible              *VehicleCabinConvertible    `protobuf:"bytes,14,opt,name=Convertible,proto3" json:"Convertible,omitempty"`
	PowerOptimizeLevel       uint32                      `protobuf:"varint,15,opt,name=PowerOptimizeLevel,proto3" json:"PowerOptimizeLevel,omitempty"`
	IsAutoPowerOptimize      bool                        `protobuf:"varint,16,opt,name=IsAutoPowerOptimize,proto3" json:"IsAutoPowerOptimize,omitempty"`
}

func (x *VehicleCabin) Reset() {
	*x = VehicleCabin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabin) ProtoMessage() {}

func (x *VehicleCabin) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabin.ProtoReflect.Descriptor instead.
func (*VehicleCabin) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{63}
}

func (x *VehicleCabin) GetRearShade() *VehicleCabinRearShade {
	if x != nil {
		return x.RearShade
	}
	return nil
}

func (x *VehicleCabin) GetHVAC() *VehicleCabinHVAC {
	if x != nil {
		return x.HVAC
	}
	return nil
}

func (x *VehicleCabin) GetInfotainment() *VehicleCabinInfotainment {
	if x != nil {
		return x.Infotainment
	}
	return nil
}

func (x *VehicleCabin) GetSunroof() *VehicleCabinSunroof {
	if x != nil {
		return x.Sunroof
	}
	return nil
}

func (x *VehicleCabin) GetRearviewMirror() *VehicleCabinRearviewMirror {
	if x != nil {
		return x.RearviewMirror
	}
	return nil
}

func (x *VehicleCabin) GetLight() *VehicleCabinLight {
	if x != nil {
		return x.Light
	}
	return nil
}

func (x *VehicleCabin) GetDoor() *VehicleCabinDoor {
	if x != nil {
		return x.Door
	}
	return nil
}

func (x *VehicleCabin) GetDoorCount() uint32 {
	if x != nil {
		return x.DoorCount
	}
	return 0
}

func (x *VehicleCabin) GetIsWindowChildLockEngaged() bool {
	if x != nil {
		return x.IsWindowChildLockEngaged
	}
	return false
}

func (x *VehicleCabin) GetSeat() *VehicleCabinSeat {
	if x != nil {
		return x.Seat
	}
	return nil
}

func (x *VehicleCabin) GetDriverPosition() string {
	if x != nil {
		return x.DriverPosition
	}
	return ""
}

func (x *VehicleCabin) GetSeatRowCount() uint32 {
	if x != nil {
		return x.SeatRowCount
	}
	return 0
}

func (x *VehicleCabin) GetSeatPosCount() []uint32 {
	if x != nil {
		return x.SeatPosCount
	}
	return nil
}

func (x *VehicleCabin) GetConvertible() *VehicleCabinConvertible {
	if x != nil {
		return x.Convertible
	}
	return nil
}

func (x *VehicleCabin) GetPowerOptimizeLevel() uint32 {
	if x != nil {
		return x.PowerOptimizeLevel
	}
	return 0
}

func (x *VehicleCabin) GetIsAutoPowerOptimize() bool {
	if x != nil {
		return x.IsAutoPowerOptimize
	}
	return false
}

type VehicleCabinRearShade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen   bool   `protobuf:"varint,1,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position uint32 `protobuf:"varint,2,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch   string `protobuf:"bytes,3,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinRearShade) Reset() {
	*x = VehicleCabinRearShade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinRearShade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinRearShade) ProtoMessage() {}

func (x *VehicleCabinRearShade) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinRearShade.ProtoReflect.Descriptor instead.
func (*VehicleCabinRearShade) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{64}
}

func (x *VehicleCabinRearShade) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleCabinRearShade) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinRearShade) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

type VehicleCabinHVAC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Station                 *VehicleCabinHVACStation `protobuf:"bytes,1,opt,name=Station,proto3" json:"Station,omitempty"`
	IsRecirculationActive   bool                     `protobuf:"varint,2,opt,name=IsRecirculationActive,proto3" json:"IsRecirculationActive,omitempty"`
	IsFrontDefrosterActive  bool                     `protobuf:"varint,3,opt,name=IsFrontDefrosterActive,proto3" json:"IsFrontDefrosterActive,omitempty"`
	IsRearDefrosterActive   bool                     `protobuf:"varint,4,opt,name=IsRearDefrosterActive,proto3" json:"IsRearDefrosterActive,omitempty"`
	IsAirConditioningActive bool                     `protobuf:"varint,5,opt,name=IsAirConditioningActive,proto3" json:"IsAirConditioningActive,omitempty"`
	AmbientAirTemperature   float32                  `protobuf:"fixed32,6,opt,name=AmbientAirTemperature,proto3" json:"AmbientAirTemperature,omitempty"`
	PowerOptimizeLevel      uint32                   `protobuf:"varint,7,opt,name=PowerOptimizeLevel,proto3" json:"PowerOptimizeLevel,omitempty"`
	IsAutoPowerOptimize     bool                     `protobuf:"varint,8,opt,name=IsAutoPowerOptimize,proto3" json:"IsAutoPowerOptimize,omitempty"`
}

func (x *VehicleCabinHVAC) Reset() {
	*x = VehicleCabinHVAC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinHVAC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinHVAC) ProtoMessage() {}

func (x *VehicleCabinHVAC) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinHVAC.ProtoReflect.Descriptor instead.
func (*VehicleCabinHVAC) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{65}
}

func (x *VehicleCabinHVAC) GetStation() *VehicleCabinHVACStation {
	if x != nil {
		return x.Station
	}
	return nil
}

func (x *VehicleCabinHVAC) GetIsRecirculationActive() bool {
	if x != nil {
		return x.IsRecirculationActive
	}
	return false
}

func (x *VehicleCabinHVAC) GetIsFrontDefrosterActive() bool {
	if x != nil {
		return x.IsFrontDefrosterActive
	}
	return false
}

func (x *VehicleCabinHVAC) GetIsRearDefrosterActive() bool {
	if x != nil {
		return x.IsRearDefrosterActive
	}
	return false
}

func (x *VehicleCabinHVAC) GetIsAirConditioningActive() bool {
	if x != nil {
		return x.IsAirConditioningActive
	}
	return false
}

func (x *VehicleCabinHVAC) GetAmbientAirTemperature() float32 {
	if x != nil {
		return x.AmbientAirTemperature
	}
	return 0
}

func (x *VehicleCabinHVAC) GetPowerOptimizeLevel() uint32 {
	if x != nil {
		return x.PowerOptimizeLevel
	}
	return 0
}

func (x *VehicleCabinHVAC) GetIsAutoPowerOptimize() bool {
	if x != nil {
		return x.IsAutoPowerOptimize
	}
	return false
}

type VehicleCabinHVACStation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row1 *VehicleCabinHVACStationRow1 `protobuf:"bytes,1,opt,name=Row1,proto3" json:"Row1,omitempty"`
	Row2 *VehicleCabinHVACStationRow2 `protobuf:"bytes,2,opt,name=Row2,proto3" json:"Row2,omitempty"`
	Row3 *VehicleCabinHVACStationRow3 `protobuf:"bytes,3,opt,name=Row3,proto3" json:"Row3,omitempty"`
	Row4 *VehicleCabinHVACStationRow4 `protobuf:"bytes,4,opt,name=Row4,proto3" json:"Row4,omitempty"`
}

func (x *VehicleCabinHVACStation) Reset() {
	*x = VehicleCabinHVACStation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinHVACStation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinHVACStation) ProtoMessage() {}

func (x *VehicleCabinHVACStation) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinHVACStation.ProtoReflect.Descriptor instead.
func (*VehicleCabinHVACStation) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{66}
}

func (x *VehicleCabinHVACStation) GetRow1() *VehicleCabinHVACStationRow1 {
	if x != nil {
		return x.Row1
	}
	return nil
}

func (x *VehicleCabinHVACStation) GetRow2() *VehicleCabinHVACStationRow2 {
	if x != nil {
		return x.Row2
	}
	return nil
}

func (x *VehicleCabinHVACStation) GetRow3() *VehicleCabinHVACStationRow3 {
	if x != nil {
		return x.Row3
	}
	return nil
}

func (x *VehicleCabinHVACStation) GetRow4() *VehicleCabinHVACStationRow4 {
	if x != nil {
		return x.Row4
	}
	return nil
}

type VehicleCabinHVACStationRow1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Driver    *VehicleCabinHVACStationRow1Driver    `protobuf:"bytes,1,opt,name=Driver,proto3" json:"Driver,omitempty"`
	Passenger *VehicleCabinHVACStationRow1Passenger `protobuf:"bytes,2,opt,name=Passenger,proto3" json:"Passenger,omitempty"`
}

func (x *VehicleCabinHVACStationRow1) Reset() {
	*x = VehicleCabinHVACStationRow1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinHVACStationRow1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinHVACStationRow1) ProtoMessage() {}

func (x *VehicleCabinHVACStationRow1) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinHVACStationRow1.ProtoReflect.Descriptor instead.
func (*VehicleCabinHVACStationRow1) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{67}
}

func (x *VehicleCabinHVACStationRow1) GetDriver() *VehicleCabinHVACStationRow1Driver {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *VehicleCabinHVACStationRow1) GetPassenger() *VehicleCabinHVACStationRow1Passenger {
	if x != nil {
		return x.Passenger
	}
	return nil
}

type VehicleCabinHVACStationRow1Driver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FanSpeed        uint32  `protobuf:"varint,1,opt,name=FanSpeed,proto3" json:"FanSpeed,omitempty"`
	Temperature     float32 `protobuf:"fixed32,2,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	AirDistribution string  `protobuf:"bytes,3,opt,name=AirDistribution,proto3" json:"AirDistribution,omitempty"`
}

func (x *VehicleCabinHVACStationRow1Driver) Reset() {
	*x = VehicleCabinHVACStationRow1Driver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinHVACStationRow1Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinHVACStationRow1Driver) ProtoMessage() {}

func (x *VehicleCabinHVACStationRow1Driver) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinHVACStationRow1Driver.ProtoReflect.Descriptor instead.
func (*VehicleCabinHVACStationRow1Driver) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{68}
}

func (x *VehicleCabinHVACStationRow1Driver) GetFanSpeed() uint32 {
	if x != nil {
		return x.FanSpeed
	}
	return 0
}

func (x *VehicleCabinHVACStationRow1Driver) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *VehicleCabinHVACStationRow1Driver) GetAirDistribution() string {
	if x != nil {
		return x.AirDistribution
	}
	return ""
}

type VehicleCabinHVACStationRow1Passenger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FanSpeed        uint32  `protobuf:"varint,1,opt,name=FanSpeed,proto3" json:"FanSpeed,omitempty"`
	Temperature     float32 `protobuf:"fixed32,2,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	AirDistribution string  `protobuf:"bytes,3,opt,name=AirDistribution,proto3" json:"AirDistribution,omitempty"`
}

func (x *VehicleCabinHVACStationRow1Passenger) Reset() {
	*x = VehicleCabinHVACStationRow1Passenger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinHVACStationRow1Passenger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinHVACStationRow1Passenger) ProtoMessage() {}

func (x *VehicleCabinHVACStationRow1Passenger) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinHVACStationRow1Passenger.ProtoReflect.Descriptor instead.
func (*VehicleCabinHVACStationRow1Passenger) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{69}
}

func (x *VehicleCabinHVACStationRow1Passenger) GetFanSpeed() uint32 {
	if x != nil {
		return x.FanSpeed
	}
	return 0
}

func (x *VehicleCabinHVACStationRow1Passenger) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *VehicleCabinHVACStationRow1Passenger) GetAirDistribution() string {
	if x != nil {
		return x.AirDistribution
	}
	return ""
}

type VehicleCabinHVACStationRow2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Driver    *VehicleCabinHVACStationRow2Driver    `protobuf:"bytes,1,opt,name=Driver,proto3" json:"Driver,omitempty"`
	Passenger *VehicleCabinHVACStationRow2Passenger `protobuf:"bytes,2,opt,name=Passenger,proto3" json:"Passenger,omitempty"`
}

func (x *VehicleCabinHVACStationRow2) Reset() {
	*x = VehicleCabinHVACStationRow2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinHVACStationRow2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinHVACStationRow2) ProtoMessage() {}

func (x *VehicleCabinHVACStationRow2) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinHVACStationRow2.ProtoReflect.Descriptor instead.
func (*VehicleCabinHVACStationRow2) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{70}
}

func (x *VehicleCabinHVACStationRow2) GetDriver() *VehicleCabinHVACStationRow2Driver {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *VehicleCabinHVACStationRow2) GetPassenger() *VehicleCabinHVACStationRow2Passenger {
	if x != nil {
		return x.Passenger
	}
	return nil
}

type VehicleCabinHVACStationRow2Driver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FanSpeed        uint32  `protobuf:"varint,1,opt,name=FanSpeed,proto3" json:"FanSpeed,omitempty"`
	Temperature     float32 `protobuf:"fixed32,2,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	AirDistribution string  `protobuf:"bytes,3,opt,name=AirDistribution,proto3" json:"AirDistribution,omitempty"`
}

func (x *VehicleCabinHVACStationRow2Driver) Reset() {
	*x = VehicleCabinHVACStationRow2Driver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinHVACStationRow2Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinHVACStationRow2Driver) ProtoMessage() {}

func (x *VehicleCabinHVACStationRow2Driver) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinHVACStationRow2Driver.ProtoReflect.Descriptor instead.
func (*VehicleCabinHVACStationRow2Driver) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{71}
}

func (x *VehicleCabinHVACStationRow2Driver) GetFanSpeed() uint32 {
	if x != nil {
		return x.FanSpeed
	}
	return 0
}

func (x *VehicleCabinHVACStationRow2Driver) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *VehicleCabinHVACStationRow2Driver) GetAirDistribution() string {
	if x != nil {
		return x.AirDistribution
	}
	return ""
}

type VehicleCabinHVACStationRow2Passenger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FanSpeed        uint32  `protobuf:"varint,1,opt,name=FanSpeed,proto3" json:"FanSpeed,omitempty"`
	Temperature     float32 `protobuf:"fixed32,2,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	AirDistribution string  `protobuf:"bytes,3,opt,name=AirDistribution,proto3" json:"AirDistribution,omitempty"`
}

func (x *VehicleCabinHVACStationRow2Passenger) Reset() {
	*x = VehicleCabinHVACStationRow2Passenger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinHVACStationRow2Passenger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinHVACStationRow2Passenger) ProtoMessage() {}

func (x *VehicleCabinHVACStationRow2Passenger) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinHVACStationRow2Passenger.ProtoReflect.Descriptor instead.
func (*VehicleCabinHVACStationRow2Passenger) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{72}
}

func (x *VehicleCabinHVACStationRow2Passenger) GetFanSpeed() uint32 {
	if x != nil {
		return x.FanSpeed
	}
	return 0
}

func (x *VehicleCabinHVACStationRow2Passenger) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *VehicleCabinHVACStationRow2Passenger) GetAirDistribution() string {
	if x != nil {
		return x.AirDistribution
	}
	return ""
}

type VehicleCabinHVACStationRow3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Driver    *VehicleCabinHVACStationRow3Driver    `protobuf:"bytes,1,opt,name=Driver,proto3" json:"Driver,omitempty"`
	Passenger *VehicleCabinHVACStationRow3Passenger `protobuf:"bytes,2,opt,name=Passenger,proto3" json:"Passenger,omitempty"`
}

func (x *VehicleCabinHVACStationRow3) Reset() {
	*x = VehicleCabinHVACStationRow3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinHVACStationRow3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinHVACStationRow3) ProtoMessage() {}

func (x *VehicleCabinHVACStationRow3) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinHVACStationRow3.ProtoReflect.Descriptor instead.
func (*VehicleCabinHVACStationRow3) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{73}
}

func (x *VehicleCabinHVACStationRow3) GetDriver() *VehicleCabinHVACStationRow3Driver {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *VehicleCabinHVACStationRow3) GetPassenger() *VehicleCabinHVACStationRow3Passenger {
	if x != nil {
		return x.Passenger
	}
	return nil
}

type VehicleCabinHVACStationRow3Driver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FanSpeed        uint32  `protobuf:"varint,1,opt,name=FanSpeed,proto3" json:"FanSpeed,omitempty"`
	Temperature     float32 `protobuf:"fixed32,2,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	AirDistribution string  `protobuf:"bytes,3,opt,name=AirDistribution,proto3" json:"AirDistribution,omitempty"`
}

func (x *VehicleCabinHVACStationRow3Driver) Reset() {
	*x = VehicleCabinHVACStationRow3Driver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinHVACStationRow3Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinHVACStationRow3Driver) ProtoMessage() {}

func (x *VehicleCabinHVACStationRow3Driver) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinHVACStationRow3Driver.ProtoReflect.Descriptor instead.
func (*VehicleCabinHVACStationRow3Driver) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{74}
}

func (x *VehicleCabinHVACStationRow3Driver) GetFanSpeed() uint32 {
	if x != nil {
		return x.FanSpeed
	}
	return 0
}

func (x *VehicleCabinHVACStationRow3Driver) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *VehicleCabinHVACStationRow3Driver) GetAirDistribution() string {
	if x != nil {
		return x.AirDistribution
	}
	return ""
}

type VehicleCabinHVACStationRow3Passenger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FanSpeed        uint32  `protobuf:"varint,1,opt,name=FanSpeed,proto3" json:"FanSpeed,omitempty"`
	Temperature     float32 `protobuf:"fixed32,2,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	AirDistribution string  `protobuf:"bytes,3,opt,name=AirDistribution,proto3" json:"AirDistribution,omitempty"`
}

func (x *VehicleCabinHVACStationRow3Passenger) Reset() {
	*x = VehicleCabinHVACStationRow3Passenger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinHVACStationRow3Passenger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinHVACStationRow3Passenger) ProtoMessage() {}

func (x *VehicleCabinHVACStationRow3Passenger) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinHVACStationRow3Passenger.ProtoReflect.Descriptor instead.
func (*VehicleCabinHVACStationRow3Passenger) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{75}
}

func (x *VehicleCabinHVACStationRow3Passenger) GetFanSpeed() uint32 {
	if x != nil {
		return x.FanSpeed
	}
	return 0
}

func (x *VehicleCabinHVACStationRow3Passenger) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *VehicleCabinHVACStationRow3Passenger) GetAirDistribution() string {
	if x != nil {
		return x.AirDistribution
	}
	return ""
}

type VehicleCabinHVACStationRow4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Driver    *VehicleCabinHVACStationRow4Driver    `protobuf:"bytes,1,opt,name=Driver,proto3" json:"Driver,omitempty"`
	Passenger *VehicleCabinHVACStationRow4Passenger `protobuf:"bytes,2,opt,name=Passenger,proto3" json:"Passenger,omitempty"`
}

func (x *VehicleCabinHVACStationRow4) Reset() {
	*x = VehicleCabinHVACStationRow4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinHVACStationRow4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinHVACStationRow4) ProtoMessage() {}

func (x *VehicleCabinHVACStationRow4) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinHVACStationRow4.ProtoReflect.Descriptor instead.
func (*VehicleCabinHVACStationRow4) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{76}
}

func (x *VehicleCabinHVACStationRow4) GetDriver() *VehicleCabinHVACStationRow4Driver {
	if x != nil {
		return x.Driver
	}
	return nil
}

func (x *VehicleCabinHVACStationRow4) GetPassenger() *VehicleCabinHVACStationRow4Passenger {
	if x != nil {
		return x.Passenger
	}
	return nil
}

type VehicleCabinHVACStationRow4Driver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FanSpeed        uint32  `protobuf:"varint,1,opt,name=FanSpeed,proto3" json:"FanSpeed,omitempty"`
	Temperature     float32 `protobuf:"fixed32,2,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	AirDistribution string  `protobuf:"bytes,3,opt,name=AirDistribution,proto3" json:"AirDistribution,omitempty"`
}

func (x *VehicleCabinHVACStationRow4Driver) Reset() {
	*x = VehicleCabinHVACStationRow4Driver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinHVACStationRow4Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinHVACStationRow4Driver) ProtoMessage() {}

func (x *VehicleCabinHVACStationRow4Driver) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinHVACStationRow4Driver.ProtoReflect.Descriptor instead.
func (*VehicleCabinHVACStationRow4Driver) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{77}
}

func (x *VehicleCabinHVACStationRow4Driver) GetFanSpeed() uint32 {
	if x != nil {
		return x.FanSpeed
	}
	return 0
}

func (x *VehicleCabinHVACStationRow4Driver) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *VehicleCabinHVACStationRow4Driver) GetAirDistribution() string {
	if x != nil {
		return x.AirDistribution
	}
	return ""
}

type VehicleCabinHVACStationRow4Passenger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FanSpeed        uint32  `protobuf:"varint,1,opt,name=FanSpeed,proto3" json:"FanSpeed,omitempty"`
	Temperature     float32 `protobuf:"fixed32,2,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
	AirDistribution string  `protobuf:"bytes,3,opt,name=AirDistribution,proto3" json:"AirDistribution,omitempty"`
}

func (x *VehicleCabinHVACStationRow4Passenger) Reset() {
	*x = VehicleCabinHVACStationRow4Passenger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinHVACStationRow4Passenger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinHVACStationRow4Passenger) ProtoMessage() {}

func (x *VehicleCabinHVACStationRow4Passenger) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinHVACStationRow4Passenger.ProtoReflect.Descriptor instead.
func (*VehicleCabinHVACStationRow4Passenger) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{78}
}

func (x *VehicleCabinHVACStationRow4Passenger) GetFanSpeed() uint32 {
	if x != nil {
		return x.FanSpeed
	}
	return 0
}

func (x *VehicleCabinHVACStationRow4Passenger) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *VehicleCabinHVACStationRow4Passenger) GetAirDistribution() string {
	if x != nil {
		return x.AirDistribution
	}
	return ""
}

type VehicleCabinInfotainment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media                *VehicleCabinInfotainmentMedia                `protobuf:"bytes,1,opt,name=Media,proto3" json:"Media,omitempty"`
	Navigation           *VehicleCabinInfotainmentNavigation           `protobuf:"bytes,2,opt,name=Navigation,proto3" json:"Navigation,omitempty"`
	HMI                  *VehicleCabinInfotainmentHMI                  `protobuf:"bytes,3,opt,name=HMI,proto3" json:"HMI,omitempty"`
	SmartphoneProjection *VehicleCabinInfotainmentSmartphoneProjection `protobuf:"bytes,4,opt,name=SmartphoneProjection,proto3" json:"SmartphoneProjection,omitempty"`
	PowerOptimizeLevel   uint32                                        `protobuf:"varint,5,opt,name=PowerOptimizeLevel,proto3" json:"PowerOptimizeLevel,omitempty"`
	IsAutoPowerOptimize  bool                                          `protobuf:"varint,6,opt,name=IsAutoPowerOptimize,proto3" json:"IsAutoPowerOptimize,omitempty"`
}

func (x *VehicleCabinInfotainment) Reset() {
	*x = VehicleCabinInfotainment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinInfotainment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinInfotainment) ProtoMessage() {}

func (x *VehicleCabinInfotainment) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinInfotainment.ProtoReflect.Descriptor instead.
func (*VehicleCabinInfotainment) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{79}
}

func (x *VehicleCabinInfotainment) GetMedia() *VehicleCabinInfotainmentMedia {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *VehicleCabinInfotainment) GetNavigation() *VehicleCabinInfotainmentNavigation {
	if x != nil {
		return x.Navigation
	}
	return nil
}

func (x *VehicleCabinInfotainment) GetHMI() *VehicleCabinInfotainmentHMI {
	if x != nil {
		return x.HMI
	}
	return nil
}

func (x *VehicleCabinInfotainment) GetSmartphoneProjection() *VehicleCabinInfotainmentSmartphoneProjection {
	if x != nil {
		return x.SmartphoneProjection
	}
	return nil
}

func (x *VehicleCabinInfotainment) GetPowerOptimizeLevel() uint32 {
	if x != nil {
		return x.PowerOptimizeLevel
	}
	return 0
}

func (x *VehicleCabinInfotainment) GetIsAutoPowerOptimize() bool {
	if x != nil {
		return x.IsAutoPowerOptimize
	}
	return false
}

type VehicleCabinInfotainmentMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action      string                               `protobuf:"bytes,1,opt,name=Action,proto3" json:"Action,omitempty"`
	Played      *VehicleCabinInfotainmentMediaPlayed `protobuf:"bytes,2,opt,name=Played,proto3" json:"Played,omitempty"`
	DeclinedURI string                               `protobuf:"bytes,3,opt,name=DeclinedURI,proto3" json:"DeclinedURI,omitempty"`
	SelectedURI string                               `protobuf:"bytes,4,opt,name=SelectedURI,proto3" json:"SelectedURI,omitempty"`
	Volume      uint32                               `protobuf:"varint,5,opt,name=Volume,proto3" json:"Volume,omitempty"`
}

func (x *VehicleCabinInfotainmentMedia) Reset() {
	*x = VehicleCabinInfotainmentMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinInfotainmentMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinInfotainmentMedia) ProtoMessage() {}

func (x *VehicleCabinInfotainmentMedia) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinInfotainmentMedia.ProtoReflect.Descriptor instead.
func (*VehicleCabinInfotainmentMedia) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{80}
}

func (x *VehicleCabinInfotainmentMedia) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *VehicleCabinInfotainmentMedia) GetPlayed() *VehicleCabinInfotainmentMediaPlayed {
	if x != nil {
		return x.Played
	}
	return nil
}

func (x *VehicleCabinInfotainmentMedia) GetDeclinedURI() string {
	if x != nil {
		return x.DeclinedURI
	}
	return ""
}

func (x *VehicleCabinInfotainmentMedia) GetSelectedURI() string {
	if x != nil {
		return x.SelectedURI
	}
	return ""
}

func (x *VehicleCabinInfotainmentMedia) GetVolume() uint32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

type VehicleCabinInfotainmentMediaPlayed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source       string  `protobuf:"bytes,1,opt,name=Source,proto3" json:"Source,omitempty"`
	Artist       string  `protobuf:"bytes,2,opt,name=Artist,proto3" json:"Artist,omitempty"`
	Album        string  `protobuf:"bytes,3,opt,name=Album,proto3" json:"Album,omitempty"`
	Track        string  `protobuf:"bytes,4,opt,name=Track,proto3" json:"Track,omitempty"`
	URI          string  `protobuf:"bytes,5,opt,name=URI,proto3" json:"URI,omitempty"`
	PlaybackRate float32 `protobuf:"fixed32,6,opt,name=PlaybackRate,proto3" json:"PlaybackRate,omitempty"`
}

func (x *VehicleCabinInfotainmentMediaPlayed) Reset() {
	*x = VehicleCabinInfotainmentMediaPlayed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinInfotainmentMediaPlayed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinInfotainmentMediaPlayed) ProtoMessage() {}

func (x *VehicleCabinInfotainmentMediaPlayed) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinInfotainmentMediaPlayed.ProtoReflect.Descriptor instead.
func (*VehicleCabinInfotainmentMediaPlayed) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{81}
}

func (x *VehicleCabinInfotainmentMediaPlayed) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *VehicleCabinInfotainmentMediaPlayed) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *VehicleCabinInfotainmentMediaPlayed) GetAlbum() string {
	if x != nil {
		return x.Album
	}
	return ""
}

func (x *VehicleCabinInfotainmentMediaPlayed) GetTrack() string {
	if x != nil {
		return x.Track
	}
	return ""
}

func (x *VehicleCabinInfotainmentMediaPlayed) GetURI() string {
	if x != nil {
		return x.URI
	}
	return ""
}

func (x *VehicleCabinInfotainmentMediaPlayed) GetPlaybackRate() float32 {
	if x != nil {
		return x.PlaybackRate
	}
	return 0
}

type VehicleCabinInfotainmentNavigation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationSet *VehicleCabinInfotainmentNavigationDestinationSet `protobuf:"bytes,1,opt,name=DestinationSet,proto3" json:"DestinationSet,omitempty"`
	Mute           string                                            `protobuf:"bytes,2,opt,name=Mute,proto3" json:"Mute,omitempty"`
	Volume         uint32                                            `protobuf:"varint,3,opt,name=Volume,proto3" json:"Volume,omitempty"`
	GuidanceVoice  string                                            `protobuf:"bytes,4,opt,name=GuidanceVoice,proto3" json:"GuidanceVoice,omitempty"`
	Map            *VehicleCabinInfotainmentNavigationMap            `protobuf:"bytes,5,opt,name=Map,proto3" json:"Map,omitempty"`
}

func (x *VehicleCabinInfotainmentNavigation) Reset() {
	*x = VehicleCabinInfotainmentNavigation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinInfotainmentNavigation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinInfotainmentNavigation) ProtoMessage() {}

func (x *VehicleCabinInfotainmentNavigation) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinInfotainmentNavigation.ProtoReflect.Descriptor instead.
func (*VehicleCabinInfotainmentNavigation) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{82}
}

func (x *VehicleCabinInfotainmentNavigation) GetDestinationSet() *VehicleCabinInfotainmentNavigationDestinationSet {
	if x != nil {
		return x.DestinationSet
	}
	return nil
}

func (x *VehicleCabinInfotainmentNavigation) GetMute() string {
	if x != nil {
		return x.Mute
	}
	return ""
}

func (x *VehicleCabinInfotainmentNavigation) GetVolume() uint32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *VehicleCabinInfotainmentNavigation) GetGuidanceVoice() string {
	if x != nil {
		return x.GuidanceVoice
	}
	return ""
}

func (x *VehicleCabinInfotainmentNavigation) GetMap() *VehicleCabinInfotainmentNavigationMap {
	if x != nil {
		return x.Map
	}
	return nil
}

type VehicleCabinInfotainmentNavigationDestinationSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
}

func (x *VehicleCabinInfotainmentNavigationDestinationSet) Reset() {
	*x = VehicleCabinInfotainmentNavigationDestinationSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinInfotainmentNavigationDestinationSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinInfotainmentNavigationDestinationSet) ProtoMessage() {}

func (x *VehicleCabinInfotainmentNavigationDestinationSet) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinInfotainmentNavigationDestinationSet.ProtoReflect.Descriptor instead.
func (*VehicleCabinInfotainmentNavigationDestinationSet) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{83}
}

func (x *VehicleCabinInfotainmentNavigationDestinationSet) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *VehicleCabinInfotainmentNavigationDestinationSet) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type VehicleCabinInfotainmentNavigationMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAutoScaleModeUsed bool `protobuf:"varint,1,opt,name=IsAutoScaleModeUsed,proto3" json:"IsAutoScaleModeUsed,omitempty"`
}

func (x *VehicleCabinInfotainmentNavigationMap) Reset() {
	*x = VehicleCabinInfotainmentNavigationMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinInfotainmentNavigationMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinInfotainmentNavigationMap) ProtoMessage() {}

func (x *VehicleCabinInfotainmentNavigationMap) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinInfotainmentNavigationMap.ProtoReflect.Descriptor instead.
func (*VehicleCabinInfotainmentNavigationMap) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{84}
}

func (x *VehicleCabinInfotainmentNavigationMap) GetIsAutoScaleModeUsed() bool {
	if x != nil {
		return x.IsAutoScaleModeUsed
	}
	return false
}

type VehicleCabinInfotainmentHMI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentLanguage    string  `protobuf:"bytes,1,opt,name=CurrentLanguage,proto3" json:"CurrentLanguage,omitempty"`
	FontSize           string  `protobuf:"bytes,2,opt,name=FontSize,proto3" json:"FontSize,omitempty"`
	DateFormat         string  `protobuf:"bytes,3,opt,name=DateFormat,proto3" json:"DateFormat,omitempty"`
	TimeFormat         string  `protobuf:"bytes,4,opt,name=TimeFormat,proto3" json:"TimeFormat,omitempty"`
	DistanceUnit       string  `protobuf:"bytes,5,opt,name=DistanceUnit,proto3" json:"DistanceUnit,omitempty"`
	FuelVolumeUnit     string  `protobuf:"bytes,6,opt,name=FuelVolumeUnit,proto3" json:"FuelVolumeUnit,omitempty"`
	FuelEconomyUnits   string  `protobuf:"bytes,7,opt,name=FuelEconomyUnits,proto3" json:"FuelEconomyUnits,omitempty"`
	EVEconomyUnits     string  `protobuf:"bytes,8,opt,name=EVEconomyUnits,proto3" json:"EVEconomyUnits,omitempty"`
	TemperatureUnit    string  `protobuf:"bytes,9,opt,name=TemperatureUnit,proto3" json:"TemperatureUnit,omitempty"`
	TirePressureUnit   string  `protobuf:"bytes,10,opt,name=TirePressureUnit,proto3" json:"TirePressureUnit,omitempty"`
	SpeedUnit          string  `protobuf:"bytes,11,opt,name=SpeedUnit,proto3" json:"SpeedUnit,omitempty"`
	EVEnergyUnits      string  `protobuf:"bytes,12,opt,name=EVEnergyUnits,proto3" json:"EVEnergyUnits,omitempty"`
	Brightness         float32 `protobuf:"fixed32,13,opt,name=Brightness,proto3" json:"Brightness,omitempty"`
	DayNightMode       string  `protobuf:"bytes,14,opt,name=DayNightMode,proto3" json:"DayNightMode,omitempty"`
	IsScreenAlwaysOn   bool    `protobuf:"varint,15,opt,name=IsScreenAlwaysOn,proto3" json:"IsScreenAlwaysOn,omitempty"`
	LastActionTime     string  `protobuf:"bytes,16,opt,name=LastActionTime,proto3" json:"LastActionTime,omitempty"`
	DisplayOffDuration uint32  `protobuf:"varint,17,opt,name=DisplayOffDuration,proto3" json:"DisplayOffDuration,omitempty"`
}

func (x *VehicleCabinInfotainmentHMI) Reset() {
	*x = VehicleCabinInfotainmentHMI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinInfotainmentHMI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinInfotainmentHMI) ProtoMessage() {}

func (x *VehicleCabinInfotainmentHMI) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinInfotainmentHMI.ProtoReflect.Descriptor instead.
func (*VehicleCabinInfotainmentHMI) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{85}
}

func (x *VehicleCabinInfotainmentHMI) GetCurrentLanguage() string {
	if x != nil {
		return x.CurrentLanguage
	}
	return ""
}

func (x *VehicleCabinInfotainmentHMI) GetFontSize() string {
	if x != nil {
		return x.FontSize
	}
	return ""
}

func (x *VehicleCabinInfotainmentHMI) GetDateFormat() string {
	if x != nil {
		return x.DateFormat
	}
	return ""
}

func (x *VehicleCabinInfotainmentHMI) GetTimeFormat() string {
	if x != nil {
		return x.TimeFormat
	}
	return ""
}

func (x *VehicleCabinInfotainmentHMI) GetDistanceUnit() string {
	if x != nil {
		return x.DistanceUnit
	}
	return ""
}

func (x *VehicleCabinInfotainmentHMI) GetFuelVolumeUnit() string {
	if x != nil {
		return x.FuelVolumeUnit
	}
	return ""
}

func (x *VehicleCabinInfotainmentHMI) GetFuelEconomyUnits() string {
	if x != nil {
		return x.FuelEconomyUnits
	}
	return ""
}

func (x *VehicleCabinInfotainmentHMI) GetEVEconomyUnits() string {
	if x != nil {
		return x.EVEconomyUnits
	}
	return ""
}

func (x *VehicleCabinInfotainmentHMI) GetTemperatureUnit() string {
	if x != nil {
		return x.TemperatureUnit
	}
	return ""
}

func (x *VehicleCabinInfotainmentHMI) GetTirePressureUnit() string {
	if x != nil {
		return x.TirePressureUnit
	}
	return ""
}

func (x *VehicleCabinInfotainmentHMI) GetSpeedUnit() string {
	if x != nil {
		return x.SpeedUnit
	}
	return ""
}

func (x *VehicleCabinInfotainmentHMI) GetEVEnergyUnits() string {
	if x != nil {
		return x.EVEnergyUnits
	}
	return ""
}

func (x *VehicleCabinInfotainmentHMI) GetBrightness() float32 {
	if x != nil {
		return x.Brightness
	}
	return 0
}

func (x *VehicleCabinInfotainmentHMI) GetDayNightMode() string {
	if x != nil {
		return x.DayNightMode
	}
	return ""
}

func (x *VehicleCabinInfotainmentHMI) GetIsScreenAlwaysOn() bool {
	if x != nil {
		return x.IsScreenAlwaysOn
	}
	return false
}

func (x *VehicleCabinInfotainmentHMI) GetLastActionTime() string {
	if x != nil {
		return x.LastActionTime
	}
	return ""
}

func (x *VehicleCabinInfotainmentHMI) GetDisplayOffDuration() uint32 {
	if x != nil {
		return x.DisplayOffDuration
	}
	return 0
}

type VehicleCabinInfotainmentSmartphoneProjection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active        string   `protobuf:"bytes,1,opt,name=Active,proto3" json:"Active,omitempty"`
	Source        string   `protobuf:"bytes,2,opt,name=Source,proto3" json:"Source,omitempty"`
	SupportedMode []string `protobuf:"bytes,3,rep,name=SupportedMode,proto3" json:"SupportedMode,omitempty"`
}

func (x *VehicleCabinInfotainmentSmartphoneProjection) Reset() {
	*x = VehicleCabinInfotainmentSmartphoneProjection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinInfotainmentSmartphoneProjection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinInfotainmentSmartphoneProjection) ProtoMessage() {}

func (x *VehicleCabinInfotainmentSmartphoneProjection) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinInfotainmentSmartphoneProjection.ProtoReflect.Descriptor instead.
func (*VehicleCabinInfotainmentSmartphoneProjection) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{86}
}

func (x *VehicleCabinInfotainmentSmartphoneProjection) GetActive() string {
	if x != nil {
		return x.Active
	}
	return ""
}

func (x *VehicleCabinInfotainmentSmartphoneProjection) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *VehicleCabinInfotainmentSmartphoneProjection) GetSupportedMode() []string {
	if x != nil {
		return x.SupportedMode
	}
	return nil
}

type VehicleCabinSunroof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position int32                     `protobuf:"varint,1,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch   string                    `protobuf:"bytes,2,opt,name=Switch,proto3" json:"Switch,omitempty"`
	Shade    *VehicleCabinSunroofShade `protobuf:"bytes,3,opt,name=Shade,proto3" json:"Shade,omitempty"`
}

func (x *VehicleCabinSunroof) Reset() {
	*x = VehicleCabinSunroof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSunroof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSunroof) ProtoMessage() {}

func (x *VehicleCabinSunroof) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSunroof.ProtoReflect.Descriptor instead.
func (*VehicleCabinSunroof) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{87}
}

func (x *VehicleCabinSunroof) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinSunroof) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

func (x *VehicleCabinSunroof) GetShade() *VehicleCabinSunroofShade {
	if x != nil {
		return x.Shade
	}
	return nil
}

type VehicleCabinSunroofShade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen   bool   `protobuf:"varint,1,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position uint32 `protobuf:"varint,2,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch   string `protobuf:"bytes,3,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinSunroofShade) Reset() {
	*x = VehicleCabinSunroofShade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSunroofShade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSunroofShade) ProtoMessage() {}

func (x *VehicleCabinSunroofShade) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSunroofShade.ProtoReflect.Descriptor instead.
func (*VehicleCabinSunroofShade) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{88}
}

func (x *VehicleCabinSunroofShade) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleCabinSunroofShade) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinSunroofShade) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

type VehicleCabinRearviewMirror struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DimmingLevel uint32 `protobuf:"varint,1,opt,name=DimmingLevel,proto3" json:"DimmingLevel,omitempty"`
}

func (x *VehicleCabinRearviewMirror) Reset() {
	*x = VehicleCabinRearviewMirror{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinRearviewMirror) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinRearviewMirror) ProtoMessage() {}

func (x *VehicleCabinRearviewMirror) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinRearviewMirror.ProtoReflect.Descriptor instead.
func (*VehicleCabinRearviewMirror) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{89}
}

func (x *VehicleCabinRearviewMirror) GetDimmingLevel() uint32 {
	if x != nil {
		return x.DimmingLevel
	}
	return 0
}

type VehicleCabinLight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsGloveBoxOn          bool                                  `protobuf:"varint,1,opt,name=IsGloveBoxOn,proto3" json:"IsGloveBoxOn,omitempty"`
	IsDomeOn              bool                                  `protobuf:"varint,2,opt,name=IsDomeOn,proto3" json:"IsDomeOn,omitempty"`
	PerceivedAmbientLight uint32                                `protobuf:"varint,3,opt,name=PerceivedAmbientLight,proto3" json:"PerceivedAmbientLight,omitempty"`
	Spotlight             *VehicleCabinLightSpotlight           `protobuf:"bytes,4,opt,name=Spotlight,proto3" json:"Spotlight,omitempty"`
	AmbientLight          *VehicleCabinLightAmbientLight        `protobuf:"bytes,5,opt,name=AmbientLight,proto3" json:"AmbientLight,omitempty"`
	InteractiveLightBar   *VehicleCabinLightInteractiveLightBar `protobuf:"bytes,6,opt,name=InteractiveLightBar,proto3" json:"InteractiveLightBar,omitempty"`
}

func (x *VehicleCabinLight) Reset() {
	*x = VehicleCabinLight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLight) ProtoMessage() {}

func (x *VehicleCabinLight) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLight.ProtoReflect.Descriptor instead.
func (*VehicleCabinLight) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{90}
}

func (x *VehicleCabinLight) GetIsGloveBoxOn() bool {
	if x != nil {
		return x.IsGloveBoxOn
	}
	return false
}

func (x *VehicleCabinLight) GetIsDomeOn() bool {
	if x != nil {
		return x.IsDomeOn
	}
	return false
}

func (x *VehicleCabinLight) GetPerceivedAmbientLight() uint32 {
	if x != nil {
		return x.PerceivedAmbientLight
	}
	return 0
}

func (x *VehicleCabinLight) GetSpotlight() *VehicleCabinLightSpotlight {
	if x != nil {
		return x.Spotlight
	}
	return nil
}

func (x *VehicleCabinLight) GetAmbientLight() *VehicleCabinLightAmbientLight {
	if x != nil {
		return x.AmbientLight
	}
	return nil
}

func (x *VehicleCabinLight) GetInteractiveLightBar() *VehicleCabinLightInteractiveLightBar {
	if x != nil {
		return x.InteractiveLightBar
	}
	return nil
}

type VehicleCabinLightSpotlight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row1 *VehicleCabinLightSpotlightRow1 `protobuf:"bytes,1,opt,name=Row1,proto3" json:"Row1,omitempty"`
	Row2 *VehicleCabinLightSpotlightRow2 `protobuf:"bytes,2,opt,name=Row2,proto3" json:"Row2,omitempty"`
	Row3 *VehicleCabinLightSpotlightRow3 `protobuf:"bytes,3,opt,name=Row3,proto3" json:"Row3,omitempty"`
	Row4 *VehicleCabinLightSpotlightRow4 `protobuf:"bytes,4,opt,name=Row4,proto3" json:"Row4,omitempty"`
}

func (x *VehicleCabinLightSpotlight) Reset() {
	*x = VehicleCabinLightSpotlight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightSpotlight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightSpotlight) ProtoMessage() {}

func (x *VehicleCabinLightSpotlight) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightSpotlight.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightSpotlight) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{91}
}

func (x *VehicleCabinLightSpotlight) GetRow1() *VehicleCabinLightSpotlightRow1 {
	if x != nil {
		return x.Row1
	}
	return nil
}

func (x *VehicleCabinLightSpotlight) GetRow2() *VehicleCabinLightSpotlightRow2 {
	if x != nil {
		return x.Row2
	}
	return nil
}

func (x *VehicleCabinLightSpotlight) GetRow3() *VehicleCabinLightSpotlightRow3 {
	if x != nil {
		return x.Row3
	}
	return nil
}

func (x *VehicleCabinLightSpotlight) GetRow4() *VehicleCabinLightSpotlightRow4 {
	if x != nil {
		return x.Row4
	}
	return nil
}

type VehicleCabinLightSpotlightRow1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverSide    *VehicleCabinLightSpotlightRow1DriverSide    `protobuf:"bytes,1,opt,name=DriverSide,proto3" json:"DriverSide,omitempty"`
	PassengerSide *VehicleCabinLightSpotlightRow1PassengerSide `protobuf:"bytes,2,opt,name=PassengerSide,proto3" json:"PassengerSide,omitempty"`
}

func (x *VehicleCabinLightSpotlightRow1) Reset() {
	*x = VehicleCabinLightSpotlightRow1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightSpotlightRow1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightSpotlightRow1) ProtoMessage() {}

func (x *VehicleCabinLightSpotlightRow1) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightSpotlightRow1.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightSpotlightRow1) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{92}
}

func (x *VehicleCabinLightSpotlightRow1) GetDriverSide() *VehicleCabinLightSpotlightRow1DriverSide {
	if x != nil {
		return x.DriverSide
	}
	return nil
}

func (x *VehicleCabinLightSpotlightRow1) GetPassengerSide() *VehicleCabinLightSpotlightRow1PassengerSide {
	if x != nil {
		return x.PassengerSide
	}
	return nil
}

type VehicleCabinLightSpotlightRow1DriverSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLightOn bool   `protobuf:"varint,1,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
	Intensity uint32 `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color,omitempty"`
}

func (x *VehicleCabinLightSpotlightRow1DriverSide) Reset() {
	*x = VehicleCabinLightSpotlightRow1DriverSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightSpotlightRow1DriverSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightSpotlightRow1DriverSide) ProtoMessage() {}

func (x *VehicleCabinLightSpotlightRow1DriverSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightSpotlightRow1DriverSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightSpotlightRow1DriverSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{93}
}

func (x *VehicleCabinLightSpotlightRow1DriverSide) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

func (x *VehicleCabinLightSpotlightRow1DriverSide) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleCabinLightSpotlightRow1DriverSide) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type VehicleCabinLightSpotlightRow1PassengerSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLightOn bool   `protobuf:"varint,1,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
	Intensity uint32 `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color,omitempty"`
}

func (x *VehicleCabinLightSpotlightRow1PassengerSide) Reset() {
	*x = VehicleCabinLightSpotlightRow1PassengerSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightSpotlightRow1PassengerSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightSpotlightRow1PassengerSide) ProtoMessage() {}

func (x *VehicleCabinLightSpotlightRow1PassengerSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightSpotlightRow1PassengerSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightSpotlightRow1PassengerSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{94}
}

func (x *VehicleCabinLightSpotlightRow1PassengerSide) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

func (x *VehicleCabinLightSpotlightRow1PassengerSide) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleCabinLightSpotlightRow1PassengerSide) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type VehicleCabinLightSpotlightRow2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverSide    *VehicleCabinLightSpotlightRow2DriverSide    `protobuf:"bytes,1,opt,name=DriverSide,proto3" json:"DriverSide,omitempty"`
	PassengerSide *VehicleCabinLightSpotlightRow2PassengerSide `protobuf:"bytes,2,opt,name=PassengerSide,proto3" json:"PassengerSide,omitempty"`
}

func (x *VehicleCabinLightSpotlightRow2) Reset() {
	*x = VehicleCabinLightSpotlightRow2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightSpotlightRow2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightSpotlightRow2) ProtoMessage() {}

func (x *VehicleCabinLightSpotlightRow2) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightSpotlightRow2.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightSpotlightRow2) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{95}
}

func (x *VehicleCabinLightSpotlightRow2) GetDriverSide() *VehicleCabinLightSpotlightRow2DriverSide {
	if x != nil {
		return x.DriverSide
	}
	return nil
}

func (x *VehicleCabinLightSpotlightRow2) GetPassengerSide() *VehicleCabinLightSpotlightRow2PassengerSide {
	if x != nil {
		return x.PassengerSide
	}
	return nil
}

type VehicleCabinLightSpotlightRow2DriverSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLightOn bool   `protobuf:"varint,1,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
	Intensity uint32 `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color,omitempty"`
}

func (x *VehicleCabinLightSpotlightRow2DriverSide) Reset() {
	*x = VehicleCabinLightSpotlightRow2DriverSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightSpotlightRow2DriverSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightSpotlightRow2DriverSide) ProtoMessage() {}

func (x *VehicleCabinLightSpotlightRow2DriverSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightSpotlightRow2DriverSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightSpotlightRow2DriverSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{96}
}

func (x *VehicleCabinLightSpotlightRow2DriverSide) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

func (x *VehicleCabinLightSpotlightRow2DriverSide) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleCabinLightSpotlightRow2DriverSide) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type VehicleCabinLightSpotlightRow2PassengerSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLightOn bool   `protobuf:"varint,1,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
	Intensity uint32 `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color,omitempty"`
}

func (x *VehicleCabinLightSpotlightRow2PassengerSide) Reset() {
	*x = VehicleCabinLightSpotlightRow2PassengerSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightSpotlightRow2PassengerSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightSpotlightRow2PassengerSide) ProtoMessage() {}

func (x *VehicleCabinLightSpotlightRow2PassengerSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightSpotlightRow2PassengerSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightSpotlightRow2PassengerSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{97}
}

func (x *VehicleCabinLightSpotlightRow2PassengerSide) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

func (x *VehicleCabinLightSpotlightRow2PassengerSide) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleCabinLightSpotlightRow2PassengerSide) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type VehicleCabinLightSpotlightRow3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverSide    *VehicleCabinLightSpotlightRow3DriverSide    `protobuf:"bytes,1,opt,name=DriverSide,proto3" json:"DriverSide,omitempty"`
	PassengerSide *VehicleCabinLightSpotlightRow3PassengerSide `protobuf:"bytes,2,opt,name=PassengerSide,proto3" json:"PassengerSide,omitempty"`
}

func (x *VehicleCabinLightSpotlightRow3) Reset() {
	*x = VehicleCabinLightSpotlightRow3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightSpotlightRow3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightSpotlightRow3) ProtoMessage() {}

func (x *VehicleCabinLightSpotlightRow3) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightSpotlightRow3.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightSpotlightRow3) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{98}
}

func (x *VehicleCabinLightSpotlightRow3) GetDriverSide() *VehicleCabinLightSpotlightRow3DriverSide {
	if x != nil {
		return x.DriverSide
	}
	return nil
}

func (x *VehicleCabinLightSpotlightRow3) GetPassengerSide() *VehicleCabinLightSpotlightRow3PassengerSide {
	if x != nil {
		return x.PassengerSide
	}
	return nil
}

type VehicleCabinLightSpotlightRow3DriverSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLightOn bool   `protobuf:"varint,1,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
	Intensity uint32 `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color,omitempty"`
}

func (x *VehicleCabinLightSpotlightRow3DriverSide) Reset() {
	*x = VehicleCabinLightSpotlightRow3DriverSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightSpotlightRow3DriverSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightSpotlightRow3DriverSide) ProtoMessage() {}

func (x *VehicleCabinLightSpotlightRow3DriverSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightSpotlightRow3DriverSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightSpotlightRow3DriverSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{99}
}

func (x *VehicleCabinLightSpotlightRow3DriverSide) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

func (x *VehicleCabinLightSpotlightRow3DriverSide) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleCabinLightSpotlightRow3DriverSide) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type VehicleCabinLightSpotlightRow3PassengerSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLightOn bool   `protobuf:"varint,1,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
	Intensity uint32 `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color,omitempty"`
}

func (x *VehicleCabinLightSpotlightRow3PassengerSide) Reset() {
	*x = VehicleCabinLightSpotlightRow3PassengerSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightSpotlightRow3PassengerSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightSpotlightRow3PassengerSide) ProtoMessage() {}

func (x *VehicleCabinLightSpotlightRow3PassengerSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightSpotlightRow3PassengerSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightSpotlightRow3PassengerSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{100}
}

func (x *VehicleCabinLightSpotlightRow3PassengerSide) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

func (x *VehicleCabinLightSpotlightRow3PassengerSide) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleCabinLightSpotlightRow3PassengerSide) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type VehicleCabinLightSpotlightRow4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverSide    *VehicleCabinLightSpotlightRow4DriverSide    `protobuf:"bytes,1,opt,name=DriverSide,proto3" json:"DriverSide,omitempty"`
	PassengerSide *VehicleCabinLightSpotlightRow4PassengerSide `protobuf:"bytes,2,opt,name=PassengerSide,proto3" json:"PassengerSide,omitempty"`
}

func (x *VehicleCabinLightSpotlightRow4) Reset() {
	*x = VehicleCabinLightSpotlightRow4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightSpotlightRow4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightSpotlightRow4) ProtoMessage() {}

func (x *VehicleCabinLightSpotlightRow4) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightSpotlightRow4.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightSpotlightRow4) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{101}
}

func (x *VehicleCabinLightSpotlightRow4) GetDriverSide() *VehicleCabinLightSpotlightRow4DriverSide {
	if x != nil {
		return x.DriverSide
	}
	return nil
}

func (x *VehicleCabinLightSpotlightRow4) GetPassengerSide() *VehicleCabinLightSpotlightRow4PassengerSide {
	if x != nil {
		return x.PassengerSide
	}
	return nil
}

type VehicleCabinLightSpotlightRow4DriverSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLightOn bool   `protobuf:"varint,1,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
	Intensity uint32 `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color,omitempty"`
}

func (x *VehicleCabinLightSpotlightRow4DriverSide) Reset() {
	*x = VehicleCabinLightSpotlightRow4DriverSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightSpotlightRow4DriverSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightSpotlightRow4DriverSide) ProtoMessage() {}

func (x *VehicleCabinLightSpotlightRow4DriverSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightSpotlightRow4DriverSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightSpotlightRow4DriverSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{102}
}

func (x *VehicleCabinLightSpotlightRow4DriverSide) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

func (x *VehicleCabinLightSpotlightRow4DriverSide) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleCabinLightSpotlightRow4DriverSide) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type VehicleCabinLightSpotlightRow4PassengerSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLightOn bool   `protobuf:"varint,1,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
	Intensity uint32 `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color,omitempty"`
}

func (x *VehicleCabinLightSpotlightRow4PassengerSide) Reset() {
	*x = VehicleCabinLightSpotlightRow4PassengerSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightSpotlightRow4PassengerSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightSpotlightRow4PassengerSide) ProtoMessage() {}

func (x *VehicleCabinLightSpotlightRow4PassengerSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightSpotlightRow4PassengerSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightSpotlightRow4PassengerSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{103}
}

func (x *VehicleCabinLightSpotlightRow4PassengerSide) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

func (x *VehicleCabinLightSpotlightRow4PassengerSide) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleCabinLightSpotlightRow4PassengerSide) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type VehicleCabinLightAmbientLight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row1 *VehicleCabinLightAmbientLightRow1 `protobuf:"bytes,1,opt,name=Row1,proto3" json:"Row1,omitempty"`
	Row2 *VehicleCabinLightAmbientLightRow2 `protobuf:"bytes,2,opt,name=Row2,proto3" json:"Row2,omitempty"`
}

func (x *VehicleCabinLightAmbientLight) Reset() {
	*x = VehicleCabinLightAmbientLight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightAmbientLight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightAmbientLight) ProtoMessage() {}

func (x *VehicleCabinLightAmbientLight) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightAmbientLight.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightAmbientLight) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{104}
}

func (x *VehicleCabinLightAmbientLight) GetRow1() *VehicleCabinLightAmbientLightRow1 {
	if x != nil {
		return x.Row1
	}
	return nil
}

func (x *VehicleCabinLightAmbientLight) GetRow2() *VehicleCabinLightAmbientLightRow2 {
	if x != nil {
		return x.Row2
	}
	return nil
}

type VehicleCabinLightAmbientLightRow1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverSide    *VehicleCabinLightAmbientLightRow1DriverSide    `protobuf:"bytes,1,opt,name=DriverSide,proto3" json:"DriverSide,omitempty"`
	PassengerSide *VehicleCabinLightAmbientLightRow1PassengerSide `protobuf:"bytes,2,opt,name=PassengerSide,proto3" json:"PassengerSide,omitempty"`
}

func (x *VehicleCabinLightAmbientLightRow1) Reset() {
	*x = VehicleCabinLightAmbientLightRow1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightAmbientLightRow1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightAmbientLightRow1) ProtoMessage() {}

func (x *VehicleCabinLightAmbientLightRow1) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightAmbientLightRow1.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightAmbientLightRow1) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{105}
}

func (x *VehicleCabinLightAmbientLightRow1) GetDriverSide() *VehicleCabinLightAmbientLightRow1DriverSide {
	if x != nil {
		return x.DriverSide
	}
	return nil
}

func (x *VehicleCabinLightAmbientLightRow1) GetPassengerSide() *VehicleCabinLightAmbientLightRow1PassengerSide {
	if x != nil {
		return x.PassengerSide
	}
	return nil
}

type VehicleCabinLightAmbientLightRow1DriverSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLightOn bool   `protobuf:"varint,1,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
	Intensity uint32 `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color,omitempty"`
}

func (x *VehicleCabinLightAmbientLightRow1DriverSide) Reset() {
	*x = VehicleCabinLightAmbientLightRow1DriverSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightAmbientLightRow1DriverSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightAmbientLightRow1DriverSide) ProtoMessage() {}

func (x *VehicleCabinLightAmbientLightRow1DriverSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightAmbientLightRow1DriverSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightAmbientLightRow1DriverSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{106}
}

func (x *VehicleCabinLightAmbientLightRow1DriverSide) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

func (x *VehicleCabinLightAmbientLightRow1DriverSide) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleCabinLightAmbientLightRow1DriverSide) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type VehicleCabinLightAmbientLightRow1PassengerSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLightOn bool   `protobuf:"varint,1,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
	Intensity uint32 `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color,omitempty"`
}

func (x *VehicleCabinLightAmbientLightRow1PassengerSide) Reset() {
	*x = VehicleCabinLightAmbientLightRow1PassengerSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightAmbientLightRow1PassengerSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightAmbientLightRow1PassengerSide) ProtoMessage() {}

func (x *VehicleCabinLightAmbientLightRow1PassengerSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightAmbientLightRow1PassengerSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightAmbientLightRow1PassengerSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{107}
}

func (x *VehicleCabinLightAmbientLightRow1PassengerSide) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

func (x *VehicleCabinLightAmbientLightRow1PassengerSide) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleCabinLightAmbientLightRow1PassengerSide) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type VehicleCabinLightAmbientLightRow2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverSide    *VehicleCabinLightAmbientLightRow2DriverSide    `protobuf:"bytes,1,opt,name=DriverSide,proto3" json:"DriverSide,omitempty"`
	PassengerSide *VehicleCabinLightAmbientLightRow2PassengerSide `protobuf:"bytes,2,opt,name=PassengerSide,proto3" json:"PassengerSide,omitempty"`
}

func (x *VehicleCabinLightAmbientLightRow2) Reset() {
	*x = VehicleCabinLightAmbientLightRow2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightAmbientLightRow2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightAmbientLightRow2) ProtoMessage() {}

func (x *VehicleCabinLightAmbientLightRow2) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightAmbientLightRow2.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightAmbientLightRow2) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{108}
}

func (x *VehicleCabinLightAmbientLightRow2) GetDriverSide() *VehicleCabinLightAmbientLightRow2DriverSide {
	if x != nil {
		return x.DriverSide
	}
	return nil
}

func (x *VehicleCabinLightAmbientLightRow2) GetPassengerSide() *VehicleCabinLightAmbientLightRow2PassengerSide {
	if x != nil {
		return x.PassengerSide
	}
	return nil
}

type VehicleCabinLightAmbientLightRow2DriverSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLightOn bool   `protobuf:"varint,1,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
	Intensity uint32 `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color,omitempty"`
}

func (x *VehicleCabinLightAmbientLightRow2DriverSide) Reset() {
	*x = VehicleCabinLightAmbientLightRow2DriverSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightAmbientLightRow2DriverSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightAmbientLightRow2DriverSide) ProtoMessage() {}

func (x *VehicleCabinLightAmbientLightRow2DriverSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightAmbientLightRow2DriverSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightAmbientLightRow2DriverSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{109}
}

func (x *VehicleCabinLightAmbientLightRow2DriverSide) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

func (x *VehicleCabinLightAmbientLightRow2DriverSide) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleCabinLightAmbientLightRow2DriverSide) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type VehicleCabinLightAmbientLightRow2PassengerSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLightOn bool   `protobuf:"varint,1,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
	Intensity uint32 `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color,omitempty"`
}

func (x *VehicleCabinLightAmbientLightRow2PassengerSide) Reset() {
	*x = VehicleCabinLightAmbientLightRow2PassengerSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightAmbientLightRow2PassengerSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightAmbientLightRow2PassengerSide) ProtoMessage() {}

func (x *VehicleCabinLightAmbientLightRow2PassengerSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightAmbientLightRow2PassengerSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightAmbientLightRow2PassengerSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{110}
}

func (x *VehicleCabinLightAmbientLightRow2PassengerSide) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

func (x *VehicleCabinLightAmbientLightRow2PassengerSide) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleCabinLightAmbientLightRow2PassengerSide) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type VehicleCabinLightInteractiveLightBar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLightOn bool   `protobuf:"varint,1,opt,name=IsLightOn,proto3" json:"IsLightOn,omitempty"`
	Intensity uint32 `protobuf:"varint,2,opt,name=Intensity,proto3" json:"Intensity,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=Color,proto3" json:"Color,omitempty"`
	Effect    string `protobuf:"bytes,4,opt,name=Effect,proto3" json:"Effect,omitempty"`
}

func (x *VehicleCabinLightInteractiveLightBar) Reset() {
	*x = VehicleCabinLightInteractiveLightBar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinLightInteractiveLightBar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinLightInteractiveLightBar) ProtoMessage() {}

func (x *VehicleCabinLightInteractiveLightBar) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinLightInteractiveLightBar.ProtoReflect.Descriptor instead.
func (*VehicleCabinLightInteractiveLightBar) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{111}
}

func (x *VehicleCabinLightInteractiveLightBar) GetIsLightOn() bool {
	if x != nil {
		return x.IsLightOn
	}
	return false
}

func (x *VehicleCabinLightInteractiveLightBar) GetIntensity() uint32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *VehicleCabinLightInteractiveLightBar) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *VehicleCabinLightInteractiveLightBar) GetEffect() string {
	if x != nil {
		return x.Effect
	}
	return ""
}

type VehicleCabinDoor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row1 *VehicleCabinDoorRow1 `protobuf:"bytes,1,opt,name=Row1,proto3" json:"Row1,omitempty"`
	Row2 *VehicleCabinDoorRow2 `protobuf:"bytes,2,opt,name=Row2,proto3" json:"Row2,omitempty"`
}

func (x *VehicleCabinDoor) Reset() {
	*x = VehicleCabinDoor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoor) ProtoMessage() {}

func (x *VehicleCabinDoor) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoor.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoor) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{112}
}

func (x *VehicleCabinDoor) GetRow1() *VehicleCabinDoorRow1 {
	if x != nil {
		return x.Row1
	}
	return nil
}

func (x *VehicleCabinDoor) GetRow2() *VehicleCabinDoorRow2 {
	if x != nil {
		return x.Row2
	}
	return nil
}

type VehicleCabinDoorRow1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverSide    *VehicleCabinDoorRow1DriverSide    `protobuf:"bytes,1,opt,name=DriverSide,proto3" json:"DriverSide,omitempty"`
	PassengerSide *VehicleCabinDoorRow1PassengerSide `protobuf:"bytes,2,opt,name=PassengerSide,proto3" json:"PassengerSide,omitempty"`
}

func (x *VehicleCabinDoorRow1) Reset() {
	*x = VehicleCabinDoorRow1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoorRow1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoorRow1) ProtoMessage() {}

func (x *VehicleCabinDoorRow1) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoorRow1.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoorRow1) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{113}
}

func (x *VehicleCabinDoorRow1) GetDriverSide() *VehicleCabinDoorRow1DriverSide {
	if x != nil {
		return x.DriverSide
	}
	return nil
}

func (x *VehicleCabinDoorRow1) GetPassengerSide() *VehicleCabinDoorRow1PassengerSide {
	if x != nil {
		return x.PassengerSide
	}
	return nil
}

type VehicleCabinDoorRow1DriverSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLocked          bool                                  `protobuf:"varint,1,opt,name=IsLocked,proto3" json:"IsLocked,omitempty"`
	IsOpen            bool                                  `protobuf:"varint,2,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position          uint32                                `protobuf:"varint,3,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch            string                                `protobuf:"bytes,4,opt,name=Switch,proto3" json:"Switch,omitempty"`
	Window            *VehicleCabinDoorRow1DriverSideWindow `protobuf:"bytes,5,opt,name=Window,proto3" json:"Window,omitempty"`
	IsChildLockActive bool                                  `protobuf:"varint,6,opt,name=IsChildLockActive,proto3" json:"IsChildLockActive,omitempty"`
	Shade             *VehicleCabinDoorRow1DriverSideShade  `protobuf:"bytes,7,opt,name=Shade,proto3" json:"Shade,omitempty"`
}

func (x *VehicleCabinDoorRow1DriverSide) Reset() {
	*x = VehicleCabinDoorRow1DriverSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoorRow1DriverSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoorRow1DriverSide) ProtoMessage() {}

func (x *VehicleCabinDoorRow1DriverSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoorRow1DriverSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoorRow1DriverSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{114}
}

func (x *VehicleCabinDoorRow1DriverSide) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *VehicleCabinDoorRow1DriverSide) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleCabinDoorRow1DriverSide) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinDoorRow1DriverSide) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

func (x *VehicleCabinDoorRow1DriverSide) GetWindow() *VehicleCabinDoorRow1DriverSideWindow {
	if x != nil {
		return x.Window
	}
	return nil
}

func (x *VehicleCabinDoorRow1DriverSide) GetIsChildLockActive() bool {
	if x != nil {
		return x.IsChildLockActive
	}
	return false
}

func (x *VehicleCabinDoorRow1DriverSide) GetShade() *VehicleCabinDoorRow1DriverSideShade {
	if x != nil {
		return x.Shade
	}
	return nil
}

type VehicleCabinDoorRow1DriverSideWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen   bool   `protobuf:"varint,1,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position uint32 `protobuf:"varint,2,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch   string `protobuf:"bytes,3,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinDoorRow1DriverSideWindow) Reset() {
	*x = VehicleCabinDoorRow1DriverSideWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoorRow1DriverSideWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoorRow1DriverSideWindow) ProtoMessage() {}

func (x *VehicleCabinDoorRow1DriverSideWindow) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoorRow1DriverSideWindow.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoorRow1DriverSideWindow) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{115}
}

func (x *VehicleCabinDoorRow1DriverSideWindow) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleCabinDoorRow1DriverSideWindow) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinDoorRow1DriverSideWindow) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

type VehicleCabinDoorRow1DriverSideShade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen   bool   `protobuf:"varint,1,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position uint32 `protobuf:"varint,2,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch   string `protobuf:"bytes,3,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinDoorRow1DriverSideShade) Reset() {
	*x = VehicleCabinDoorRow1DriverSideShade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoorRow1DriverSideShade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoorRow1DriverSideShade) ProtoMessage() {}

func (x *VehicleCabinDoorRow1DriverSideShade) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoorRow1DriverSideShade.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoorRow1DriverSideShade) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{116}
}

func (x *VehicleCabinDoorRow1DriverSideShade) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleCabinDoorRow1DriverSideShade) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinDoorRow1DriverSideShade) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

type VehicleCabinDoorRow1PassengerSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLocked          bool                                     `protobuf:"varint,1,opt,name=IsLocked,proto3" json:"IsLocked,omitempty"`
	IsOpen            bool                                     `protobuf:"varint,2,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position          uint32                                   `protobuf:"varint,3,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch            string                                   `protobuf:"bytes,4,opt,name=Switch,proto3" json:"Switch,omitempty"`
	Window            *VehicleCabinDoorRow1PassengerSideWindow `protobuf:"bytes,5,opt,name=Window,proto3" json:"Window,omitempty"`
	IsChildLockActive bool                                     `protobuf:"varint,6,opt,name=IsChildLockActive,proto3" json:"IsChildLockActive,omitempty"`
	Shade             *VehicleCabinDoorRow1PassengerSideShade  `protobuf:"bytes,7,opt,name=Shade,proto3" json:"Shade,omitempty"`
}

func (x *VehicleCabinDoorRow1PassengerSide) Reset() {
	*x = VehicleCabinDoorRow1PassengerSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoorRow1PassengerSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoorRow1PassengerSide) ProtoMessage() {}

func (x *VehicleCabinDoorRow1PassengerSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoorRow1PassengerSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoorRow1PassengerSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{117}
}

func (x *VehicleCabinDoorRow1PassengerSide) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *VehicleCabinDoorRow1PassengerSide) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleCabinDoorRow1PassengerSide) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinDoorRow1PassengerSide) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

func (x *VehicleCabinDoorRow1PassengerSide) GetWindow() *VehicleCabinDoorRow1PassengerSideWindow {
	if x != nil {
		return x.Window
	}
	return nil
}

func (x *VehicleCabinDoorRow1PassengerSide) GetIsChildLockActive() bool {
	if x != nil {
		return x.IsChildLockActive
	}
	return false
}

func (x *VehicleCabinDoorRow1PassengerSide) GetShade() *VehicleCabinDoorRow1PassengerSideShade {
	if x != nil {
		return x.Shade
	}
	return nil
}

type VehicleCabinDoorRow1PassengerSideWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen   bool   `protobuf:"varint,1,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position uint32 `protobuf:"varint,2,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch   string `protobuf:"bytes,3,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinDoorRow1PassengerSideWindow) Reset() {
	*x = VehicleCabinDoorRow1PassengerSideWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoorRow1PassengerSideWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoorRow1PassengerSideWindow) ProtoMessage() {}

func (x *VehicleCabinDoorRow1PassengerSideWindow) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoorRow1PassengerSideWindow.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoorRow1PassengerSideWindow) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{118}
}

func (x *VehicleCabinDoorRow1PassengerSideWindow) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleCabinDoorRow1PassengerSideWindow) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinDoorRow1PassengerSideWindow) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

type VehicleCabinDoorRow1PassengerSideShade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen   bool   `protobuf:"varint,1,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position uint32 `protobuf:"varint,2,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch   string `protobuf:"bytes,3,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinDoorRow1PassengerSideShade) Reset() {
	*x = VehicleCabinDoorRow1PassengerSideShade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoorRow1PassengerSideShade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoorRow1PassengerSideShade) ProtoMessage() {}

func (x *VehicleCabinDoorRow1PassengerSideShade) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoorRow1PassengerSideShade.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoorRow1PassengerSideShade) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{119}
}

func (x *VehicleCabinDoorRow1PassengerSideShade) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleCabinDoorRow1PassengerSideShade) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinDoorRow1PassengerSideShade) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

type VehicleCabinDoorRow2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverSide    *VehicleCabinDoorRow2DriverSide    `protobuf:"bytes,1,opt,name=DriverSide,proto3" json:"DriverSide,omitempty"`
	PassengerSide *VehicleCabinDoorRow2PassengerSide `protobuf:"bytes,2,opt,name=PassengerSide,proto3" json:"PassengerSide,omitempty"`
}

func (x *VehicleCabinDoorRow2) Reset() {
	*x = VehicleCabinDoorRow2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoorRow2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoorRow2) ProtoMessage() {}

func (x *VehicleCabinDoorRow2) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoorRow2.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoorRow2) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{120}
}

func (x *VehicleCabinDoorRow2) GetDriverSide() *VehicleCabinDoorRow2DriverSide {
	if x != nil {
		return x.DriverSide
	}
	return nil
}

func (x *VehicleCabinDoorRow2) GetPassengerSide() *VehicleCabinDoorRow2PassengerSide {
	if x != nil {
		return x.PassengerSide
	}
	return nil
}

type VehicleCabinDoorRow2DriverSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLocked          bool                                  `protobuf:"varint,1,opt,name=IsLocked,proto3" json:"IsLocked,omitempty"`
	IsOpen            bool                                  `protobuf:"varint,2,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position          uint32                                `protobuf:"varint,3,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch            string                                `protobuf:"bytes,4,opt,name=Switch,proto3" json:"Switch,omitempty"`
	Window            *VehicleCabinDoorRow2DriverSideWindow `protobuf:"bytes,5,opt,name=Window,proto3" json:"Window,omitempty"`
	IsChildLockActive bool                                  `protobuf:"varint,6,opt,name=IsChildLockActive,proto3" json:"IsChildLockActive,omitempty"`
	Shade             *VehicleCabinDoorRow2DriverSideShade  `protobuf:"bytes,7,opt,name=Shade,proto3" json:"Shade,omitempty"`
}

func (x *VehicleCabinDoorRow2DriverSide) Reset() {
	*x = VehicleCabinDoorRow2DriverSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoorRow2DriverSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoorRow2DriverSide) ProtoMessage() {}

func (x *VehicleCabinDoorRow2DriverSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoorRow2DriverSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoorRow2DriverSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{121}
}

func (x *VehicleCabinDoorRow2DriverSide) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *VehicleCabinDoorRow2DriverSide) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleCabinDoorRow2DriverSide) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinDoorRow2DriverSide) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

func (x *VehicleCabinDoorRow2DriverSide) GetWindow() *VehicleCabinDoorRow2DriverSideWindow {
	if x != nil {
		return x.Window
	}
	return nil
}

func (x *VehicleCabinDoorRow2DriverSide) GetIsChildLockActive() bool {
	if x != nil {
		return x.IsChildLockActive
	}
	return false
}

func (x *VehicleCabinDoorRow2DriverSide) GetShade() *VehicleCabinDoorRow2DriverSideShade {
	if x != nil {
		return x.Shade
	}
	return nil
}

type VehicleCabinDoorRow2DriverSideWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen   bool   `protobuf:"varint,1,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position uint32 `protobuf:"varint,2,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch   string `protobuf:"bytes,3,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinDoorRow2DriverSideWindow) Reset() {
	*x = VehicleCabinDoorRow2DriverSideWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoorRow2DriverSideWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoorRow2DriverSideWindow) ProtoMessage() {}

func (x *VehicleCabinDoorRow2DriverSideWindow) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoorRow2DriverSideWindow.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoorRow2DriverSideWindow) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{122}
}

func (x *VehicleCabinDoorRow2DriverSideWindow) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleCabinDoorRow2DriverSideWindow) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinDoorRow2DriverSideWindow) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

type VehicleCabinDoorRow2DriverSideShade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen   bool   `protobuf:"varint,1,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position uint32 `protobuf:"varint,2,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch   string `protobuf:"bytes,3,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinDoorRow2DriverSideShade) Reset() {
	*x = VehicleCabinDoorRow2DriverSideShade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoorRow2DriverSideShade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoorRow2DriverSideShade) ProtoMessage() {}

func (x *VehicleCabinDoorRow2DriverSideShade) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoorRow2DriverSideShade.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoorRow2DriverSideShade) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{123}
}

func (x *VehicleCabinDoorRow2DriverSideShade) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleCabinDoorRow2DriverSideShade) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinDoorRow2DriverSideShade) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

type VehicleCabinDoorRow2PassengerSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLocked          bool                                     `protobuf:"varint,1,opt,name=IsLocked,proto3" json:"IsLocked,omitempty"`
	IsOpen            bool                                     `protobuf:"varint,2,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position          uint32                                   `protobuf:"varint,3,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch            string                                   `protobuf:"bytes,4,opt,name=Switch,proto3" json:"Switch,omitempty"`
	Window            *VehicleCabinDoorRow2PassengerSideWindow `protobuf:"bytes,5,opt,name=Window,proto3" json:"Window,omitempty"`
	IsChildLockActive bool                                     `protobuf:"varint,6,opt,name=IsChildLockActive,proto3" json:"IsChildLockActive,omitempty"`
	Shade             *VehicleCabinDoorRow2PassengerSideShade  `protobuf:"bytes,7,opt,name=Shade,proto3" json:"Shade,omitempty"`
}

func (x *VehicleCabinDoorRow2PassengerSide) Reset() {
	*x = VehicleCabinDoorRow2PassengerSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoorRow2PassengerSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoorRow2PassengerSide) ProtoMessage() {}

func (x *VehicleCabinDoorRow2PassengerSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoorRow2PassengerSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoorRow2PassengerSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{124}
}

func (x *VehicleCabinDoorRow2PassengerSide) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *VehicleCabinDoorRow2PassengerSide) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleCabinDoorRow2PassengerSide) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinDoorRow2PassengerSide) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

func (x *VehicleCabinDoorRow2PassengerSide) GetWindow() *VehicleCabinDoorRow2PassengerSideWindow {
	if x != nil {
		return x.Window
	}
	return nil
}

func (x *VehicleCabinDoorRow2PassengerSide) GetIsChildLockActive() bool {
	if x != nil {
		return x.IsChildLockActive
	}
	return false
}

func (x *VehicleCabinDoorRow2PassengerSide) GetShade() *VehicleCabinDoorRow2PassengerSideShade {
	if x != nil {
		return x.Shade
	}
	return nil
}

type VehicleCabinDoorRow2PassengerSideWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen   bool   `protobuf:"varint,1,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position uint32 `protobuf:"varint,2,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch   string `protobuf:"bytes,3,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinDoorRow2PassengerSideWindow) Reset() {
	*x = VehicleCabinDoorRow2PassengerSideWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoorRow2PassengerSideWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoorRow2PassengerSideWindow) ProtoMessage() {}

func (x *VehicleCabinDoorRow2PassengerSideWindow) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoorRow2PassengerSideWindow.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoorRow2PassengerSideWindow) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{125}
}

func (x *VehicleCabinDoorRow2PassengerSideWindow) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleCabinDoorRow2PassengerSideWindow) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinDoorRow2PassengerSideWindow) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

type VehicleCabinDoorRow2PassengerSideShade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpen   bool   `protobuf:"varint,1,opt,name=IsOpen,proto3" json:"IsOpen,omitempty"`
	Position uint32 `protobuf:"varint,2,opt,name=Position,proto3" json:"Position,omitempty"`
	Switch   string `protobuf:"bytes,3,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinDoorRow2PassengerSideShade) Reset() {
	*x = VehicleCabinDoorRow2PassengerSideShade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinDoorRow2PassengerSideShade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinDoorRow2PassengerSideShade) ProtoMessage() {}

func (x *VehicleCabinDoorRow2PassengerSideShade) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinDoorRow2PassengerSideShade.ProtoReflect.Descriptor instead.
func (*VehicleCabinDoorRow2PassengerSideShade) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{126}
}

func (x *VehicleCabinDoorRow2PassengerSideShade) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *VehicleCabinDoorRow2PassengerSideShade) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinDoorRow2PassengerSideShade) GetSwitch() string {
	if x != nil {
		return x.Switch
	}
	return ""
}

type VehicleCabinSeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row1 *VehicleCabinSeatRow1 `protobuf:"bytes,1,opt,name=Row1,proto3" json:"Row1,omitempty"`
	Row2 *VehicleCabinSeatRow2 `protobuf:"bytes,2,opt,name=Row2,proto3" json:"Row2,omitempty"`
}

func (x *VehicleCabinSeat) Reset() {
	*x = VehicleCabinSeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeat) ProtoMessage() {}

func (x *VehicleCabinSeat) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeat.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeat) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{127}
}

func (x *VehicleCabinSeat) GetRow1() *VehicleCabinSeatRow1 {
	if x != nil {
		return x.Row1
	}
	return nil
}

func (x *VehicleCabinSeat) GetRow2() *VehicleCabinSeatRow2 {
	if x != nil {
		return x.Row2
	}
	return nil
}

type VehicleCabinSeatRow1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverSide    *VehicleCabinSeatRow1DriverSide    `protobuf:"bytes,1,opt,name=DriverSide,proto3" json:"DriverSide,omitempty"`
	Middle        *VehicleCabinSeatRow1Middle        `protobuf:"bytes,2,opt,name=Middle,proto3" json:"Middle,omitempty"`
	PassengerSide *VehicleCabinSeatRow1PassengerSide `protobuf:"bytes,3,opt,name=PassengerSide,proto3" json:"PassengerSide,omitempty"`
}

func (x *VehicleCabinSeatRow1) Reset() {
	*x = VehicleCabinSeatRow1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1) ProtoMessage() {}

func (x *VehicleCabinSeatRow1) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{128}
}

func (x *VehicleCabinSeatRow1) GetDriverSide() *VehicleCabinSeatRow1DriverSide {
	if x != nil {
		return x.DriverSide
	}
	return nil
}

func (x *VehicleCabinSeatRow1) GetMiddle() *VehicleCabinSeatRow1Middle {
	if x != nil {
		return x.Middle
	}
	return nil
}

func (x *VehicleCabinSeatRow1) GetPassengerSide() *VehicleCabinSeatRow1PassengerSide {
	if x != nil {
		return x.PassengerSide
	}
	return nil
}

type VehicleCabinSeatRow1DriverSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOccupied     bool                                    `protobuf:"varint,1,opt,name=IsOccupied,proto3" json:"IsOccupied,omitempty"`
	Occupant       *VehicleCabinSeatRow1DriverSideOccupant `protobuf:"bytes,2,opt,name=Occupant,proto3" json:"Occupant,omitempty"`
	IsBelted       bool                                    `protobuf:"varint,3,opt,name=IsBelted,proto3" json:"IsBelted,omitempty"`
	SeatBeltHeight uint32                                  `protobuf:"varint,4,opt,name=SeatBeltHeight,proto3" json:"SeatBeltHeight,omitempty"`
	Heating        int32                                   `protobuf:"varint,5,opt,name=Heating,proto3" json:"Heating,omitempty"`
	HeatingCooling int32                                   `protobuf:"varint,6,opt,name=HeatingCooling,proto3" json:"HeatingCooling,omitempty"`
	Massage        uint32                                  `protobuf:"varint,7,opt,name=Massage,proto3" json:"Massage,omitempty"`
	Position       uint32                                  `protobuf:"varint,8,opt,name=Position,proto3" json:"Position,omitempty"`
	Height         uint32                                  `protobuf:"varint,9,opt,name=Height,proto3" json:"Height,omitempty"`
	Tilt           float32                                 `protobuf:"fixed32,10,opt,name=Tilt,proto3" json:"Tilt,omitempty"`
	Backrest       *VehicleCabinSeatRow1DriverSideBackrest `protobuf:"bytes,11,opt,name=Backrest,proto3" json:"Backrest,omitempty"`
	Seating        *VehicleCabinSeatRow1DriverSideSeating  `protobuf:"bytes,12,opt,name=Seating,proto3" json:"Seating,omitempty"`
	Headrest       *VehicleCabinSeatRow1DriverSideHeadrest `protobuf:"bytes,13,opt,name=Headrest,proto3" json:"Headrest,omitempty"`
	Airbag         *VehicleCabinSeatRow1DriverSideAirbag   `protobuf:"bytes,14,opt,name=Airbag,proto3" json:"Airbag,omitempty"`
	Switch         *VehicleCabinSeatRow1DriverSideSwitch   `protobuf:"bytes,15,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSide) Reset() {
	*x = VehicleCabinSeatRow1DriverSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSide) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{129}
}

func (x *VehicleCabinSeatRow1DriverSide) GetIsOccupied() bool {
	if x != nil {
		return x.IsOccupied
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSide) GetOccupant() *VehicleCabinSeatRow1DriverSideOccupant {
	if x != nil {
		return x.Occupant
	}
	return nil
}

func (x *VehicleCabinSeatRow1DriverSide) GetIsBelted() bool {
	if x != nil {
		return x.IsBelted
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSide) GetSeatBeltHeight() uint32 {
	if x != nil {
		return x.SeatBeltHeight
	}
	return 0
}

func (x *VehicleCabinSeatRow1DriverSide) GetHeating() int32 {
	if x != nil {
		return x.Heating
	}
	return 0
}

func (x *VehicleCabinSeatRow1DriverSide) GetHeatingCooling() int32 {
	if x != nil {
		return x.HeatingCooling
	}
	return 0
}

func (x *VehicleCabinSeatRow1DriverSide) GetMassage() uint32 {
	if x != nil {
		return x.Massage
	}
	return 0
}

func (x *VehicleCabinSeatRow1DriverSide) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinSeatRow1DriverSide) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VehicleCabinSeatRow1DriverSide) GetTilt() float32 {
	if x != nil {
		return x.Tilt
	}
	return 0
}

func (x *VehicleCabinSeatRow1DriverSide) GetBackrest() *VehicleCabinSeatRow1DriverSideBackrest {
	if x != nil {
		return x.Backrest
	}
	return nil
}

func (x *VehicleCabinSeatRow1DriverSide) GetSeating() *VehicleCabinSeatRow1DriverSideSeating {
	if x != nil {
		return x.Seating
	}
	return nil
}

func (x *VehicleCabinSeatRow1DriverSide) GetHeadrest() *VehicleCabinSeatRow1DriverSideHeadrest {
	if x != nil {
		return x.Headrest
	}
	return nil
}

func (x *VehicleCabinSeatRow1DriverSide) GetAirbag() *VehicleCabinSeatRow1DriverSideAirbag {
	if x != nil {
		return x.Airbag
	}
	return nil
}

func (x *VehicleCabinSeatRow1DriverSide) GetSwitch() *VehicleCabinSeatRow1DriverSideSwitch {
	if x != nil {
		return x.Switch
	}
	return nil
}

type VehicleCabinSeatRow1DriverSideOccupant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *VehicleCabinSeatRow1DriverSideOccupantIdentifier `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideOccupant) Reset() {
	*x = VehicleCabinSeatRow1DriverSideOccupant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideOccupant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideOccupant) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideOccupant) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideOccupant.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideOccupant) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{130}
}

func (x *VehicleCabinSeatRow1DriverSideOccupant) GetIdentifier() *VehicleCabinSeatRow1DriverSideOccupantIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type VehicleCabinSeatRow1DriverSideOccupantIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject string `protobuf:"bytes,1,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Issuer  string `protobuf:"bytes,2,opt,name=Issuer,proto3" json:"Issuer,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideOccupantIdentifier) Reset() {
	*x = VehicleCabinSeatRow1DriverSideOccupantIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideOccupantIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideOccupantIdentifier) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideOccupantIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideOccupantIdentifier.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideOccupantIdentifier) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{131}
}

func (x *VehicleCabinSeatRow1DriverSideOccupantIdentifier) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *VehicleCabinSeatRow1DriverSideOccupantIdentifier) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

type VehicleCabinSeatRow1DriverSideBackrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recline     float32                                            `protobuf:"fixed32,1,opt,name=Recline,proto3" json:"Recline,omitempty"`
	Lumbar      *VehicleCabinSeatRow1DriverSideBackrestLumbar      `protobuf:"bytes,2,opt,name=Lumbar,proto3" json:"Lumbar,omitempty"`
	SideBolster *VehicleCabinSeatRow1DriverSideBackrestSideBolster `protobuf:"bytes,3,opt,name=SideBolster,proto3" json:"SideBolster,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideBackrest) Reset() {
	*x = VehicleCabinSeatRow1DriverSideBackrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideBackrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideBackrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideBackrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideBackrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideBackrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{132}
}

func (x *VehicleCabinSeatRow1DriverSideBackrest) GetRecline() float32 {
	if x != nil {
		return x.Recline
	}
	return 0
}

func (x *VehicleCabinSeatRow1DriverSideBackrest) GetLumbar() *VehicleCabinSeatRow1DriverSideBackrestLumbar {
	if x != nil {
		return x.Lumbar
	}
	return nil
}

func (x *VehicleCabinSeatRow1DriverSideBackrest) GetSideBolster() *VehicleCabinSeatRow1DriverSideBackrestSideBolster {
	if x != nil {
		return x.SideBolster
	}
	return nil
}

type VehicleCabinSeatRow1DriverSideBackrestLumbar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Support float32 `protobuf:"fixed32,1,opt,name=Support,proto3" json:"Support,omitempty"`
	Height  uint32  `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideBackrestLumbar) Reset() {
	*x = VehicleCabinSeatRow1DriverSideBackrestLumbar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideBackrestLumbar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideBackrestLumbar) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideBackrestLumbar) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideBackrestLumbar.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideBackrestLumbar) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{133}
}

func (x *VehicleCabinSeatRow1DriverSideBackrestLumbar) GetSupport() float32 {
	if x != nil {
		return x.Support
	}
	return 0
}

func (x *VehicleCabinSeatRow1DriverSideBackrestLumbar) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type VehicleCabinSeatRow1DriverSideBackrestSideBolster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Support float32 `protobuf:"fixed32,1,opt,name=Support,proto3" json:"Support,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideBackrestSideBolster) Reset() {
	*x = VehicleCabinSeatRow1DriverSideBackrestSideBolster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideBackrestSideBolster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideBackrestSideBolster) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideBackrestSideBolster) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideBackrestSideBolster.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideBackrestSideBolster) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{134}
}

func (x *VehicleCabinSeatRow1DriverSideBackrestSideBolster) GetSupport() float32 {
	if x != nil {
		return x.Support
	}
	return 0
}

type VehicleCabinSeatRow1DriverSideSeating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint32 `protobuf:"varint,1,opt,name=Length,proto3" json:"Length,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideSeating) Reset() {
	*x = VehicleCabinSeatRow1DriverSideSeating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideSeating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideSeating) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideSeating) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideSeating.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideSeating) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{135}
}

func (x *VehicleCabinSeatRow1DriverSideSeating) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type VehicleCabinSeatRow1DriverSideHeadrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint32  `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Angle  float32 `protobuf:"fixed32,2,opt,name=Angle,proto3" json:"Angle,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideHeadrest) Reset() {
	*x = VehicleCabinSeatRow1DriverSideHeadrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideHeadrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideHeadrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideHeadrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideHeadrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideHeadrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{136}
}

func (x *VehicleCabinSeatRow1DriverSideHeadrest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VehicleCabinSeatRow1DriverSideHeadrest) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

type VehicleCabinSeatRow1DriverSideAirbag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDeployed bool `protobuf:"varint,1,opt,name=IsDeployed,proto3" json:"IsDeployed,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideAirbag) Reset() {
	*x = VehicleCabinSeatRow1DriverSideAirbag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideAirbag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideAirbag) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideAirbag) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideAirbag.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideAirbag) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{137}
}

func (x *VehicleCabinSeatRow1DriverSideAirbag) GetIsDeployed() bool {
	if x != nil {
		return x.IsDeployed
	}
	return false
}

type VehicleCabinSeatRow1DriverSideSwitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsWarmerEngaged       bool                                          `protobuf:"varint,1,opt,name=IsWarmerEngaged,proto3" json:"IsWarmerEngaged,omitempty"`
	IsCoolerEngaged       bool                                          `protobuf:"varint,2,opt,name=IsCoolerEngaged,proto3" json:"IsCoolerEngaged,omitempty"`
	IsForwardEngaged      bool                                          `protobuf:"varint,3,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged     bool                                          `protobuf:"varint,4,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
	IsUpEngaged           bool                                          `protobuf:"varint,5,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged         bool                                          `protobuf:"varint,6,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
	IsTiltForwardEngaged  bool                                          `protobuf:"varint,7,opt,name=IsTiltForwardEngaged,proto3" json:"IsTiltForwardEngaged,omitempty"`
	IsTiltBackwardEngaged bool                                          `protobuf:"varint,8,opt,name=IsTiltBackwardEngaged,proto3" json:"IsTiltBackwardEngaged,omitempty"`
	Backrest              *VehicleCabinSeatRow1DriverSideSwitchBackrest `protobuf:"bytes,9,opt,name=Backrest,proto3" json:"Backrest,omitempty"`
	Seating               *VehicleCabinSeatRow1DriverSideSwitchSeating  `protobuf:"bytes,10,opt,name=Seating,proto3" json:"Seating,omitempty"`
	Headrest              *VehicleCabinSeatRow1DriverSideSwitchHeadrest `protobuf:"bytes,11,opt,name=Headrest,proto3" json:"Headrest,omitempty"`
	Massage               *VehicleCabinSeatRow1DriverSideSwitchMassage  `protobuf:"bytes,12,opt,name=Massage,proto3" json:"Massage,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideSwitch) Reset() {
	*x = VehicleCabinSeatRow1DriverSideSwitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideSwitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideSwitch) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideSwitch) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideSwitch.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideSwitch) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{138}
}

func (x *VehicleCabinSeatRow1DriverSideSwitch) GetIsWarmerEngaged() bool {
	if x != nil {
		return x.IsWarmerEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitch) GetIsCoolerEngaged() bool {
	if x != nil {
		return x.IsCoolerEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitch) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitch) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitch) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitch) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitch) GetIsTiltForwardEngaged() bool {
	if x != nil {
		return x.IsTiltForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitch) GetIsTiltBackwardEngaged() bool {
	if x != nil {
		return x.IsTiltBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitch) GetBackrest() *VehicleCabinSeatRow1DriverSideSwitchBackrest {
	if x != nil {
		return x.Backrest
	}
	return nil
}

func (x *VehicleCabinSeatRow1DriverSideSwitch) GetSeating() *VehicleCabinSeatRow1DriverSideSwitchSeating {
	if x != nil {
		return x.Seating
	}
	return nil
}

func (x *VehicleCabinSeatRow1DriverSideSwitch) GetHeadrest() *VehicleCabinSeatRow1DriverSideSwitchHeadrest {
	if x != nil {
		return x.Headrest
	}
	return nil
}

func (x *VehicleCabinSeatRow1DriverSideSwitch) GetMassage() *VehicleCabinSeatRow1DriverSideSwitchMassage {
	if x != nil {
		return x.Massage
	}
	return nil
}

type VehicleCabinSeatRow1DriverSideSwitchBackrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReclineForwardEngaged  bool                                                     `protobuf:"varint,1,opt,name=IsReclineForwardEngaged,proto3" json:"IsReclineForwardEngaged,omitempty"`
	IsReclineBackwardEngaged bool                                                     `protobuf:"varint,2,opt,name=IsReclineBackwardEngaged,proto3" json:"IsReclineBackwardEngaged,omitempty"`
	Lumbar                   *VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar      `protobuf:"bytes,3,opt,name=Lumbar,proto3" json:"Lumbar,omitempty"`
	SideBolster              *VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster `protobuf:"bytes,4,opt,name=SideBolster,proto3" json:"SideBolster,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrest) Reset() {
	*x = VehicleCabinSeatRow1DriverSideSwitchBackrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideSwitchBackrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideSwitchBackrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideSwitchBackrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{139}
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrest) GetIsReclineForwardEngaged() bool {
	if x != nil {
		return x.IsReclineForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrest) GetIsReclineBackwardEngaged() bool {
	if x != nil {
		return x.IsReclineBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrest) GetLumbar() *VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar {
	if x != nil {
		return x.Lumbar
	}
	return nil
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrest) GetSideBolster() *VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster {
	if x != nil {
		return x.SideBolster
	}
	return nil
}

type VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMoreSupportEngaged bool `protobuf:"varint,1,opt,name=IsMoreSupportEngaged,proto3" json:"IsMoreSupportEngaged,omitempty"`
	IsLessSupportEngaged bool `protobuf:"varint,2,opt,name=IsLessSupportEngaged,proto3" json:"IsLessSupportEngaged,omitempty"`
	IsUpEngaged          bool `protobuf:"varint,3,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged        bool `protobuf:"varint,4,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar) Reset() {
	*x = VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{140}
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar) GetIsMoreSupportEngaged() bool {
	if x != nil {
		return x.IsMoreSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar) GetIsLessSupportEngaged() bool {
	if x != nil {
		return x.IsLessSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

type VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMoreSupportEngaged bool `protobuf:"varint,1,opt,name=IsMoreSupportEngaged,proto3" json:"IsMoreSupportEngaged,omitempty"`
	IsLessSupportEngaged bool `protobuf:"varint,2,opt,name=IsLessSupportEngaged,proto3" json:"IsLessSupportEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster) Reset() {
	*x = VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{141}
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster) GetIsMoreSupportEngaged() bool {
	if x != nil {
		return x.IsMoreSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster) GetIsLessSupportEngaged() bool {
	if x != nil {
		return x.IsLessSupportEngaged
	}
	return false
}

type VehicleCabinSeatRow1DriverSideSwitchSeating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsForwardEngaged  bool `protobuf:"varint,1,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged bool `protobuf:"varint,2,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideSwitchSeating) Reset() {
	*x = VehicleCabinSeatRow1DriverSideSwitchSeating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideSwitchSeating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideSwitchSeating) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideSwitchSeating) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideSwitchSeating.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideSwitchSeating) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{142}
}

func (x *VehicleCabinSeatRow1DriverSideSwitchSeating) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitchSeating) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

type VehicleCabinSeatRow1DriverSideSwitchHeadrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUpEngaged       bool `protobuf:"varint,1,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged     bool `protobuf:"varint,2,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
	IsForwardEngaged  bool `protobuf:"varint,3,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged bool `protobuf:"varint,4,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideSwitchHeadrest) Reset() {
	*x = VehicleCabinSeatRow1DriverSideSwitchHeadrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideSwitchHeadrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideSwitchHeadrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideSwitchHeadrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideSwitchHeadrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideSwitchHeadrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{143}
}

func (x *VehicleCabinSeatRow1DriverSideSwitchHeadrest) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitchHeadrest) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitchHeadrest) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitchHeadrest) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

type VehicleCabinSeatRow1DriverSideSwitchMassage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsIncreaseEngaged bool `protobuf:"varint,1,opt,name=IsIncreaseEngaged,proto3" json:"IsIncreaseEngaged,omitempty"`
	IsDecreaseEngaged bool `protobuf:"varint,2,opt,name=IsDecreaseEngaged,proto3" json:"IsDecreaseEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1DriverSideSwitchMassage) Reset() {
	*x = VehicleCabinSeatRow1DriverSideSwitchMassage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1DriverSideSwitchMassage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1DriverSideSwitchMassage) ProtoMessage() {}

func (x *VehicleCabinSeatRow1DriverSideSwitchMassage) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1DriverSideSwitchMassage.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1DriverSideSwitchMassage) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{144}
}

func (x *VehicleCabinSeatRow1DriverSideSwitchMassage) GetIsIncreaseEngaged() bool {
	if x != nil {
		return x.IsIncreaseEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1DriverSideSwitchMassage) GetIsDecreaseEngaged() bool {
	if x != nil {
		return x.IsDecreaseEngaged
	}
	return false
}

type VehicleCabinSeatRow1Middle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOccupied     bool                                `protobuf:"varint,1,opt,name=IsOccupied,proto3" json:"IsOccupied,omitempty"`
	Occupant       *VehicleCabinSeatRow1MiddleOccupant `protobuf:"bytes,2,opt,name=Occupant,proto3" json:"Occupant,omitempty"`
	IsBelted       bool                                `protobuf:"varint,3,opt,name=IsBelted,proto3" json:"IsBelted,omitempty"`
	SeatBeltHeight uint32                              `protobuf:"varint,4,opt,name=SeatBeltHeight,proto3" json:"SeatBeltHeight,omitempty"`
	Heating        int32                               `protobuf:"varint,5,opt,name=Heating,proto3" json:"Heating,omitempty"`
	HeatingCooling int32                               `protobuf:"varint,6,opt,name=HeatingCooling,proto3" json:"HeatingCooling,omitempty"`
	Massage        uint32                              `protobuf:"varint,7,opt,name=Massage,proto3" json:"Massage,omitempty"`
	Position       uint32                              `protobuf:"varint,8,opt,name=Position,proto3" json:"Position,omitempty"`
	Height         uint32                              `protobuf:"varint,9,opt,name=Height,proto3" json:"Height,omitempty"`
	Tilt           float32                             `protobuf:"fixed32,10,opt,name=Tilt,proto3" json:"Tilt,omitempty"`
	Backrest       *VehicleCabinSeatRow1MiddleBackrest `protobuf:"bytes,11,opt,name=Backrest,proto3" json:"Backrest,omitempty"`
	Seating        *VehicleCabinSeatRow1MiddleSeating  `protobuf:"bytes,12,opt,name=Seating,proto3" json:"Seating,omitempty"`
	Headrest       *VehicleCabinSeatRow1MiddleHeadrest `protobuf:"bytes,13,opt,name=Headrest,proto3" json:"Headrest,omitempty"`
	Airbag         *VehicleCabinSeatRow1MiddleAirbag   `protobuf:"bytes,14,opt,name=Airbag,proto3" json:"Airbag,omitempty"`
	Switch         *VehicleCabinSeatRow1MiddleSwitch   `protobuf:"bytes,15,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinSeatRow1Middle) Reset() {
	*x = VehicleCabinSeatRow1Middle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1Middle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1Middle) ProtoMessage() {}

func (x *VehicleCabinSeatRow1Middle) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1Middle.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1Middle) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{145}
}

func (x *VehicleCabinSeatRow1Middle) GetIsOccupied() bool {
	if x != nil {
		return x.IsOccupied
	}
	return false
}

func (x *VehicleCabinSeatRow1Middle) GetOccupant() *VehicleCabinSeatRow1MiddleOccupant {
	if x != nil {
		return x.Occupant
	}
	return nil
}

func (x *VehicleCabinSeatRow1Middle) GetIsBelted() bool {
	if x != nil {
		return x.IsBelted
	}
	return false
}

func (x *VehicleCabinSeatRow1Middle) GetSeatBeltHeight() uint32 {
	if x != nil {
		return x.SeatBeltHeight
	}
	return 0
}

func (x *VehicleCabinSeatRow1Middle) GetHeating() int32 {
	if x != nil {
		return x.Heating
	}
	return 0
}

func (x *VehicleCabinSeatRow1Middle) GetHeatingCooling() int32 {
	if x != nil {
		return x.HeatingCooling
	}
	return 0
}

func (x *VehicleCabinSeatRow1Middle) GetMassage() uint32 {
	if x != nil {
		return x.Massage
	}
	return 0
}

func (x *VehicleCabinSeatRow1Middle) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinSeatRow1Middle) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VehicleCabinSeatRow1Middle) GetTilt() float32 {
	if x != nil {
		return x.Tilt
	}
	return 0
}

func (x *VehicleCabinSeatRow1Middle) GetBackrest() *VehicleCabinSeatRow1MiddleBackrest {
	if x != nil {
		return x.Backrest
	}
	return nil
}

func (x *VehicleCabinSeatRow1Middle) GetSeating() *VehicleCabinSeatRow1MiddleSeating {
	if x != nil {
		return x.Seating
	}
	return nil
}

func (x *VehicleCabinSeatRow1Middle) GetHeadrest() *VehicleCabinSeatRow1MiddleHeadrest {
	if x != nil {
		return x.Headrest
	}
	return nil
}

func (x *VehicleCabinSeatRow1Middle) GetAirbag() *VehicleCabinSeatRow1MiddleAirbag {
	if x != nil {
		return x.Airbag
	}
	return nil
}

func (x *VehicleCabinSeatRow1Middle) GetSwitch() *VehicleCabinSeatRow1MiddleSwitch {
	if x != nil {
		return x.Switch
	}
	return nil
}

type VehicleCabinSeatRow1MiddleOccupant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *VehicleCabinSeatRow1MiddleOccupantIdentifier `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleOccupant) Reset() {
	*x = VehicleCabinSeatRow1MiddleOccupant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleOccupant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleOccupant) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleOccupant) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleOccupant.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleOccupant) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{146}
}

func (x *VehicleCabinSeatRow1MiddleOccupant) GetIdentifier() *VehicleCabinSeatRow1MiddleOccupantIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type VehicleCabinSeatRow1MiddleOccupantIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject string `protobuf:"bytes,1,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Issuer  string `protobuf:"bytes,2,opt,name=Issuer,proto3" json:"Issuer,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleOccupantIdentifier) Reset() {
	*x = VehicleCabinSeatRow1MiddleOccupantIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleOccupantIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleOccupantIdentifier) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleOccupantIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleOccupantIdentifier.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleOccupantIdentifier) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{147}
}

func (x *VehicleCabinSeatRow1MiddleOccupantIdentifier) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *VehicleCabinSeatRow1MiddleOccupantIdentifier) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

type VehicleCabinSeatRow1MiddleBackrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recline     float32                                        `protobuf:"fixed32,1,opt,name=Recline,proto3" json:"Recline,omitempty"`
	Lumbar      *VehicleCabinSeatRow1MiddleBackrestLumbar      `protobuf:"bytes,2,opt,name=Lumbar,proto3" json:"Lumbar,omitempty"`
	SideBolster *VehicleCabinSeatRow1MiddleBackrestSideBolster `protobuf:"bytes,3,opt,name=SideBolster,proto3" json:"SideBolster,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleBackrest) Reset() {
	*x = VehicleCabinSeatRow1MiddleBackrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleBackrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleBackrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleBackrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleBackrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleBackrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{148}
}

func (x *VehicleCabinSeatRow1MiddleBackrest) GetRecline() float32 {
	if x != nil {
		return x.Recline
	}
	return 0
}

func (x *VehicleCabinSeatRow1MiddleBackrest) GetLumbar() *VehicleCabinSeatRow1MiddleBackrestLumbar {
	if x != nil {
		return x.Lumbar
	}
	return nil
}

func (x *VehicleCabinSeatRow1MiddleBackrest) GetSideBolster() *VehicleCabinSeatRow1MiddleBackrestSideBolster {
	if x != nil {
		return x.SideBolster
	}
	return nil
}

type VehicleCabinSeatRow1MiddleBackrestLumbar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Support float32 `protobuf:"fixed32,1,opt,name=Support,proto3" json:"Support,omitempty"`
	Height  uint32  `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleBackrestLumbar) Reset() {
	*x = VehicleCabinSeatRow1MiddleBackrestLumbar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleBackrestLumbar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleBackrestLumbar) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleBackrestLumbar) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleBackrestLumbar.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleBackrestLumbar) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{149}
}

func (x *VehicleCabinSeatRow1MiddleBackrestLumbar) GetSupport() float32 {
	if x != nil {
		return x.Support
	}
	return 0
}

func (x *VehicleCabinSeatRow1MiddleBackrestLumbar) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type VehicleCabinSeatRow1MiddleBackrestSideBolster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Support float32 `protobuf:"fixed32,1,opt,name=Support,proto3" json:"Support,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleBackrestSideBolster) Reset() {
	*x = VehicleCabinSeatRow1MiddleBackrestSideBolster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleBackrestSideBolster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleBackrestSideBolster) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleBackrestSideBolster) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleBackrestSideBolster.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleBackrestSideBolster) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{150}
}

func (x *VehicleCabinSeatRow1MiddleBackrestSideBolster) GetSupport() float32 {
	if x != nil {
		return x.Support
	}
	return 0
}

type VehicleCabinSeatRow1MiddleSeating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint32 `protobuf:"varint,1,opt,name=Length,proto3" json:"Length,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleSeating) Reset() {
	*x = VehicleCabinSeatRow1MiddleSeating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleSeating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleSeating) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleSeating) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleSeating.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleSeating) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{151}
}

func (x *VehicleCabinSeatRow1MiddleSeating) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type VehicleCabinSeatRow1MiddleHeadrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint32  `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Angle  float32 `protobuf:"fixed32,2,opt,name=Angle,proto3" json:"Angle,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleHeadrest) Reset() {
	*x = VehicleCabinSeatRow1MiddleHeadrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleHeadrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleHeadrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleHeadrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleHeadrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleHeadrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{152}
}

func (x *VehicleCabinSeatRow1MiddleHeadrest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VehicleCabinSeatRow1MiddleHeadrest) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

type VehicleCabinSeatRow1MiddleAirbag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDeployed bool `protobuf:"varint,1,opt,name=IsDeployed,proto3" json:"IsDeployed,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleAirbag) Reset() {
	*x = VehicleCabinSeatRow1MiddleAirbag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleAirbag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleAirbag) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleAirbag) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleAirbag.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleAirbag) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{153}
}

func (x *VehicleCabinSeatRow1MiddleAirbag) GetIsDeployed() bool {
	if x != nil {
		return x.IsDeployed
	}
	return false
}

type VehicleCabinSeatRow1MiddleSwitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsWarmerEngaged       bool                                      `protobuf:"varint,1,opt,name=IsWarmerEngaged,proto3" json:"IsWarmerEngaged,omitempty"`
	IsCoolerEngaged       bool                                      `protobuf:"varint,2,opt,name=IsCoolerEngaged,proto3" json:"IsCoolerEngaged,omitempty"`
	IsForwardEngaged      bool                                      `protobuf:"varint,3,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged     bool                                      `protobuf:"varint,4,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
	IsUpEngaged           bool                                      `protobuf:"varint,5,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged         bool                                      `protobuf:"varint,6,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
	IsTiltForwardEngaged  bool                                      `protobuf:"varint,7,opt,name=IsTiltForwardEngaged,proto3" json:"IsTiltForwardEngaged,omitempty"`
	IsTiltBackwardEngaged bool                                      `protobuf:"varint,8,opt,name=IsTiltBackwardEngaged,proto3" json:"IsTiltBackwardEngaged,omitempty"`
	Backrest              *VehicleCabinSeatRow1MiddleSwitchBackrest `protobuf:"bytes,9,opt,name=Backrest,proto3" json:"Backrest,omitempty"`
	Seating               *VehicleCabinSeatRow1MiddleSwitchSeating  `protobuf:"bytes,10,opt,name=Seating,proto3" json:"Seating,omitempty"`
	Headrest              *VehicleCabinSeatRow1MiddleSwitchHeadrest `protobuf:"bytes,11,opt,name=Headrest,proto3" json:"Headrest,omitempty"`
	Massage               *VehicleCabinSeatRow1MiddleSwitchMassage  `protobuf:"bytes,12,opt,name=Massage,proto3" json:"Massage,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleSwitch) Reset() {
	*x = VehicleCabinSeatRow1MiddleSwitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleSwitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleSwitch) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleSwitch) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleSwitch.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleSwitch) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{154}
}

func (x *VehicleCabinSeatRow1MiddleSwitch) GetIsWarmerEngaged() bool {
	if x != nil {
		return x.IsWarmerEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitch) GetIsCoolerEngaged() bool {
	if x != nil {
		return x.IsCoolerEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitch) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitch) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitch) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitch) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitch) GetIsTiltForwardEngaged() bool {
	if x != nil {
		return x.IsTiltForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitch) GetIsTiltBackwardEngaged() bool {
	if x != nil {
		return x.IsTiltBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitch) GetBackrest() *VehicleCabinSeatRow1MiddleSwitchBackrest {
	if x != nil {
		return x.Backrest
	}
	return nil
}

func (x *VehicleCabinSeatRow1MiddleSwitch) GetSeating() *VehicleCabinSeatRow1MiddleSwitchSeating {
	if x != nil {
		return x.Seating
	}
	return nil
}

func (x *VehicleCabinSeatRow1MiddleSwitch) GetHeadrest() *VehicleCabinSeatRow1MiddleSwitchHeadrest {
	if x != nil {
		return x.Headrest
	}
	return nil
}

func (x *VehicleCabinSeatRow1MiddleSwitch) GetMassage() *VehicleCabinSeatRow1MiddleSwitchMassage {
	if x != nil {
		return x.Massage
	}
	return nil
}

type VehicleCabinSeatRow1MiddleSwitchBackrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReclineForwardEngaged  bool                                                 `protobuf:"varint,1,opt,name=IsReclineForwardEngaged,proto3" json:"IsReclineForwardEngaged,omitempty"`
	IsReclineBackwardEngaged bool                                                 `protobuf:"varint,2,opt,name=IsReclineBackwardEngaged,proto3" json:"IsReclineBackwardEngaged,omitempty"`
	Lumbar                   *VehicleCabinSeatRow1MiddleSwitchBackrestLumbar      `protobuf:"bytes,3,opt,name=Lumbar,proto3" json:"Lumbar,omitempty"`
	SideBolster              *VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster `protobuf:"bytes,4,opt,name=SideBolster,proto3" json:"SideBolster,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrest) Reset() {
	*x = VehicleCabinSeatRow1MiddleSwitchBackrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleSwitchBackrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleSwitchBackrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleSwitchBackrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{155}
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrest) GetIsReclineForwardEngaged() bool {
	if x != nil {
		return x.IsReclineForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrest) GetIsReclineBackwardEngaged() bool {
	if x != nil {
		return x.IsReclineBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrest) GetLumbar() *VehicleCabinSeatRow1MiddleSwitchBackrestLumbar {
	if x != nil {
		return x.Lumbar
	}
	return nil
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrest) GetSideBolster() *VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster {
	if x != nil {
		return x.SideBolster
	}
	return nil
}

type VehicleCabinSeatRow1MiddleSwitchBackrestLumbar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMoreSupportEngaged bool `protobuf:"varint,1,opt,name=IsMoreSupportEngaged,proto3" json:"IsMoreSupportEngaged,omitempty"`
	IsLessSupportEngaged bool `protobuf:"varint,2,opt,name=IsLessSupportEngaged,proto3" json:"IsLessSupportEngaged,omitempty"`
	IsUpEngaged          bool `protobuf:"varint,3,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged        bool `protobuf:"varint,4,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrestLumbar) Reset() {
	*x = VehicleCabinSeatRow1MiddleSwitchBackrestLumbar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrestLumbar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleSwitchBackrestLumbar) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrestLumbar) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleSwitchBackrestLumbar.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleSwitchBackrestLumbar) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{156}
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrestLumbar) GetIsMoreSupportEngaged() bool {
	if x != nil {
		return x.IsMoreSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrestLumbar) GetIsLessSupportEngaged() bool {
	if x != nil {
		return x.IsLessSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrestLumbar) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrestLumbar) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

type VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMoreSupportEngaged bool `protobuf:"varint,1,opt,name=IsMoreSupportEngaged,proto3" json:"IsMoreSupportEngaged,omitempty"`
	IsLessSupportEngaged bool `protobuf:"varint,2,opt,name=IsLessSupportEngaged,proto3" json:"IsLessSupportEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster) Reset() {
	*x = VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{157}
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster) GetIsMoreSupportEngaged() bool {
	if x != nil {
		return x.IsMoreSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster) GetIsLessSupportEngaged() bool {
	if x != nil {
		return x.IsLessSupportEngaged
	}
	return false
}

type VehicleCabinSeatRow1MiddleSwitchSeating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsForwardEngaged  bool `protobuf:"varint,1,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged bool `protobuf:"varint,2,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleSwitchSeating) Reset() {
	*x = VehicleCabinSeatRow1MiddleSwitchSeating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleSwitchSeating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleSwitchSeating) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleSwitchSeating) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleSwitchSeating.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleSwitchSeating) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{158}
}

func (x *VehicleCabinSeatRow1MiddleSwitchSeating) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitchSeating) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

type VehicleCabinSeatRow1MiddleSwitchHeadrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUpEngaged       bool `protobuf:"varint,1,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged     bool `protobuf:"varint,2,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
	IsForwardEngaged  bool `protobuf:"varint,3,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged bool `protobuf:"varint,4,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleSwitchHeadrest) Reset() {
	*x = VehicleCabinSeatRow1MiddleSwitchHeadrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleSwitchHeadrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleSwitchHeadrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleSwitchHeadrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleSwitchHeadrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleSwitchHeadrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{159}
}

func (x *VehicleCabinSeatRow1MiddleSwitchHeadrest) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitchHeadrest) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitchHeadrest) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitchHeadrest) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

type VehicleCabinSeatRow1MiddleSwitchMassage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsIncreaseEngaged bool `protobuf:"varint,1,opt,name=IsIncreaseEngaged,proto3" json:"IsIncreaseEngaged,omitempty"`
	IsDecreaseEngaged bool `protobuf:"varint,2,opt,name=IsDecreaseEngaged,proto3" json:"IsDecreaseEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1MiddleSwitchMassage) Reset() {
	*x = VehicleCabinSeatRow1MiddleSwitchMassage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1MiddleSwitchMassage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1MiddleSwitchMassage) ProtoMessage() {}

func (x *VehicleCabinSeatRow1MiddleSwitchMassage) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1MiddleSwitchMassage.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1MiddleSwitchMassage) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{160}
}

func (x *VehicleCabinSeatRow1MiddleSwitchMassage) GetIsIncreaseEngaged() bool {
	if x != nil {
		return x.IsIncreaseEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1MiddleSwitchMassage) GetIsDecreaseEngaged() bool {
	if x != nil {
		return x.IsDecreaseEngaged
	}
	return false
}

type VehicleCabinSeatRow1PassengerSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOccupied     bool                                       `protobuf:"varint,1,opt,name=IsOccupied,proto3" json:"IsOccupied,omitempty"`
	Occupant       *VehicleCabinSeatRow1PassengerSideOccupant `protobuf:"bytes,2,opt,name=Occupant,proto3" json:"Occupant,omitempty"`
	IsBelted       bool                                       `protobuf:"varint,3,opt,name=IsBelted,proto3" json:"IsBelted,omitempty"`
	SeatBeltHeight uint32                                     `protobuf:"varint,4,opt,name=SeatBeltHeight,proto3" json:"SeatBeltHeight,omitempty"`
	Heating        int32                                      `protobuf:"varint,5,opt,name=Heating,proto3" json:"Heating,omitempty"`
	HeatingCooling int32                                      `protobuf:"varint,6,opt,name=HeatingCooling,proto3" json:"HeatingCooling,omitempty"`
	Massage        uint32                                     `protobuf:"varint,7,opt,name=Massage,proto3" json:"Massage,omitempty"`
	Position       uint32                                     `protobuf:"varint,8,opt,name=Position,proto3" json:"Position,omitempty"`
	Height         uint32                                     `protobuf:"varint,9,opt,name=Height,proto3" json:"Height,omitempty"`
	Tilt           float32                                    `protobuf:"fixed32,10,opt,name=Tilt,proto3" json:"Tilt,omitempty"`
	Backrest       *VehicleCabinSeatRow1PassengerSideBackrest `protobuf:"bytes,11,opt,name=Backrest,proto3" json:"Backrest,omitempty"`
	Seating        *VehicleCabinSeatRow1PassengerSideSeating  `protobuf:"bytes,12,opt,name=Seating,proto3" json:"Seating,omitempty"`
	Headrest       *VehicleCabinSeatRow1PassengerSideHeadrest `protobuf:"bytes,13,opt,name=Headrest,proto3" json:"Headrest,omitempty"`
	Airbag         *VehicleCabinSeatRow1PassengerSideAirbag   `protobuf:"bytes,14,opt,name=Airbag,proto3" json:"Airbag,omitempty"`
	Switch         *VehicleCabinSeatRow1PassengerSideSwitch   `protobuf:"bytes,15,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSide) Reset() {
	*x = VehicleCabinSeatRow1PassengerSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSide) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{161}
}

func (x *VehicleCabinSeatRow1PassengerSide) GetIsOccupied() bool {
	if x != nil {
		return x.IsOccupied
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSide) GetOccupant() *VehicleCabinSeatRow1PassengerSideOccupant {
	if x != nil {
		return x.Occupant
	}
	return nil
}

func (x *VehicleCabinSeatRow1PassengerSide) GetIsBelted() bool {
	if x != nil {
		return x.IsBelted
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSide) GetSeatBeltHeight() uint32 {
	if x != nil {
		return x.SeatBeltHeight
	}
	return 0
}

func (x *VehicleCabinSeatRow1PassengerSide) GetHeating() int32 {
	if x != nil {
		return x.Heating
	}
	return 0
}

func (x *VehicleCabinSeatRow1PassengerSide) GetHeatingCooling() int32 {
	if x != nil {
		return x.HeatingCooling
	}
	return 0
}

func (x *VehicleCabinSeatRow1PassengerSide) GetMassage() uint32 {
	if x != nil {
		return x.Massage
	}
	return 0
}

func (x *VehicleCabinSeatRow1PassengerSide) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinSeatRow1PassengerSide) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VehicleCabinSeatRow1PassengerSide) GetTilt() float32 {
	if x != nil {
		return x.Tilt
	}
	return 0
}

func (x *VehicleCabinSeatRow1PassengerSide) GetBackrest() *VehicleCabinSeatRow1PassengerSideBackrest {
	if x != nil {
		return x.Backrest
	}
	return nil
}

func (x *VehicleCabinSeatRow1PassengerSide) GetSeating() *VehicleCabinSeatRow1PassengerSideSeating {
	if x != nil {
		return x.Seating
	}
	return nil
}

func (x *VehicleCabinSeatRow1PassengerSide) GetHeadrest() *VehicleCabinSeatRow1PassengerSideHeadrest {
	if x != nil {
		return x.Headrest
	}
	return nil
}

func (x *VehicleCabinSeatRow1PassengerSide) GetAirbag() *VehicleCabinSeatRow1PassengerSideAirbag {
	if x != nil {
		return x.Airbag
	}
	return nil
}

func (x *VehicleCabinSeatRow1PassengerSide) GetSwitch() *VehicleCabinSeatRow1PassengerSideSwitch {
	if x != nil {
		return x.Switch
	}
	return nil
}

type VehicleCabinSeatRow1PassengerSideOccupant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *VehicleCabinSeatRow1PassengerSideOccupantIdentifier `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideOccupant) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideOccupant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideOccupant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideOccupant) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideOccupant) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideOccupant.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideOccupant) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{162}
}

func (x *VehicleCabinSeatRow1PassengerSideOccupant) GetIdentifier() *VehicleCabinSeatRow1PassengerSideOccupantIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type VehicleCabinSeatRow1PassengerSideOccupantIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject string `protobuf:"bytes,1,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Issuer  string `protobuf:"bytes,2,opt,name=Issuer,proto3" json:"Issuer,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideOccupantIdentifier) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideOccupantIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideOccupantIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideOccupantIdentifier) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideOccupantIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideOccupantIdentifier.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideOccupantIdentifier) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{163}
}

func (x *VehicleCabinSeatRow1PassengerSideOccupantIdentifier) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *VehicleCabinSeatRow1PassengerSideOccupantIdentifier) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

type VehicleCabinSeatRow1PassengerSideBackrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recline     float32                                               `protobuf:"fixed32,1,opt,name=Recline,proto3" json:"Recline,omitempty"`
	Lumbar      *VehicleCabinSeatRow1PassengerSideBackrestLumbar      `protobuf:"bytes,2,opt,name=Lumbar,proto3" json:"Lumbar,omitempty"`
	SideBolster *VehicleCabinSeatRow1PassengerSideBackrestSideBolster `protobuf:"bytes,3,opt,name=SideBolster,proto3" json:"SideBolster,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideBackrest) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideBackrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideBackrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideBackrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideBackrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideBackrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideBackrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{164}
}

func (x *VehicleCabinSeatRow1PassengerSideBackrest) GetRecline() float32 {
	if x != nil {
		return x.Recline
	}
	return 0
}

func (x *VehicleCabinSeatRow1PassengerSideBackrest) GetLumbar() *VehicleCabinSeatRow1PassengerSideBackrestLumbar {
	if x != nil {
		return x.Lumbar
	}
	return nil
}

func (x *VehicleCabinSeatRow1PassengerSideBackrest) GetSideBolster() *VehicleCabinSeatRow1PassengerSideBackrestSideBolster {
	if x != nil {
		return x.SideBolster
	}
	return nil
}

type VehicleCabinSeatRow1PassengerSideBackrestLumbar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Support float32 `protobuf:"fixed32,1,opt,name=Support,proto3" json:"Support,omitempty"`
	Height  uint32  `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideBackrestLumbar) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideBackrestLumbar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideBackrestLumbar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideBackrestLumbar) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideBackrestLumbar) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideBackrestLumbar.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideBackrestLumbar) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{165}
}

func (x *VehicleCabinSeatRow1PassengerSideBackrestLumbar) GetSupport() float32 {
	if x != nil {
		return x.Support
	}
	return 0
}

func (x *VehicleCabinSeatRow1PassengerSideBackrestLumbar) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type VehicleCabinSeatRow1PassengerSideBackrestSideBolster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Support float32 `protobuf:"fixed32,1,opt,name=Support,proto3" json:"Support,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideBackrestSideBolster) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideBackrestSideBolster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideBackrestSideBolster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideBackrestSideBolster) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideBackrestSideBolster) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideBackrestSideBolster.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideBackrestSideBolster) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{166}
}

func (x *VehicleCabinSeatRow1PassengerSideBackrestSideBolster) GetSupport() float32 {
	if x != nil {
		return x.Support
	}
	return 0
}

type VehicleCabinSeatRow1PassengerSideSeating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint32 `protobuf:"varint,1,opt,name=Length,proto3" json:"Length,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideSeating) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideSeating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideSeating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideSeating) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideSeating) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideSeating.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideSeating) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{167}
}

func (x *VehicleCabinSeatRow1PassengerSideSeating) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type VehicleCabinSeatRow1PassengerSideHeadrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint32  `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Angle  float32 `protobuf:"fixed32,2,opt,name=Angle,proto3" json:"Angle,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideHeadrest) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideHeadrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideHeadrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideHeadrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideHeadrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideHeadrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideHeadrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{168}
}

func (x *VehicleCabinSeatRow1PassengerSideHeadrest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VehicleCabinSeatRow1PassengerSideHeadrest) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

type VehicleCabinSeatRow1PassengerSideAirbag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDeployed bool `protobuf:"varint,1,opt,name=IsDeployed,proto3" json:"IsDeployed,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideAirbag) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideAirbag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideAirbag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideAirbag) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideAirbag) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideAirbag.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideAirbag) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{169}
}

func (x *VehicleCabinSeatRow1PassengerSideAirbag) GetIsDeployed() bool {
	if x != nil {
		return x.IsDeployed
	}
	return false
}

type VehicleCabinSeatRow1PassengerSideSwitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsWarmerEngaged       bool                                             `protobuf:"varint,1,opt,name=IsWarmerEngaged,proto3" json:"IsWarmerEngaged,omitempty"`
	IsCoolerEngaged       bool                                             `protobuf:"varint,2,opt,name=IsCoolerEngaged,proto3" json:"IsCoolerEngaged,omitempty"`
	IsForwardEngaged      bool                                             `protobuf:"varint,3,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged     bool                                             `protobuf:"varint,4,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
	IsUpEngaged           bool                                             `protobuf:"varint,5,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged         bool                                             `protobuf:"varint,6,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
	IsTiltForwardEngaged  bool                                             `protobuf:"varint,7,opt,name=IsTiltForwardEngaged,proto3" json:"IsTiltForwardEngaged,omitempty"`
	IsTiltBackwardEngaged bool                                             `protobuf:"varint,8,opt,name=IsTiltBackwardEngaged,proto3" json:"IsTiltBackwardEngaged,omitempty"`
	Backrest              *VehicleCabinSeatRow1PassengerSideSwitchBackrest `protobuf:"bytes,9,opt,name=Backrest,proto3" json:"Backrest,omitempty"`
	Seating               *VehicleCabinSeatRow1PassengerSideSwitchSeating  `protobuf:"bytes,10,opt,name=Seating,proto3" json:"Seating,omitempty"`
	Headrest              *VehicleCabinSeatRow1PassengerSideSwitchHeadrest `protobuf:"bytes,11,opt,name=Headrest,proto3" json:"Headrest,omitempty"`
	Massage               *VehicleCabinSeatRow1PassengerSideSwitchMassage  `protobuf:"bytes,12,opt,name=Massage,proto3" json:"Massage,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideSwitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideSwitch) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideSwitch.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideSwitch) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{170}
}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) GetIsWarmerEngaged() bool {
	if x != nil {
		return x.IsWarmerEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) GetIsCoolerEngaged() bool {
	if x != nil {
		return x.IsCoolerEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) GetIsTiltForwardEngaged() bool {
	if x != nil {
		return x.IsTiltForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) GetIsTiltBackwardEngaged() bool {
	if x != nil {
		return x.IsTiltBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) GetBackrest() *VehicleCabinSeatRow1PassengerSideSwitchBackrest {
	if x != nil {
		return x.Backrest
	}
	return nil
}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) GetSeating() *VehicleCabinSeatRow1PassengerSideSwitchSeating {
	if x != nil {
		return x.Seating
	}
	return nil
}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) GetHeadrest() *VehicleCabinSeatRow1PassengerSideSwitchHeadrest {
	if x != nil {
		return x.Headrest
	}
	return nil
}

func (x *VehicleCabinSeatRow1PassengerSideSwitch) GetMassage() *VehicleCabinSeatRow1PassengerSideSwitchMassage {
	if x != nil {
		return x.Massage
	}
	return nil
}

type VehicleCabinSeatRow1PassengerSideSwitchBackrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReclineForwardEngaged  bool                                                        `protobuf:"varint,1,opt,name=IsReclineForwardEngaged,proto3" json:"IsReclineForwardEngaged,omitempty"`
	IsReclineBackwardEngaged bool                                                        `protobuf:"varint,2,opt,name=IsReclineBackwardEngaged,proto3" json:"IsReclineBackwardEngaged,omitempty"`
	Lumbar                   *VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar      `protobuf:"bytes,3,opt,name=Lumbar,proto3" json:"Lumbar,omitempty"`
	SideBolster              *VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster `protobuf:"bytes,4,opt,name=SideBolster,proto3" json:"SideBolster,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrest) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideSwitchBackrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideSwitchBackrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideSwitchBackrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideSwitchBackrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{171}
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrest) GetIsReclineForwardEngaged() bool {
	if x != nil {
		return x.IsReclineForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrest) GetIsReclineBackwardEngaged() bool {
	if x != nil {
		return x.IsReclineBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrest) GetLumbar() *VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar {
	if x != nil {
		return x.Lumbar
	}
	return nil
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrest) GetSideBolster() *VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster {
	if x != nil {
		return x.SideBolster
	}
	return nil
}

type VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMoreSupportEngaged bool `protobuf:"varint,1,opt,name=IsMoreSupportEngaged,proto3" json:"IsMoreSupportEngaged,omitempty"`
	IsLessSupportEngaged bool `protobuf:"varint,2,opt,name=IsLessSupportEngaged,proto3" json:"IsLessSupportEngaged,omitempty"`
	IsUpEngaged          bool `protobuf:"varint,3,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged        bool `protobuf:"varint,4,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{172}
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar) GetIsMoreSupportEngaged() bool {
	if x != nil {
		return x.IsMoreSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar) GetIsLessSupportEngaged() bool {
	if x != nil {
		return x.IsLessSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

type VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMoreSupportEngaged bool `protobuf:"varint,1,opt,name=IsMoreSupportEngaged,proto3" json:"IsMoreSupportEngaged,omitempty"`
	IsLessSupportEngaged bool `protobuf:"varint,2,opt,name=IsLessSupportEngaged,proto3" json:"IsLessSupportEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{173}
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster) GetIsMoreSupportEngaged() bool {
	if x != nil {
		return x.IsMoreSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster) GetIsLessSupportEngaged() bool {
	if x != nil {
		return x.IsLessSupportEngaged
	}
	return false
}

type VehicleCabinSeatRow1PassengerSideSwitchSeating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsForwardEngaged  bool `protobuf:"varint,1,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged bool `protobuf:"varint,2,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchSeating) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideSwitchSeating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchSeating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideSwitchSeating) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideSwitchSeating) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideSwitchSeating.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideSwitchSeating) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{174}
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchSeating) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchSeating) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

type VehicleCabinSeatRow1PassengerSideSwitchHeadrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUpEngaged       bool `protobuf:"varint,1,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged     bool `protobuf:"varint,2,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
	IsForwardEngaged  bool `protobuf:"varint,3,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged bool `protobuf:"varint,4,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchHeadrest) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideSwitchHeadrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchHeadrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideSwitchHeadrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideSwitchHeadrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideSwitchHeadrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideSwitchHeadrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{175}
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchHeadrest) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchHeadrest) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchHeadrest) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchHeadrest) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

type VehicleCabinSeatRow1PassengerSideSwitchMassage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsIncreaseEngaged bool `protobuf:"varint,1,opt,name=IsIncreaseEngaged,proto3" json:"IsIncreaseEngaged,omitempty"`
	IsDecreaseEngaged bool `protobuf:"varint,2,opt,name=IsDecreaseEngaged,proto3" json:"IsDecreaseEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchMassage) Reset() {
	*x = VehicleCabinSeatRow1PassengerSideSwitchMassage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchMassage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow1PassengerSideSwitchMassage) ProtoMessage() {}

func (x *VehicleCabinSeatRow1PassengerSideSwitchMassage) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow1PassengerSideSwitchMassage.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow1PassengerSideSwitchMassage) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{176}
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchMassage) GetIsIncreaseEngaged() bool {
	if x != nil {
		return x.IsIncreaseEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow1PassengerSideSwitchMassage) GetIsDecreaseEngaged() bool {
	if x != nil {
		return x.IsDecreaseEngaged
	}
	return false
}

type VehicleCabinSeatRow2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverSide    *VehicleCabinSeatRow2DriverSide    `protobuf:"bytes,1,opt,name=DriverSide,proto3" json:"DriverSide,omitempty"`
	Middle        *VehicleCabinSeatRow2Middle        `protobuf:"bytes,2,opt,name=Middle,proto3" json:"Middle,omitempty"`
	PassengerSide *VehicleCabinSeatRow2PassengerSide `protobuf:"bytes,3,opt,name=PassengerSide,proto3" json:"PassengerSide,omitempty"`
}

func (x *VehicleCabinSeatRow2) Reset() {
	*x = VehicleCabinSeatRow2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2) ProtoMessage() {}

func (x *VehicleCabinSeatRow2) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{177}
}

func (x *VehicleCabinSeatRow2) GetDriverSide() *VehicleCabinSeatRow2DriverSide {
	if x != nil {
		return x.DriverSide
	}
	return nil
}

func (x *VehicleCabinSeatRow2) GetMiddle() *VehicleCabinSeatRow2Middle {
	if x != nil {
		return x.Middle
	}
	return nil
}

func (x *VehicleCabinSeatRow2) GetPassengerSide() *VehicleCabinSeatRow2PassengerSide {
	if x != nil {
		return x.PassengerSide
	}
	return nil
}

type VehicleCabinSeatRow2DriverSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOccupied     bool                                    `protobuf:"varint,1,opt,name=IsOccupied,proto3" json:"IsOccupied,omitempty"`
	Occupant       *VehicleCabinSeatRow2DriverSideOccupant `protobuf:"bytes,2,opt,name=Occupant,proto3" json:"Occupant,omitempty"`
	IsBelted       bool                                    `protobuf:"varint,3,opt,name=IsBelted,proto3" json:"IsBelted,omitempty"`
	SeatBeltHeight uint32                                  `protobuf:"varint,4,opt,name=SeatBeltHeight,proto3" json:"SeatBeltHeight,omitempty"`
	Heating        int32                                   `protobuf:"varint,5,opt,name=Heating,proto3" json:"Heating,omitempty"`
	HeatingCooling int32                                   `protobuf:"varint,6,opt,name=HeatingCooling,proto3" json:"HeatingCooling,omitempty"`
	Massage        uint32                                  `protobuf:"varint,7,opt,name=Massage,proto3" json:"Massage,omitempty"`
	Position       uint32                                  `protobuf:"varint,8,opt,name=Position,proto3" json:"Position,omitempty"`
	Height         uint32                                  `protobuf:"varint,9,opt,name=Height,proto3" json:"Height,omitempty"`
	Tilt           float32                                 `protobuf:"fixed32,10,opt,name=Tilt,proto3" json:"Tilt,omitempty"`
	Backrest       *VehicleCabinSeatRow2DriverSideBackrest `protobuf:"bytes,11,opt,name=Backrest,proto3" json:"Backrest,omitempty"`
	Seating        *VehicleCabinSeatRow2DriverSideSeating  `protobuf:"bytes,12,opt,name=Seating,proto3" json:"Seating,omitempty"`
	Headrest       *VehicleCabinSeatRow2DriverSideHeadrest `protobuf:"bytes,13,opt,name=Headrest,proto3" json:"Headrest,omitempty"`
	Airbag         *VehicleCabinSeatRow2DriverSideAirbag   `protobuf:"bytes,14,opt,name=Airbag,proto3" json:"Airbag,omitempty"`
	Switch         *VehicleCabinSeatRow2DriverSideSwitch   `protobuf:"bytes,15,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSide) Reset() {
	*x = VehicleCabinSeatRow2DriverSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSide) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{178}
}

func (x *VehicleCabinSeatRow2DriverSide) GetIsOccupied() bool {
	if x != nil {
		return x.IsOccupied
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSide) GetOccupant() *VehicleCabinSeatRow2DriverSideOccupant {
	if x != nil {
		return x.Occupant
	}
	return nil
}

func (x *VehicleCabinSeatRow2DriverSide) GetIsBelted() bool {
	if x != nil {
		return x.IsBelted
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSide) GetSeatBeltHeight() uint32 {
	if x != nil {
		return x.SeatBeltHeight
	}
	return 0
}

func (x *VehicleCabinSeatRow2DriverSide) GetHeating() int32 {
	if x != nil {
		return x.Heating
	}
	return 0
}

func (x *VehicleCabinSeatRow2DriverSide) GetHeatingCooling() int32 {
	if x != nil {
		return x.HeatingCooling
	}
	return 0
}

func (x *VehicleCabinSeatRow2DriverSide) GetMassage() uint32 {
	if x != nil {
		return x.Massage
	}
	return 0
}

func (x *VehicleCabinSeatRow2DriverSide) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinSeatRow2DriverSide) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VehicleCabinSeatRow2DriverSide) GetTilt() float32 {
	if x != nil {
		return x.Tilt
	}
	return 0
}

func (x *VehicleCabinSeatRow2DriverSide) GetBackrest() *VehicleCabinSeatRow2DriverSideBackrest {
	if x != nil {
		return x.Backrest
	}
	return nil
}

func (x *VehicleCabinSeatRow2DriverSide) GetSeating() *VehicleCabinSeatRow2DriverSideSeating {
	if x != nil {
		return x.Seating
	}
	return nil
}

func (x *VehicleCabinSeatRow2DriverSide) GetHeadrest() *VehicleCabinSeatRow2DriverSideHeadrest {
	if x != nil {
		return x.Headrest
	}
	return nil
}

func (x *VehicleCabinSeatRow2DriverSide) GetAirbag() *VehicleCabinSeatRow2DriverSideAirbag {
	if x != nil {
		return x.Airbag
	}
	return nil
}

func (x *VehicleCabinSeatRow2DriverSide) GetSwitch() *VehicleCabinSeatRow2DriverSideSwitch {
	if x != nil {
		return x.Switch
	}
	return nil
}

type VehicleCabinSeatRow2DriverSideOccupant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *VehicleCabinSeatRow2DriverSideOccupantIdentifier `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideOccupant) Reset() {
	*x = VehicleCabinSeatRow2DriverSideOccupant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideOccupant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideOccupant) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideOccupant) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideOccupant.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideOccupant) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{179}
}

func (x *VehicleCabinSeatRow2DriverSideOccupant) GetIdentifier() *VehicleCabinSeatRow2DriverSideOccupantIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type VehicleCabinSeatRow2DriverSideOccupantIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject string `protobuf:"bytes,1,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Issuer  string `protobuf:"bytes,2,opt,name=Issuer,proto3" json:"Issuer,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideOccupantIdentifier) Reset() {
	*x = VehicleCabinSeatRow2DriverSideOccupantIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideOccupantIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideOccupantIdentifier) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideOccupantIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideOccupantIdentifier.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideOccupantIdentifier) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{180}
}

func (x *VehicleCabinSeatRow2DriverSideOccupantIdentifier) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *VehicleCabinSeatRow2DriverSideOccupantIdentifier) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

type VehicleCabinSeatRow2DriverSideBackrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recline     float32                                            `protobuf:"fixed32,1,opt,name=Recline,proto3" json:"Recline,omitempty"`
	Lumbar      *VehicleCabinSeatRow2DriverSideBackrestLumbar      `protobuf:"bytes,2,opt,name=Lumbar,proto3" json:"Lumbar,omitempty"`
	SideBolster *VehicleCabinSeatRow2DriverSideBackrestSideBolster `protobuf:"bytes,3,opt,name=SideBolster,proto3" json:"SideBolster,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideBackrest) Reset() {
	*x = VehicleCabinSeatRow2DriverSideBackrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideBackrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideBackrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideBackrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideBackrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideBackrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{181}
}

func (x *VehicleCabinSeatRow2DriverSideBackrest) GetRecline() float32 {
	if x != nil {
		return x.Recline
	}
	return 0
}

func (x *VehicleCabinSeatRow2DriverSideBackrest) GetLumbar() *VehicleCabinSeatRow2DriverSideBackrestLumbar {
	if x != nil {
		return x.Lumbar
	}
	return nil
}

func (x *VehicleCabinSeatRow2DriverSideBackrest) GetSideBolster() *VehicleCabinSeatRow2DriverSideBackrestSideBolster {
	if x != nil {
		return x.SideBolster
	}
	return nil
}

type VehicleCabinSeatRow2DriverSideBackrestLumbar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Support float32 `protobuf:"fixed32,1,opt,name=Support,proto3" json:"Support,omitempty"`
	Height  uint32  `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideBackrestLumbar) Reset() {
	*x = VehicleCabinSeatRow2DriverSideBackrestLumbar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideBackrestLumbar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideBackrestLumbar) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideBackrestLumbar) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideBackrestLumbar.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideBackrestLumbar) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{182}
}

func (x *VehicleCabinSeatRow2DriverSideBackrestLumbar) GetSupport() float32 {
	if x != nil {
		return x.Support
	}
	return 0
}

func (x *VehicleCabinSeatRow2DriverSideBackrestLumbar) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type VehicleCabinSeatRow2DriverSideBackrestSideBolster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Support float32 `protobuf:"fixed32,1,opt,name=Support,proto3" json:"Support,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideBackrestSideBolster) Reset() {
	*x = VehicleCabinSeatRow2DriverSideBackrestSideBolster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideBackrestSideBolster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideBackrestSideBolster) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideBackrestSideBolster) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideBackrestSideBolster.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideBackrestSideBolster) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{183}
}

func (x *VehicleCabinSeatRow2DriverSideBackrestSideBolster) GetSupport() float32 {
	if x != nil {
		return x.Support
	}
	return 0
}

type VehicleCabinSeatRow2DriverSideSeating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint32 `protobuf:"varint,1,opt,name=Length,proto3" json:"Length,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideSeating) Reset() {
	*x = VehicleCabinSeatRow2DriverSideSeating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideSeating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideSeating) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideSeating) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideSeating.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideSeating) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{184}
}

func (x *VehicleCabinSeatRow2DriverSideSeating) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type VehicleCabinSeatRow2DriverSideHeadrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint32  `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Angle  float32 `protobuf:"fixed32,2,opt,name=Angle,proto3" json:"Angle,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideHeadrest) Reset() {
	*x = VehicleCabinSeatRow2DriverSideHeadrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideHeadrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideHeadrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideHeadrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideHeadrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideHeadrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{185}
}

func (x *VehicleCabinSeatRow2DriverSideHeadrest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VehicleCabinSeatRow2DriverSideHeadrest) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

type VehicleCabinSeatRow2DriverSideAirbag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDeployed bool `protobuf:"varint,1,opt,name=IsDeployed,proto3" json:"IsDeployed,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideAirbag) Reset() {
	*x = VehicleCabinSeatRow2DriverSideAirbag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideAirbag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideAirbag) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideAirbag) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideAirbag.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideAirbag) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{186}
}

func (x *VehicleCabinSeatRow2DriverSideAirbag) GetIsDeployed() bool {
	if x != nil {
		return x.IsDeployed
	}
	return false
}

type VehicleCabinSeatRow2DriverSideSwitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsWarmerEngaged       bool                                          `protobuf:"varint,1,opt,name=IsWarmerEngaged,proto3" json:"IsWarmerEngaged,omitempty"`
	IsCoolerEngaged       bool                                          `protobuf:"varint,2,opt,name=IsCoolerEngaged,proto3" json:"IsCoolerEngaged,omitempty"`
	IsForwardEngaged      bool                                          `protobuf:"varint,3,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged     bool                                          `protobuf:"varint,4,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
	IsUpEngaged           bool                                          `protobuf:"varint,5,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged         bool                                          `protobuf:"varint,6,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
	IsTiltForwardEngaged  bool                                          `protobuf:"varint,7,opt,name=IsTiltForwardEngaged,proto3" json:"IsTiltForwardEngaged,omitempty"`
	IsTiltBackwardEngaged bool                                          `protobuf:"varint,8,opt,name=IsTiltBackwardEngaged,proto3" json:"IsTiltBackwardEngaged,omitempty"`
	Backrest              *VehicleCabinSeatRow2DriverSideSwitchBackrest `protobuf:"bytes,9,opt,name=Backrest,proto3" json:"Backrest,omitempty"`
	Seating               *VehicleCabinSeatRow2DriverSideSwitchSeating  `protobuf:"bytes,10,opt,name=Seating,proto3" json:"Seating,omitempty"`
	Headrest              *VehicleCabinSeatRow2DriverSideSwitchHeadrest `protobuf:"bytes,11,opt,name=Headrest,proto3" json:"Headrest,omitempty"`
	Massage               *VehicleCabinSeatRow2DriverSideSwitchMassage  `protobuf:"bytes,12,opt,name=Massage,proto3" json:"Massage,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideSwitch) Reset() {
	*x = VehicleCabinSeatRow2DriverSideSwitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideSwitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideSwitch) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideSwitch) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideSwitch.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideSwitch) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{187}
}

func (x *VehicleCabinSeatRow2DriverSideSwitch) GetIsWarmerEngaged() bool {
	if x != nil {
		return x.IsWarmerEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitch) GetIsCoolerEngaged() bool {
	if x != nil {
		return x.IsCoolerEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitch) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitch) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitch) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitch) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitch) GetIsTiltForwardEngaged() bool {
	if x != nil {
		return x.IsTiltForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitch) GetIsTiltBackwardEngaged() bool {
	if x != nil {
		return x.IsTiltBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitch) GetBackrest() *VehicleCabinSeatRow2DriverSideSwitchBackrest {
	if x != nil {
		return x.Backrest
	}
	return nil
}

func (x *VehicleCabinSeatRow2DriverSideSwitch) GetSeating() *VehicleCabinSeatRow2DriverSideSwitchSeating {
	if x != nil {
		return x.Seating
	}
	return nil
}

func (x *VehicleCabinSeatRow2DriverSideSwitch) GetHeadrest() *VehicleCabinSeatRow2DriverSideSwitchHeadrest {
	if x != nil {
		return x.Headrest
	}
	return nil
}

func (x *VehicleCabinSeatRow2DriverSideSwitch) GetMassage() *VehicleCabinSeatRow2DriverSideSwitchMassage {
	if x != nil {
		return x.Massage
	}
	return nil
}

type VehicleCabinSeatRow2DriverSideSwitchBackrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReclineForwardEngaged  bool                                                     `protobuf:"varint,1,opt,name=IsReclineForwardEngaged,proto3" json:"IsReclineForwardEngaged,omitempty"`
	IsReclineBackwardEngaged bool                                                     `protobuf:"varint,2,opt,name=IsReclineBackwardEngaged,proto3" json:"IsReclineBackwardEngaged,omitempty"`
	Lumbar                   *VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar      `protobuf:"bytes,3,opt,name=Lumbar,proto3" json:"Lumbar,omitempty"`
	SideBolster              *VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster `protobuf:"bytes,4,opt,name=SideBolster,proto3" json:"SideBolster,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrest) Reset() {
	*x = VehicleCabinSeatRow2DriverSideSwitchBackrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideSwitchBackrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideSwitchBackrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideSwitchBackrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{188}
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrest) GetIsReclineForwardEngaged() bool {
	if x != nil {
		return x.IsReclineForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrest) GetIsReclineBackwardEngaged() bool {
	if x != nil {
		return x.IsReclineBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrest) GetLumbar() *VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar {
	if x != nil {
		return x.Lumbar
	}
	return nil
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrest) GetSideBolster() *VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster {
	if x != nil {
		return x.SideBolster
	}
	return nil
}

type VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMoreSupportEngaged bool `protobuf:"varint,1,opt,name=IsMoreSupportEngaged,proto3" json:"IsMoreSupportEngaged,omitempty"`
	IsLessSupportEngaged bool `protobuf:"varint,2,opt,name=IsLessSupportEngaged,proto3" json:"IsLessSupportEngaged,omitempty"`
	IsUpEngaged          bool `protobuf:"varint,3,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged        bool `protobuf:"varint,4,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar) Reset() {
	*x = VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{189}
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar) GetIsMoreSupportEngaged() bool {
	if x != nil {
		return x.IsMoreSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar) GetIsLessSupportEngaged() bool {
	if x != nil {
		return x.IsLessSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

type VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMoreSupportEngaged bool `protobuf:"varint,1,opt,name=IsMoreSupportEngaged,proto3" json:"IsMoreSupportEngaged,omitempty"`
	IsLessSupportEngaged bool `protobuf:"varint,2,opt,name=IsLessSupportEngaged,proto3" json:"IsLessSupportEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster) Reset() {
	*x = VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{190}
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster) GetIsMoreSupportEngaged() bool {
	if x != nil {
		return x.IsMoreSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster) GetIsLessSupportEngaged() bool {
	if x != nil {
		return x.IsLessSupportEngaged
	}
	return false
}

type VehicleCabinSeatRow2DriverSideSwitchSeating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsForwardEngaged  bool `protobuf:"varint,1,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged bool `protobuf:"varint,2,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideSwitchSeating) Reset() {
	*x = VehicleCabinSeatRow2DriverSideSwitchSeating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideSwitchSeating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideSwitchSeating) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideSwitchSeating) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideSwitchSeating.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideSwitchSeating) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{191}
}

func (x *VehicleCabinSeatRow2DriverSideSwitchSeating) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitchSeating) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

type VehicleCabinSeatRow2DriverSideSwitchHeadrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUpEngaged       bool `protobuf:"varint,1,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged     bool `protobuf:"varint,2,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
	IsForwardEngaged  bool `protobuf:"varint,3,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged bool `protobuf:"varint,4,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideSwitchHeadrest) Reset() {
	*x = VehicleCabinSeatRow2DriverSideSwitchHeadrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideSwitchHeadrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideSwitchHeadrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideSwitchHeadrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideSwitchHeadrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideSwitchHeadrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{192}
}

func (x *VehicleCabinSeatRow2DriverSideSwitchHeadrest) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitchHeadrest) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitchHeadrest) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitchHeadrest) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

type VehicleCabinSeatRow2DriverSideSwitchMassage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsIncreaseEngaged bool `protobuf:"varint,1,opt,name=IsIncreaseEngaged,proto3" json:"IsIncreaseEngaged,omitempty"`
	IsDecreaseEngaged bool `protobuf:"varint,2,opt,name=IsDecreaseEngaged,proto3" json:"IsDecreaseEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2DriverSideSwitchMassage) Reset() {
	*x = VehicleCabinSeatRow2DriverSideSwitchMassage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2DriverSideSwitchMassage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2DriverSideSwitchMassage) ProtoMessage() {}

func (x *VehicleCabinSeatRow2DriverSideSwitchMassage) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2DriverSideSwitchMassage.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2DriverSideSwitchMassage) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{193}
}

func (x *VehicleCabinSeatRow2DriverSideSwitchMassage) GetIsIncreaseEngaged() bool {
	if x != nil {
		return x.IsIncreaseEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2DriverSideSwitchMassage) GetIsDecreaseEngaged() bool {
	if x != nil {
		return x.IsDecreaseEngaged
	}
	return false
}

type VehicleCabinSeatRow2Middle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOccupied     bool                                `protobuf:"varint,1,opt,name=IsOccupied,proto3" json:"IsOccupied,omitempty"`
	Occupant       *VehicleCabinSeatRow2MiddleOccupant `protobuf:"bytes,2,opt,name=Occupant,proto3" json:"Occupant,omitempty"`
	IsBelted       bool                                `protobuf:"varint,3,opt,name=IsBelted,proto3" json:"IsBelted,omitempty"`
	SeatBeltHeight uint32                              `protobuf:"varint,4,opt,name=SeatBeltHeight,proto3" json:"SeatBeltHeight,omitempty"`
	Heating        int32                               `protobuf:"varint,5,opt,name=Heating,proto3" json:"Heating,omitempty"`
	HeatingCooling int32                               `protobuf:"varint,6,opt,name=HeatingCooling,proto3" json:"HeatingCooling,omitempty"`
	Massage        uint32                              `protobuf:"varint,7,opt,name=Massage,proto3" json:"Massage,omitempty"`
	Position       uint32                              `protobuf:"varint,8,opt,name=Position,proto3" json:"Position,omitempty"`
	Height         uint32                              `protobuf:"varint,9,opt,name=Height,proto3" json:"Height,omitempty"`
	Tilt           float32                             `protobuf:"fixed32,10,opt,name=Tilt,proto3" json:"Tilt,omitempty"`
	Backrest       *VehicleCabinSeatRow2MiddleBackrest `protobuf:"bytes,11,opt,name=Backrest,proto3" json:"Backrest,omitempty"`
	Seating        *VehicleCabinSeatRow2MiddleSeating  `protobuf:"bytes,12,opt,name=Seating,proto3" json:"Seating,omitempty"`
	Headrest       *VehicleCabinSeatRow2MiddleHeadrest `protobuf:"bytes,13,opt,name=Headrest,proto3" json:"Headrest,omitempty"`
	Airbag         *VehicleCabinSeatRow2MiddleAirbag   `protobuf:"bytes,14,opt,name=Airbag,proto3" json:"Airbag,omitempty"`
	Switch         *VehicleCabinSeatRow2MiddleSwitch   `protobuf:"bytes,15,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinSeatRow2Middle) Reset() {
	*x = VehicleCabinSeatRow2Middle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2Middle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2Middle) ProtoMessage() {}

func (x *VehicleCabinSeatRow2Middle) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2Middle.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2Middle) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{194}
}

func (x *VehicleCabinSeatRow2Middle) GetIsOccupied() bool {
	if x != nil {
		return x.IsOccupied
	}
	return false
}

func (x *VehicleCabinSeatRow2Middle) GetOccupant() *VehicleCabinSeatRow2MiddleOccupant {
	if x != nil {
		return x.Occupant
	}
	return nil
}

func (x *VehicleCabinSeatRow2Middle) GetIsBelted() bool {
	if x != nil {
		return x.IsBelted
	}
	return false
}

func (x *VehicleCabinSeatRow2Middle) GetSeatBeltHeight() uint32 {
	if x != nil {
		return x.SeatBeltHeight
	}
	return 0
}

func (x *VehicleCabinSeatRow2Middle) GetHeating() int32 {
	if x != nil {
		return x.Heating
	}
	return 0
}

func (x *VehicleCabinSeatRow2Middle) GetHeatingCooling() int32 {
	if x != nil {
		return x.HeatingCooling
	}
	return 0
}

func (x *VehicleCabinSeatRow2Middle) GetMassage() uint32 {
	if x != nil {
		return x.Massage
	}
	return 0
}

func (x *VehicleCabinSeatRow2Middle) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinSeatRow2Middle) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VehicleCabinSeatRow2Middle) GetTilt() float32 {
	if x != nil {
		return x.Tilt
	}
	return 0
}

func (x *VehicleCabinSeatRow2Middle) GetBackrest() *VehicleCabinSeatRow2MiddleBackrest {
	if x != nil {
		return x.Backrest
	}
	return nil
}

func (x *VehicleCabinSeatRow2Middle) GetSeating() *VehicleCabinSeatRow2MiddleSeating {
	if x != nil {
		return x.Seating
	}
	return nil
}

func (x *VehicleCabinSeatRow2Middle) GetHeadrest() *VehicleCabinSeatRow2MiddleHeadrest {
	if x != nil {
		return x.Headrest
	}
	return nil
}

func (x *VehicleCabinSeatRow2Middle) GetAirbag() *VehicleCabinSeatRow2MiddleAirbag {
	if x != nil {
		return x.Airbag
	}
	return nil
}

func (x *VehicleCabinSeatRow2Middle) GetSwitch() *VehicleCabinSeatRow2MiddleSwitch {
	if x != nil {
		return x.Switch
	}
	return nil
}

type VehicleCabinSeatRow2MiddleOccupant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *VehicleCabinSeatRow2MiddleOccupantIdentifier `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleOccupant) Reset() {
	*x = VehicleCabinSeatRow2MiddleOccupant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleOccupant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleOccupant) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleOccupant) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleOccupant.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleOccupant) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{195}
}

func (x *VehicleCabinSeatRow2MiddleOccupant) GetIdentifier() *VehicleCabinSeatRow2MiddleOccupantIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type VehicleCabinSeatRow2MiddleOccupantIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject string `protobuf:"bytes,1,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Issuer  string `protobuf:"bytes,2,opt,name=Issuer,proto3" json:"Issuer,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleOccupantIdentifier) Reset() {
	*x = VehicleCabinSeatRow2MiddleOccupantIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleOccupantIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleOccupantIdentifier) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleOccupantIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleOccupantIdentifier.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleOccupantIdentifier) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{196}
}

func (x *VehicleCabinSeatRow2MiddleOccupantIdentifier) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *VehicleCabinSeatRow2MiddleOccupantIdentifier) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

type VehicleCabinSeatRow2MiddleBackrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recline     float32                                        `protobuf:"fixed32,1,opt,name=Recline,proto3" json:"Recline,omitempty"`
	Lumbar      *VehicleCabinSeatRow2MiddleBackrestLumbar      `protobuf:"bytes,2,opt,name=Lumbar,proto3" json:"Lumbar,omitempty"`
	SideBolster *VehicleCabinSeatRow2MiddleBackrestSideBolster `protobuf:"bytes,3,opt,name=SideBolster,proto3" json:"SideBolster,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleBackrest) Reset() {
	*x = VehicleCabinSeatRow2MiddleBackrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleBackrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleBackrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleBackrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleBackrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleBackrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{197}
}

func (x *VehicleCabinSeatRow2MiddleBackrest) GetRecline() float32 {
	if x != nil {
		return x.Recline
	}
	return 0
}

func (x *VehicleCabinSeatRow2MiddleBackrest) GetLumbar() *VehicleCabinSeatRow2MiddleBackrestLumbar {
	if x != nil {
		return x.Lumbar
	}
	return nil
}

func (x *VehicleCabinSeatRow2MiddleBackrest) GetSideBolster() *VehicleCabinSeatRow2MiddleBackrestSideBolster {
	if x != nil {
		return x.SideBolster
	}
	return nil
}

type VehicleCabinSeatRow2MiddleBackrestLumbar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Support float32 `protobuf:"fixed32,1,opt,name=Support,proto3" json:"Support,omitempty"`
	Height  uint32  `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleBackrestLumbar) Reset() {
	*x = VehicleCabinSeatRow2MiddleBackrestLumbar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleBackrestLumbar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleBackrestLumbar) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleBackrestLumbar) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleBackrestLumbar.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleBackrestLumbar) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{198}
}

func (x *VehicleCabinSeatRow2MiddleBackrestLumbar) GetSupport() float32 {
	if x != nil {
		return x.Support
	}
	return 0
}

func (x *VehicleCabinSeatRow2MiddleBackrestLumbar) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type VehicleCabinSeatRow2MiddleBackrestSideBolster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Support float32 `protobuf:"fixed32,1,opt,name=Support,proto3" json:"Support,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleBackrestSideBolster) Reset() {
	*x = VehicleCabinSeatRow2MiddleBackrestSideBolster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleBackrestSideBolster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleBackrestSideBolster) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleBackrestSideBolster) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleBackrestSideBolster.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleBackrestSideBolster) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{199}
}

func (x *VehicleCabinSeatRow2MiddleBackrestSideBolster) GetSupport() float32 {
	if x != nil {
		return x.Support
	}
	return 0
}

type VehicleCabinSeatRow2MiddleSeating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint32 `protobuf:"varint,1,opt,name=Length,proto3" json:"Length,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleSeating) Reset() {
	*x = VehicleCabinSeatRow2MiddleSeating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleSeating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleSeating) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleSeating) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleSeating.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleSeating) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{200}
}

func (x *VehicleCabinSeatRow2MiddleSeating) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type VehicleCabinSeatRow2MiddleHeadrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint32  `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Angle  float32 `protobuf:"fixed32,2,opt,name=Angle,proto3" json:"Angle,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleHeadrest) Reset() {
	*x = VehicleCabinSeatRow2MiddleHeadrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleHeadrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleHeadrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleHeadrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleHeadrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleHeadrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{201}
}

func (x *VehicleCabinSeatRow2MiddleHeadrest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VehicleCabinSeatRow2MiddleHeadrest) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

type VehicleCabinSeatRow2MiddleAirbag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDeployed bool `protobuf:"varint,1,opt,name=IsDeployed,proto3" json:"IsDeployed,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleAirbag) Reset() {
	*x = VehicleCabinSeatRow2MiddleAirbag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleAirbag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleAirbag) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleAirbag) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleAirbag.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleAirbag) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{202}
}

func (x *VehicleCabinSeatRow2MiddleAirbag) GetIsDeployed() bool {
	if x != nil {
		return x.IsDeployed
	}
	return false
}

type VehicleCabinSeatRow2MiddleSwitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsWarmerEngaged       bool                                      `protobuf:"varint,1,opt,name=IsWarmerEngaged,proto3" json:"IsWarmerEngaged,omitempty"`
	IsCoolerEngaged       bool                                      `protobuf:"varint,2,opt,name=IsCoolerEngaged,proto3" json:"IsCoolerEngaged,omitempty"`
	IsForwardEngaged      bool                                      `protobuf:"varint,3,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged     bool                                      `protobuf:"varint,4,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
	IsUpEngaged           bool                                      `protobuf:"varint,5,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged         bool                                      `protobuf:"varint,6,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
	IsTiltForwardEngaged  bool                                      `protobuf:"varint,7,opt,name=IsTiltForwardEngaged,proto3" json:"IsTiltForwardEngaged,omitempty"`
	IsTiltBackwardEngaged bool                                      `protobuf:"varint,8,opt,name=IsTiltBackwardEngaged,proto3" json:"IsTiltBackwardEngaged,omitempty"`
	Backrest              *VehicleCabinSeatRow2MiddleSwitchBackrest `protobuf:"bytes,9,opt,name=Backrest,proto3" json:"Backrest,omitempty"`
	Seating               *VehicleCabinSeatRow2MiddleSwitchSeating  `protobuf:"bytes,10,opt,name=Seating,proto3" json:"Seating,omitempty"`
	Headrest              *VehicleCabinSeatRow2MiddleSwitchHeadrest `protobuf:"bytes,11,opt,name=Headrest,proto3" json:"Headrest,omitempty"`
	Massage               *VehicleCabinSeatRow2MiddleSwitchMassage  `protobuf:"bytes,12,opt,name=Massage,proto3" json:"Massage,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleSwitch) Reset() {
	*x = VehicleCabinSeatRow2MiddleSwitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleSwitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleSwitch) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleSwitch) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleSwitch.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleSwitch) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{203}
}

func (x *VehicleCabinSeatRow2MiddleSwitch) GetIsWarmerEngaged() bool {
	if x != nil {
		return x.IsWarmerEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitch) GetIsCoolerEngaged() bool {
	if x != nil {
		return x.IsCoolerEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitch) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitch) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitch) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitch) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitch) GetIsTiltForwardEngaged() bool {
	if x != nil {
		return x.IsTiltForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitch) GetIsTiltBackwardEngaged() bool {
	if x != nil {
		return x.IsTiltBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitch) GetBackrest() *VehicleCabinSeatRow2MiddleSwitchBackrest {
	if x != nil {
		return x.Backrest
	}
	return nil
}

func (x *VehicleCabinSeatRow2MiddleSwitch) GetSeating() *VehicleCabinSeatRow2MiddleSwitchSeating {
	if x != nil {
		return x.Seating
	}
	return nil
}

func (x *VehicleCabinSeatRow2MiddleSwitch) GetHeadrest() *VehicleCabinSeatRow2MiddleSwitchHeadrest {
	if x != nil {
		return x.Headrest
	}
	return nil
}

func (x *VehicleCabinSeatRow2MiddleSwitch) GetMassage() *VehicleCabinSeatRow2MiddleSwitchMassage {
	if x != nil {
		return x.Massage
	}
	return nil
}

type VehicleCabinSeatRow2MiddleSwitchBackrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReclineForwardEngaged  bool                                                 `protobuf:"varint,1,opt,name=IsReclineForwardEngaged,proto3" json:"IsReclineForwardEngaged,omitempty"`
	IsReclineBackwardEngaged bool                                                 `protobuf:"varint,2,opt,name=IsReclineBackwardEngaged,proto3" json:"IsReclineBackwardEngaged,omitempty"`
	Lumbar                   *VehicleCabinSeatRow2MiddleSwitchBackrestLumbar      `protobuf:"bytes,3,opt,name=Lumbar,proto3" json:"Lumbar,omitempty"`
	SideBolster              *VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster `protobuf:"bytes,4,opt,name=SideBolster,proto3" json:"SideBolster,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrest) Reset() {
	*x = VehicleCabinSeatRow2MiddleSwitchBackrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleSwitchBackrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleSwitchBackrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleSwitchBackrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{204}
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrest) GetIsReclineForwardEngaged() bool {
	if x != nil {
		return x.IsReclineForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrest) GetIsReclineBackwardEngaged() bool {
	if x != nil {
		return x.IsReclineBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrest) GetLumbar() *VehicleCabinSeatRow2MiddleSwitchBackrestLumbar {
	if x != nil {
		return x.Lumbar
	}
	return nil
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrest) GetSideBolster() *VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster {
	if x != nil {
		return x.SideBolster
	}
	return nil
}

type VehicleCabinSeatRow2MiddleSwitchBackrestLumbar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMoreSupportEngaged bool `protobuf:"varint,1,opt,name=IsMoreSupportEngaged,proto3" json:"IsMoreSupportEngaged,omitempty"`
	IsLessSupportEngaged bool `protobuf:"varint,2,opt,name=IsLessSupportEngaged,proto3" json:"IsLessSupportEngaged,omitempty"`
	IsUpEngaged          bool `protobuf:"varint,3,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged        bool `protobuf:"varint,4,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrestLumbar) Reset() {
	*x = VehicleCabinSeatRow2MiddleSwitchBackrestLumbar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrestLumbar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleSwitchBackrestLumbar) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrestLumbar) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleSwitchBackrestLumbar.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleSwitchBackrestLumbar) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{205}
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrestLumbar) GetIsMoreSupportEngaged() bool {
	if x != nil {
		return x.IsMoreSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrestLumbar) GetIsLessSupportEngaged() bool {
	if x != nil {
		return x.IsLessSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrestLumbar) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrestLumbar) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

type VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMoreSupportEngaged bool `protobuf:"varint,1,opt,name=IsMoreSupportEngaged,proto3" json:"IsMoreSupportEngaged,omitempty"`
	IsLessSupportEngaged bool `protobuf:"varint,2,opt,name=IsLessSupportEngaged,proto3" json:"IsLessSupportEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster) Reset() {
	*x = VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{206}
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster) GetIsMoreSupportEngaged() bool {
	if x != nil {
		return x.IsMoreSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster) GetIsLessSupportEngaged() bool {
	if x != nil {
		return x.IsLessSupportEngaged
	}
	return false
}

type VehicleCabinSeatRow2MiddleSwitchSeating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsForwardEngaged  bool `protobuf:"varint,1,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged bool `protobuf:"varint,2,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleSwitchSeating) Reset() {
	*x = VehicleCabinSeatRow2MiddleSwitchSeating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleSwitchSeating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleSwitchSeating) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleSwitchSeating) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleSwitchSeating.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleSwitchSeating) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{207}
}

func (x *VehicleCabinSeatRow2MiddleSwitchSeating) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitchSeating) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

type VehicleCabinSeatRow2MiddleSwitchHeadrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUpEngaged       bool `protobuf:"varint,1,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged     bool `protobuf:"varint,2,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
	IsForwardEngaged  bool `protobuf:"varint,3,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged bool `protobuf:"varint,4,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleSwitchHeadrest) Reset() {
	*x = VehicleCabinSeatRow2MiddleSwitchHeadrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleSwitchHeadrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleSwitchHeadrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleSwitchHeadrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleSwitchHeadrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleSwitchHeadrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{208}
}

func (x *VehicleCabinSeatRow2MiddleSwitchHeadrest) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitchHeadrest) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitchHeadrest) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitchHeadrest) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

type VehicleCabinSeatRow2MiddleSwitchMassage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsIncreaseEngaged bool `protobuf:"varint,1,opt,name=IsIncreaseEngaged,proto3" json:"IsIncreaseEngaged,omitempty"`
	IsDecreaseEngaged bool `protobuf:"varint,2,opt,name=IsDecreaseEngaged,proto3" json:"IsDecreaseEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2MiddleSwitchMassage) Reset() {
	*x = VehicleCabinSeatRow2MiddleSwitchMassage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2MiddleSwitchMassage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2MiddleSwitchMassage) ProtoMessage() {}

func (x *VehicleCabinSeatRow2MiddleSwitchMassage) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2MiddleSwitchMassage.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2MiddleSwitchMassage) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{209}
}

func (x *VehicleCabinSeatRow2MiddleSwitchMassage) GetIsIncreaseEngaged() bool {
	if x != nil {
		return x.IsIncreaseEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2MiddleSwitchMassage) GetIsDecreaseEngaged() bool {
	if x != nil {
		return x.IsDecreaseEngaged
	}
	return false
}

type VehicleCabinSeatRow2PassengerSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOccupied     bool                                       `protobuf:"varint,1,opt,name=IsOccupied,proto3" json:"IsOccupied,omitempty"`
	Occupant       *VehicleCabinSeatRow2PassengerSideOccupant `protobuf:"bytes,2,opt,name=Occupant,proto3" json:"Occupant,omitempty"`
	IsBelted       bool                                       `protobuf:"varint,3,opt,name=IsBelted,proto3" json:"IsBelted,omitempty"`
	SeatBeltHeight uint32                                     `protobuf:"varint,4,opt,name=SeatBeltHeight,proto3" json:"SeatBeltHeight,omitempty"`
	Heating        int32                                      `protobuf:"varint,5,opt,name=Heating,proto3" json:"Heating,omitempty"`
	HeatingCooling int32                                      `protobuf:"varint,6,opt,name=HeatingCooling,proto3" json:"HeatingCooling,omitempty"`
	Massage        uint32                                     `protobuf:"varint,7,opt,name=Massage,proto3" json:"Massage,omitempty"`
	Position       uint32                                     `protobuf:"varint,8,opt,name=Position,proto3" json:"Position,omitempty"`
	Height         uint32                                     `protobuf:"varint,9,opt,name=Height,proto3" json:"Height,omitempty"`
	Tilt           float32                                    `protobuf:"fixed32,10,opt,name=Tilt,proto3" json:"Tilt,omitempty"`
	Backrest       *VehicleCabinSeatRow2PassengerSideBackrest `protobuf:"bytes,11,opt,name=Backrest,proto3" json:"Backrest,omitempty"`
	Seating        *VehicleCabinSeatRow2PassengerSideSeating  `protobuf:"bytes,12,opt,name=Seating,proto3" json:"Seating,omitempty"`
	Headrest       *VehicleCabinSeatRow2PassengerSideHeadrest `protobuf:"bytes,13,opt,name=Headrest,proto3" json:"Headrest,omitempty"`
	Airbag         *VehicleCabinSeatRow2PassengerSideAirbag   `protobuf:"bytes,14,opt,name=Airbag,proto3" json:"Airbag,omitempty"`
	Switch         *VehicleCabinSeatRow2PassengerSideSwitch   `protobuf:"bytes,15,opt,name=Switch,proto3" json:"Switch,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSide) Reset() {
	*x = VehicleCabinSeatRow2PassengerSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSide) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSide) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSide.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSide) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{210}
}

func (x *VehicleCabinSeatRow2PassengerSide) GetIsOccupied() bool {
	if x != nil {
		return x.IsOccupied
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSide) GetOccupant() *VehicleCabinSeatRow2PassengerSideOccupant {
	if x != nil {
		return x.Occupant
	}
	return nil
}

func (x *VehicleCabinSeatRow2PassengerSide) GetIsBelted() bool {
	if x != nil {
		return x.IsBelted
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSide) GetSeatBeltHeight() uint32 {
	if x != nil {
		return x.SeatBeltHeight
	}
	return 0
}

func (x *VehicleCabinSeatRow2PassengerSide) GetHeating() int32 {
	if x != nil {
		return x.Heating
	}
	return 0
}

func (x *VehicleCabinSeatRow2PassengerSide) GetHeatingCooling() int32 {
	if x != nil {
		return x.HeatingCooling
	}
	return 0
}

func (x *VehicleCabinSeatRow2PassengerSide) GetMassage() uint32 {
	if x != nil {
		return x.Massage
	}
	return 0
}

func (x *VehicleCabinSeatRow2PassengerSide) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *VehicleCabinSeatRow2PassengerSide) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VehicleCabinSeatRow2PassengerSide) GetTilt() float32 {
	if x != nil {
		return x.Tilt
	}
	return 0
}

func (x *VehicleCabinSeatRow2PassengerSide) GetBackrest() *VehicleCabinSeatRow2PassengerSideBackrest {
	if x != nil {
		return x.Backrest
	}
	return nil
}

func (x *VehicleCabinSeatRow2PassengerSide) GetSeating() *VehicleCabinSeatRow2PassengerSideSeating {
	if x != nil {
		return x.Seating
	}
	return nil
}

func (x *VehicleCabinSeatRow2PassengerSide) GetHeadrest() *VehicleCabinSeatRow2PassengerSideHeadrest {
	if x != nil {
		return x.Headrest
	}
	return nil
}

func (x *VehicleCabinSeatRow2PassengerSide) GetAirbag() *VehicleCabinSeatRow2PassengerSideAirbag {
	if x != nil {
		return x.Airbag
	}
	return nil
}

func (x *VehicleCabinSeatRow2PassengerSide) GetSwitch() *VehicleCabinSeatRow2PassengerSideSwitch {
	if x != nil {
		return x.Switch
	}
	return nil
}

type VehicleCabinSeatRow2PassengerSideOccupant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *VehicleCabinSeatRow2PassengerSideOccupantIdentifier `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideOccupant) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideOccupant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideOccupant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideOccupant) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideOccupant) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideOccupant.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideOccupant) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{211}
}

func (x *VehicleCabinSeatRow2PassengerSideOccupant) GetIdentifier() *VehicleCabinSeatRow2PassengerSideOccupantIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

type VehicleCabinSeatRow2PassengerSideOccupantIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject string `protobuf:"bytes,1,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Issuer  string `protobuf:"bytes,2,opt,name=Issuer,proto3" json:"Issuer,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideOccupantIdentifier) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideOccupantIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideOccupantIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideOccupantIdentifier) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideOccupantIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideOccupantIdentifier.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideOccupantIdentifier) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{212}
}

func (x *VehicleCabinSeatRow2PassengerSideOccupantIdentifier) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *VehicleCabinSeatRow2PassengerSideOccupantIdentifier) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

type VehicleCabinSeatRow2PassengerSideBackrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recline     float32                                               `protobuf:"fixed32,1,opt,name=Recline,proto3" json:"Recline,omitempty"`
	Lumbar      *VehicleCabinSeatRow2PassengerSideBackrestLumbar      `protobuf:"bytes,2,opt,name=Lumbar,proto3" json:"Lumbar,omitempty"`
	SideBolster *VehicleCabinSeatRow2PassengerSideBackrestSideBolster `protobuf:"bytes,3,opt,name=SideBolster,proto3" json:"SideBolster,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideBackrest) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideBackrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideBackrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideBackrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideBackrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideBackrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideBackrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{213}
}

func (x *VehicleCabinSeatRow2PassengerSideBackrest) GetRecline() float32 {
	if x != nil {
		return x.Recline
	}
	return 0
}

func (x *VehicleCabinSeatRow2PassengerSideBackrest) GetLumbar() *VehicleCabinSeatRow2PassengerSideBackrestLumbar {
	if x != nil {
		return x.Lumbar
	}
	return nil
}

func (x *VehicleCabinSeatRow2PassengerSideBackrest) GetSideBolster() *VehicleCabinSeatRow2PassengerSideBackrestSideBolster {
	if x != nil {
		return x.SideBolster
	}
	return nil
}

type VehicleCabinSeatRow2PassengerSideBackrestLumbar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Support float32 `protobuf:"fixed32,1,opt,name=Support,proto3" json:"Support,omitempty"`
	Height  uint32  `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideBackrestLumbar) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideBackrestLumbar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideBackrestLumbar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideBackrestLumbar) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideBackrestLumbar) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideBackrestLumbar.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideBackrestLumbar) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{214}
}

func (x *VehicleCabinSeatRow2PassengerSideBackrestLumbar) GetSupport() float32 {
	if x != nil {
		return x.Support
	}
	return 0
}

func (x *VehicleCabinSeatRow2PassengerSideBackrestLumbar) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type VehicleCabinSeatRow2PassengerSideBackrestSideBolster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Support float32 `protobuf:"fixed32,1,opt,name=Support,proto3" json:"Support,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideBackrestSideBolster) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideBackrestSideBolster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideBackrestSideBolster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideBackrestSideBolster) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideBackrestSideBolster) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideBackrestSideBolster.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideBackrestSideBolster) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{215}
}

func (x *VehicleCabinSeatRow2PassengerSideBackrestSideBolster) GetSupport() float32 {
	if x != nil {
		return x.Support
	}
	return 0
}

type VehicleCabinSeatRow2PassengerSideSeating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length uint32 `protobuf:"varint,1,opt,name=Length,proto3" json:"Length,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideSeating) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideSeating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideSeating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideSeating) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideSeating) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideSeating.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideSeating) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{216}
}

func (x *VehicleCabinSeatRow2PassengerSideSeating) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type VehicleCabinSeatRow2PassengerSideHeadrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint32  `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	Angle  float32 `protobuf:"fixed32,2,opt,name=Angle,proto3" json:"Angle,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideHeadrest) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideHeadrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideHeadrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideHeadrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideHeadrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideHeadrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideHeadrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{217}
}

func (x *VehicleCabinSeatRow2PassengerSideHeadrest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *VehicleCabinSeatRow2PassengerSideHeadrest) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

type VehicleCabinSeatRow2PassengerSideAirbag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDeployed bool `protobuf:"varint,1,opt,name=IsDeployed,proto3" json:"IsDeployed,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideAirbag) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideAirbag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideAirbag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideAirbag) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideAirbag) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideAirbag.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideAirbag) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{218}
}

func (x *VehicleCabinSeatRow2PassengerSideAirbag) GetIsDeployed() bool {
	if x != nil {
		return x.IsDeployed
	}
	return false
}

type VehicleCabinSeatRow2PassengerSideSwitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsWarmerEngaged       bool                                             `protobuf:"varint,1,opt,name=IsWarmerEngaged,proto3" json:"IsWarmerEngaged,omitempty"`
	IsCoolerEngaged       bool                                             `protobuf:"varint,2,opt,name=IsCoolerEngaged,proto3" json:"IsCoolerEngaged,omitempty"`
	IsForwardEngaged      bool                                             `protobuf:"varint,3,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged     bool                                             `protobuf:"varint,4,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
	IsUpEngaged           bool                                             `protobuf:"varint,5,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged         bool                                             `protobuf:"varint,6,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
	IsTiltForwardEngaged  bool                                             `protobuf:"varint,7,opt,name=IsTiltForwardEngaged,proto3" json:"IsTiltForwardEngaged,omitempty"`
	IsTiltBackwardEngaged bool                                             `protobuf:"varint,8,opt,name=IsTiltBackwardEngaged,proto3" json:"IsTiltBackwardEngaged,omitempty"`
	Backrest              *VehicleCabinSeatRow2PassengerSideSwitchBackrest `protobuf:"bytes,9,opt,name=Backrest,proto3" json:"Backrest,omitempty"`
	Seating               *VehicleCabinSeatRow2PassengerSideSwitchSeating  `protobuf:"bytes,10,opt,name=Seating,proto3" json:"Seating,omitempty"`
	Headrest              *VehicleCabinSeatRow2PassengerSideSwitchHeadrest `protobuf:"bytes,11,opt,name=Headrest,proto3" json:"Headrest,omitempty"`
	Massage               *VehicleCabinSeatRow2PassengerSideSwitchMassage  `protobuf:"bytes,12,opt,name=Massage,proto3" json:"Massage,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideSwitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideSwitch) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideSwitch.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideSwitch) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{219}
}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) GetIsWarmerEngaged() bool {
	if x != nil {
		return x.IsWarmerEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) GetIsCoolerEngaged() bool {
	if x != nil {
		return x.IsCoolerEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) GetIsTiltForwardEngaged() bool {
	if x != nil {
		return x.IsTiltForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) GetIsTiltBackwardEngaged() bool {
	if x != nil {
		return x.IsTiltBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) GetBackrest() *VehicleCabinSeatRow2PassengerSideSwitchBackrest {
	if x != nil {
		return x.Backrest
	}
	return nil
}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) GetSeating() *VehicleCabinSeatRow2PassengerSideSwitchSeating {
	if x != nil {
		return x.Seating
	}
	return nil
}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) GetHeadrest() *VehicleCabinSeatRow2PassengerSideSwitchHeadrest {
	if x != nil {
		return x.Headrest
	}
	return nil
}

func (x *VehicleCabinSeatRow2PassengerSideSwitch) GetMassage() *VehicleCabinSeatRow2PassengerSideSwitchMassage {
	if x != nil {
		return x.Massage
	}
	return nil
}

type VehicleCabinSeatRow2PassengerSideSwitchBackrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReclineForwardEngaged  bool                                                        `protobuf:"varint,1,opt,name=IsReclineForwardEngaged,proto3" json:"IsReclineForwardEngaged,omitempty"`
	IsReclineBackwardEngaged bool                                                        `protobuf:"varint,2,opt,name=IsReclineBackwardEngaged,proto3" json:"IsReclineBackwardEngaged,omitempty"`
	Lumbar                   *VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar      `protobuf:"bytes,3,opt,name=Lumbar,proto3" json:"Lumbar,omitempty"`
	SideBolster              *VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster `protobuf:"bytes,4,opt,name=SideBolster,proto3" json:"SideBolster,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrest) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideSwitchBackrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideSwitchBackrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideSwitchBackrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideSwitchBackrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{220}
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrest) GetIsReclineForwardEngaged() bool {
	if x != nil {
		return x.IsReclineForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrest) GetIsReclineBackwardEngaged() bool {
	if x != nil {
		return x.IsReclineBackwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrest) GetLumbar() *VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar {
	if x != nil {
		return x.Lumbar
	}
	return nil
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrest) GetSideBolster() *VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster {
	if x != nil {
		return x.SideBolster
	}
	return nil
}

type VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMoreSupportEngaged bool `protobuf:"varint,1,opt,name=IsMoreSupportEngaged,proto3" json:"IsMoreSupportEngaged,omitempty"`
	IsLessSupportEngaged bool `protobuf:"varint,2,opt,name=IsLessSupportEngaged,proto3" json:"IsLessSupportEngaged,omitempty"`
	IsUpEngaged          bool `protobuf:"varint,3,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged        bool `protobuf:"varint,4,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{221}
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar) GetIsMoreSupportEngaged() bool {
	if x != nil {
		return x.IsMoreSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar) GetIsLessSupportEngaged() bool {
	if x != nil {
		return x.IsLessSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

type VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMoreSupportEngaged bool `protobuf:"varint,1,opt,name=IsMoreSupportEngaged,proto3" json:"IsMoreSupportEngaged,omitempty"`
	IsLessSupportEngaged bool `protobuf:"varint,2,opt,name=IsLessSupportEngaged,proto3" json:"IsLessSupportEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{222}
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster) GetIsMoreSupportEngaged() bool {
	if x != nil {
		return x.IsMoreSupportEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster) GetIsLessSupportEngaged() bool {
	if x != nil {
		return x.IsLessSupportEngaged
	}
	return false
}

type VehicleCabinSeatRow2PassengerSideSwitchSeating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsForwardEngaged  bool `protobuf:"varint,1,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged bool `protobuf:"varint,2,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchSeating) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideSwitchSeating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchSeating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideSwitchSeating) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideSwitchSeating) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideSwitchSeating.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideSwitchSeating) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{223}
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchSeating) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchSeating) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

type VehicleCabinSeatRow2PassengerSideSwitchHeadrest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUpEngaged       bool `protobuf:"varint,1,opt,name=IsUpEngaged,proto3" json:"IsUpEngaged,omitempty"`
	IsDownEngaged     bool `protobuf:"varint,2,opt,name=IsDownEngaged,proto3" json:"IsDownEngaged,omitempty"`
	IsForwardEngaged  bool `protobuf:"varint,3,opt,name=IsForwardEngaged,proto3" json:"IsForwardEngaged,omitempty"`
	IsBackwardEngaged bool `protobuf:"varint,4,opt,name=IsBackwardEngaged,proto3" json:"IsBackwardEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchHeadrest) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideSwitchHeadrest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchHeadrest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideSwitchHeadrest) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideSwitchHeadrest) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideSwitchHeadrest.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideSwitchHeadrest) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{224}
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchHeadrest) GetIsUpEngaged() bool {
	if x != nil {
		return x.IsUpEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchHeadrest) GetIsDownEngaged() bool {
	if x != nil {
		return x.IsDownEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchHeadrest) GetIsForwardEngaged() bool {
	if x != nil {
		return x.IsForwardEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchHeadrest) GetIsBackwardEngaged() bool {
	if x != nil {
		return x.IsBackwardEngaged
	}
	return false
}

type VehicleCabinSeatRow2PassengerSideSwitchMassage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsIncreaseEngaged bool `protobuf:"varint,1,opt,name=IsIncreaseEngaged,proto3" json:"IsIncreaseEngaged,omitempty"`
	IsDecreaseEngaged bool `protobuf:"varint,2,opt,name=IsDecreaseEngaged,proto3" json:"IsDecreaseEngaged,omitempty"`
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchMassage) Reset() {
	*x = VehicleCabinSeatRow2PassengerSideSwitchMassage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchMassage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinSeatRow2PassengerSideSwitchMassage) ProtoMessage() {}

func (x *VehicleCabinSeatRow2PassengerSideSwitchMassage) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinSeatRow2PassengerSideSwitchMassage.ProtoReflect.Descriptor instead.
func (*VehicleCabinSeatRow2PassengerSideSwitchMassage) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{225}
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchMassage) GetIsIncreaseEngaged() bool {
	if x != nil {
		return x.IsIncreaseEngaged
	}
	return false
}

func (x *VehicleCabinSeatRow2PassengerSideSwitchMassage) GetIsDecreaseEngaged() bool {
	if x != nil {
		return x.IsDecreaseEngaged
	}
	return false
}

type VehicleCabinConvertible struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *VehicleCabinConvertible) Reset() {
	*x = VehicleCabinConvertible{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleCabinConvertible) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleCabinConvertible) ProtoMessage() {}

func (x *VehicleCabinConvertible) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleCabinConvertible.ProtoReflect.Descriptor instead.
func (*VehicleCabinConvertible) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{226}
}

func (x *VehicleCabinConvertible) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type VehicleADAS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveAutonomyLevel    string                             `protobuf:"bytes,1,opt,name=ActiveAutonomyLevel,proto3" json:"ActiveAutonomyLevel,omitempty"`
	SupportedAutonomyLevel string                             `protobuf:"bytes,2,opt,name=SupportedAutonomyLevel,proto3" json:"SupportedAutonomyLevel,omitempty"`
	CruiseControl          *VehicleADASCruiseControl          `protobuf:"bytes,3,opt,name=CruiseControl,proto3" json:"CruiseControl,omitempty"`
	LaneDepartureDetection *VehicleADASLaneDepartureDetection `protobuf:"bytes,4,opt,name=LaneDepartureDetection,proto3" json:"LaneDepartureDetection,omitempty"`
	ObstacleDetection      *VehicleADASObstacleDetection      `protobuf:"bytes,5,opt,name=ObstacleDetection,proto3" json:"ObstacleDetection,omitempty"`
	ABS                    *VehicleADASABS                    `protobuf:"bytes,6,opt,name=ABS,proto3" json:"ABS,omitempty"`
	TCS                    *VehicleADASTCS                    `protobuf:"bytes,7,opt,name=TCS,proto3" json:"TCS,omitempty"`
	ESC                    *VehicleADASESC                    `protobuf:"bytes,8,opt,name=ESC,proto3" json:"ESC,omitempty"`
	EBD                    *VehicleADASEBD                    `protobuf:"bytes,9,opt,name=EBD,proto3" json:"EBD,omitempty"`
	EBA                    *VehicleADASEBA                    `protobuf:"bytes,10,opt,name=EBA,proto3" json:"EBA,omitempty"`
	DMS                    *VehicleADASDMS                    `protobuf:"bytes,11,opt,name=DMS,proto3" json:"DMS,omitempty"`
	PowerOptimizeLevel     uint32                             `protobuf:"varint,12,opt,name=PowerOptimizeLevel,proto3" json:"PowerOptimizeLevel,omitempty"`
	IsAutoPowerOptimize    bool                               `protobuf:"varint,13,opt,name=IsAutoPowerOptimize,proto3" json:"IsAutoPowerOptimize,omitempty"`
}

func (x *VehicleADAS) Reset() {
	*x = VehicleADAS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleADAS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleADAS) ProtoMessage() {}

func (x *VehicleADAS) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleADAS.ProtoReflect.Descriptor instead.
func (*VehicleADAS) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{227}
}

func (x *VehicleADAS) GetActiveAutonomyLevel() string {
	if x != nil {
		return x.ActiveAutonomyLevel
	}
	return ""
}

func (x *VehicleADAS) GetSupportedAutonomyLevel() string {
	if x != nil {
		return x.SupportedAutonomyLevel
	}
	return ""
}

func (x *VehicleADAS) GetCruiseControl() *VehicleADASCruiseControl {
	if x != nil {
		return x.CruiseControl
	}
	return nil
}

func (x *VehicleADAS) GetLaneDepartureDetection() *VehicleADASLaneDepartureDetection {
	if x != nil {
		return x.LaneDepartureDetection
	}
	return nil
}

func (x *VehicleADAS) GetObstacleDetection() *VehicleADASObstacleDetection {
	if x != nil {
		return x.ObstacleDetection
	}
	return nil
}

func (x *VehicleADAS) GetABS() *VehicleADASABS {
	if x != nil {
		return x.ABS
	}
	return nil
}

func (x *VehicleADAS) GetTCS() *VehicleADASTCS {
	if x != nil {
		return x.TCS
	}
	return nil
}

func (x *VehicleADAS) GetESC() *VehicleADASESC {
	if x != nil {
		return x.ESC
	}
	return nil
}

func (x *VehicleADAS) GetEBD() *VehicleADASEBD {
	if x != nil {
		return x.EBD
	}
	return nil
}

func (x *VehicleADAS) GetEBA() *VehicleADASEBA {
	if x != nil {
		return x.EBA
	}
	return nil
}

func (x *VehicleADAS) GetDMS() *VehicleADASDMS {
	if x != nil {
		return x.DMS
	}
	return nil
}

func (x *VehicleADAS) GetPowerOptimizeLevel() uint32 {
	if x != nil {
		return x.PowerOptimizeLevel
	}
	return 0
}

func (x *VehicleADAS) GetIsAutoPowerOptimize() bool {
	if x != nil {
		return x.IsAutoPowerOptimize
	}
	return false
}

type VehicleADASCruiseControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnabled bool    `protobuf:"varint,1,opt,name=IsEnabled,proto3" json:"IsEnabled,omitempty"`
	IsActive  bool    `protobuf:"varint,2,opt,name=IsActive,proto3" json:"IsActive,omitempty"`
	SpeedSet  float32 `protobuf:"fixed32,3,opt,name=SpeedSet,proto3" json:"SpeedSet,omitempty"`
	IsError   bool    `protobuf:"varint,4,opt,name=IsError,proto3" json:"IsError,omitempty"`
}

func (x *VehicleADASCruiseControl) Reset() {
	*x = VehicleADASCruiseControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleADASCruiseControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleADASCruiseControl) ProtoMessage() {}

func (x *VehicleADASCruiseControl) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleADASCruiseControl.ProtoReflect.Descriptor instead.
func (*VehicleADASCruiseControl) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{228}
}

func (x *VehicleADASCruiseControl) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *VehicleADASCruiseControl) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *VehicleADASCruiseControl) GetSpeedSet() float32 {
	if x != nil {
		return x.SpeedSet
	}
	return 0
}

func (x *VehicleADASCruiseControl) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

type VehicleADASLaneDepartureDetection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnabled bool `protobuf:"varint,1,opt,name=IsEnabled,proto3" json:"IsEnabled,omitempty"`
	IsWarning bool `protobuf:"varint,2,opt,name=IsWarning,proto3" json:"IsWarning,omitempty"`
	IsError   bool `protobuf:"varint,3,opt,name=IsError,proto3" json:"IsError,omitempty"`
}

func (x *VehicleADASLaneDepartureDetection) Reset() {
	*x = VehicleADASLaneDepartureDetection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleADASLaneDepartureDetection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleADASLaneDepartureDetection) ProtoMessage() {}

func (x *VehicleADASLaneDepartureDetection) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleADASLaneDepartureDetection.ProtoReflect.Descriptor instead.
func (*VehicleADASLaneDepartureDetection) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{229}
}

func (x *VehicleADASLaneDepartureDetection) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *VehicleADASLaneDepartureDetection) GetIsWarning() bool {
	if x != nil {
		return x.IsWarning
	}
	return false
}

func (x *VehicleADASLaneDepartureDetection) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

type VehicleADASObstacleDetection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnabled bool `protobuf:"varint,1,opt,name=IsEnabled,proto3" json:"IsEnabled,omitempty"`
	IsWarning bool `protobuf:"varint,2,opt,name=IsWarning,proto3" json:"IsWarning,omitempty"`
	IsError   bool `protobuf:"varint,3,opt,name=IsError,proto3" json:"IsError,omitempty"`
}

func (x *VehicleADASObstacleDetection) Reset() {
	*x = VehicleADASObstacleDetection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleADASObstacleDetection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleADASObstacleDetection) ProtoMessage() {}

func (x *VehicleADASObstacleDetection) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleADASObstacleDetection.ProtoReflect.Descriptor instead.
func (*VehicleADASObstacleDetection) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{230}
}

func (x *VehicleADASObstacleDetection) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *VehicleADASObstacleDetection) GetIsWarning() bool {
	if x != nil {
		return x.IsWarning
	}
	return false
}

func (x *VehicleADASObstacleDetection) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

type VehicleADASABS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnabled bool `protobuf:"varint,1,opt,name=IsEnabled,proto3" json:"IsEnabled,omitempty"`
	IsError   bool `protobuf:"varint,2,opt,name=IsError,proto3" json:"IsError,omitempty"`
	IsEngaged bool `protobuf:"varint,3,opt,name=IsEngaged,proto3" json:"IsEngaged,omitempty"`
}

func (x *VehicleADASABS) Reset() {
	*x = VehicleADASABS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleADASABS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleADASABS) ProtoMessage() {}

func (x *VehicleADASABS) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleADASABS.ProtoReflect.Descriptor instead.
func (*VehicleADASABS) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{231}
}

func (x *VehicleADASABS) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *VehicleADASABS) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

func (x *VehicleADASABS) GetIsEngaged() bool {
	if x != nil {
		return x.IsEngaged
	}
	return false
}

type VehicleADASTCS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnabled bool `protobuf:"varint,1,opt,name=IsEnabled,proto3" json:"IsEnabled,omitempty"`
	IsError   bool `protobuf:"varint,2,opt,name=IsError,proto3" json:"IsError,omitempty"`
	IsEngaged bool `protobuf:"varint,3,opt,name=IsEngaged,proto3" json:"IsEngaged,omitempty"`
}

func (x *VehicleADASTCS) Reset() {
	*x = VehicleADASTCS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleADASTCS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleADASTCS) ProtoMessage() {}

func (x *VehicleADASTCS) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleADASTCS.ProtoReflect.Descriptor instead.
func (*VehicleADASTCS) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{232}
}

func (x *VehicleADASTCS) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *VehicleADASTCS) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

func (x *VehicleADASTCS) GetIsEngaged() bool {
	if x != nil {
		return x.IsEngaged
	}
	return false
}

type VehicleADASESC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnabled                 bool                        `protobuf:"varint,1,opt,name=IsEnabled,proto3" json:"IsEnabled,omitempty"`
	IsError                   bool                        `protobuf:"varint,2,opt,name=IsError,proto3" json:"IsError,omitempty"`
	IsEngaged                 bool                        `protobuf:"varint,3,opt,name=IsEngaged,proto3" json:"IsEngaged,omitempty"`
	IsStrongCrossWindDetected bool                        `protobuf:"varint,4,opt,name=IsStrongCrossWindDetected,proto3" json:"IsStrongCrossWindDetected,omitempty"`
	RoadFriction              *VehicleADASESCRoadFriction `protobuf:"bytes,5,opt,name=RoadFriction,proto3" json:"RoadFriction,omitempty"`
}

func (x *VehicleADASESC) Reset() {
	*x = VehicleADASESC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleADASESC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleADASESC) ProtoMessage() {}

func (x *VehicleADASESC) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleADASESC.ProtoReflect.Descriptor instead.
func (*VehicleADASESC) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{233}
}

func (x *VehicleADASESC) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *VehicleADASESC) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

func (x *VehicleADASESC) GetIsEngaged() bool {
	if x != nil {
		return x.IsEngaged
	}
	return false
}

func (x *VehicleADASESC) GetIsStrongCrossWindDetected() bool {
	if x != nil {
		return x.IsStrongCrossWindDetected
	}
	return false
}

func (x *VehicleADASESC) GetRoadFriction() *VehicleADASESCRoadFriction {
	if x != nil {
		return x.RoadFriction
	}
	return nil
}

type VehicleADASESCRoadFriction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MostProbable float32 `protobuf:"fixed32,1,opt,name=MostProbable,proto3" json:"MostProbable,omitempty"`
	LowerBound   float32 `protobuf:"fixed32,2,opt,name=LowerBound,proto3" json:"LowerBound,omitempty"`
	UpperBound   float32 `protobuf:"fixed32,3,opt,name=UpperBound,proto3" json:"UpperBound,omitempty"`
}

func (x *VehicleADASESCRoadFriction) Reset() {
	*x = VehicleADASESCRoadFriction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleADASESCRoadFriction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleADASESCRoadFriction) ProtoMessage() {}

func (x *VehicleADASESCRoadFriction) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleADASESCRoadFriction.ProtoReflect.Descriptor instead.
func (*VehicleADASESCRoadFriction) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{234}
}

func (x *VehicleADASESCRoadFriction) GetMostProbable() float32 {
	if x != nil {
		return x.MostProbable
	}
	return 0
}

func (x *VehicleADASESCRoadFriction) GetLowerBound() float32 {
	if x != nil {
		return x.LowerBound
	}
	return 0
}

func (x *VehicleADASESCRoadFriction) GetUpperBound() float32 {
	if x != nil {
		return x.UpperBound
	}
	return 0
}

type VehicleADASEBD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnabled bool `protobuf:"varint,1,opt,name=IsEnabled,proto3" json:"IsEnabled,omitempty"`
	IsError   bool `protobuf:"varint,2,opt,name=IsError,proto3" json:"IsError,omitempty"`
	IsEngaged bool `protobuf:"varint,3,opt,name=IsEngaged,proto3" json:"IsEngaged,omitempty"`
}

func (x *VehicleADASEBD) Reset() {
	*x = VehicleADASEBD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleADASEBD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleADASEBD) ProtoMessage() {}

func (x *VehicleADASEBD) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleADASEBD.ProtoReflect.Descriptor instead.
func (*VehicleADASEBD) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{235}
}

func (x *VehicleADASEBD) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *VehicleADASEBD) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

func (x *VehicleADASEBD) GetIsEngaged() bool {
	if x != nil {
		return x.IsEngaged
	}
	return false
}

type VehicleADASEBA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnabled bool `protobuf:"varint,1,opt,name=IsEnabled,proto3" json:"IsEnabled,omitempty"`
	IsError   bool `protobuf:"varint,2,opt,name=IsError,proto3" json:"IsError,omitempty"`
	IsEngaged bool `protobuf:"varint,3,opt,name=IsEngaged,proto3" json:"IsEngaged,omitempty"`
}

func (x *VehicleADASEBA) Reset() {
	*x = VehicleADASEBA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleADASEBA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleADASEBA) ProtoMessage() {}

func (x *VehicleADASEBA) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleADASEBA.ProtoReflect.Descriptor instead.
func (*VehicleADASEBA) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{236}
}

func (x *VehicleADASEBA) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *VehicleADASEBA) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

func (x *VehicleADASEBA) GetIsEngaged() bool {
	if x != nil {
		return x.IsEngaged
	}
	return false
}

type VehicleADASDMS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEnabled bool `protobuf:"varint,1,opt,name=IsEnabled,proto3" json:"IsEnabled,omitempty"`
	IsWarning bool `protobuf:"varint,2,opt,name=IsWarning,proto3" json:"IsWarning,omitempty"`
	IsError   bool `protobuf:"varint,3,opt,name=IsError,proto3" json:"IsError,omitempty"`
}

func (x *VehicleADASDMS) Reset() {
	*x = VehicleADASDMS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleADASDMS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleADASDMS) ProtoMessage() {}

func (x *VehicleADASDMS) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleADASDMS.ProtoReflect.Descriptor instead.
func (*VehicleADASDMS) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{237}
}

func (x *VehicleADASDMS) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *VehicleADASDMS) GetIsWarning() bool {
	if x != nil {
		return x.IsWarning
	}
	return false
}

func (x *VehicleADASDMS) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

type VehicleChassis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wheelbase     uint32                       `protobuf:"varint,1,opt,name=Wheelbase,proto3" json:"Wheelbase,omitempty"`
	Axle          *VehicleChassisAxle          `protobuf:"bytes,2,opt,name=Axle,proto3" json:"Axle,omitempty"`
	AxleCount     uint32                       `protobuf:"varint,3,opt,name=AxleCount,proto3" json:"AxleCount,omitempty"`
	ParkingBrake  *VehicleChassisParkingBrake  `protobuf:"bytes,4,opt,name=ParkingBrake,proto3" json:"ParkingBrake,omitempty"`
	SteeringWheel *VehicleChassisSteeringWheel `protobuf:"bytes,5,opt,name=SteeringWheel,proto3" json:"SteeringWheel,omitempty"`
	Accelerator   *VehicleChassisAccelerator   `protobuf:"bytes,6,opt,name=Accelerator,proto3" json:"Accelerator,omitempty"`
	Brake         *VehicleChassisBrake         `protobuf:"bytes,7,opt,name=Brake,proto3" json:"Brake,omitempty"`
}

func (x *VehicleChassis) Reset() {
	*x = VehicleChassis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassis) ProtoMessage() {}

func (x *VehicleChassis) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassis.ProtoReflect.Descriptor instead.
func (*VehicleChassis) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{238}
}

func (x *VehicleChassis) GetWheelbase() uint32 {
	if x != nil {
		return x.Wheelbase
	}
	return 0
}

func (x *VehicleChassis) GetAxle() *VehicleChassisAxle {
	if x != nil {
		return x.Axle
	}
	return nil
}

func (x *VehicleChassis) GetAxleCount() uint32 {
	if x != nil {
		return x.AxleCount
	}
	return 0
}

func (x *VehicleChassis) GetParkingBrake() *VehicleChassisParkingBrake {
	if x != nil {
		return x.ParkingBrake
	}
	return nil
}

func (x *VehicleChassis) GetSteeringWheel() *VehicleChassisSteeringWheel {
	if x != nil {
		return x.SteeringWheel
	}
	return nil
}

func (x *VehicleChassis) GetAccelerator() *VehicleChassisAccelerator {
	if x != nil {
		return x.Accelerator
	}
	return nil
}

func (x *VehicleChassis) GetBrake() *VehicleChassisBrake {
	if x != nil {
		return x.Brake
	}
	return nil
}

type VehicleChassisAxle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row1 *VehicleChassisAxleRow1 `protobuf:"bytes,1,opt,name=Row1,proto3" json:"Row1,omitempty"`
	Row2 *VehicleChassisAxleRow2 `protobuf:"bytes,2,opt,name=Row2,proto3" json:"Row2,omitempty"`
}

func (x *VehicleChassisAxle) Reset() {
	*x = VehicleChassisAxle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxle) ProtoMessage() {}

func (x *VehicleChassisAxle) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxle.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxle) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{239}
}

func (x *VehicleChassisAxle) GetRow1() *VehicleChassisAxleRow1 {
	if x != nil {
		return x.Row1
	}
	return nil
}

func (x *VehicleChassisAxle) GetRow2() *VehicleChassisAxleRow2 {
	if x != nil {
		return x.Row2
	}
	return nil
}

type VehicleChassisAxleRow1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TreadWidth      uint32                       `protobuf:"varint,1,opt,name=TreadWidth,proto3" json:"TreadWidth,omitempty"`
	TrackWidth      uint32                       `protobuf:"varint,2,opt,name=TrackWidth,proto3" json:"TrackWidth,omitempty"`
	AxleWidth       uint32                       `protobuf:"varint,3,opt,name=AxleWidth,proto3" json:"AxleWidth,omitempty"`
	WheelCount      uint32                       `protobuf:"varint,4,opt,name=WheelCount,proto3" json:"WheelCount,omitempty"`
	WheelDiameter   float32                      `protobuf:"fixed32,5,opt,name=WheelDiameter,proto3" json:"WheelDiameter,omitempty"`
	WheelWidth      float32                      `protobuf:"fixed32,6,opt,name=WheelWidth,proto3" json:"WheelWidth,omitempty"`
	SteeringAngle   float32                      `protobuf:"fixed32,7,opt,name=SteeringAngle,proto3" json:"SteeringAngle,omitempty"`
	TireDiameter    float32                      `protobuf:"fixed32,8,opt,name=TireDiameter,proto3" json:"TireDiameter,omitempty"`
	TireWidth       uint32                       `protobuf:"varint,9,opt,name=TireWidth,proto3" json:"TireWidth,omitempty"`
	TireAspectRatio uint32                       `protobuf:"varint,10,opt,name=TireAspectRatio,proto3" json:"TireAspectRatio,omitempty"`
	Wheel           *VehicleChassisAxleRow1Wheel `protobuf:"bytes,11,opt,name=Wheel,proto3" json:"Wheel,omitempty"`
}

func (x *VehicleChassisAxleRow1) Reset() {
	*x = VehicleChassisAxleRow1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow1) ProtoMessage() {}

func (x *VehicleChassisAxleRow1) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow1.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow1) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{240}
}

func (x *VehicleChassisAxleRow1) GetTreadWidth() uint32 {
	if x != nil {
		return x.TreadWidth
	}
	return 0
}

func (x *VehicleChassisAxleRow1) GetTrackWidth() uint32 {
	if x != nil {
		return x.TrackWidth
	}
	return 0
}

func (x *VehicleChassisAxleRow1) GetAxleWidth() uint32 {
	if x != nil {
		return x.AxleWidth
	}
	return 0
}

func (x *VehicleChassisAxleRow1) GetWheelCount() uint32 {
	if x != nil {
		return x.WheelCount
	}
	return 0
}

func (x *VehicleChassisAxleRow1) GetWheelDiameter() float32 {
	if x != nil {
		return x.WheelDiameter
	}
	return 0
}

func (x *VehicleChassisAxleRow1) GetWheelWidth() float32 {
	if x != nil {
		return x.WheelWidth
	}
	return 0
}

func (x *VehicleChassisAxleRow1) GetSteeringAngle() float32 {
	if x != nil {
		return x.SteeringAngle
	}
	return 0
}

func (x *VehicleChassisAxleRow1) GetTireDiameter() float32 {
	if x != nil {
		return x.TireDiameter
	}
	return 0
}

func (x *VehicleChassisAxleRow1) GetTireWidth() uint32 {
	if x != nil {
		return x.TireWidth
	}
	return 0
}

func (x *VehicleChassisAxleRow1) GetTireAspectRatio() uint32 {
	if x != nil {
		return x.TireAspectRatio
	}
	return 0
}

func (x *VehicleChassisAxleRow1) GetWheel() *VehicleChassisAxleRow1Wheel {
	if x != nil {
		return x.Wheel
	}
	return nil
}

type VehicleChassisAxleRow1Wheel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left  *VehicleChassisAxleRow1WheelLeft  `protobuf:"bytes,1,opt,name=Left,proto3" json:"Left,omitempty"`
	Right *VehicleChassisAxleRow1WheelRight `protobuf:"bytes,2,opt,name=Right,proto3" json:"Right,omitempty"`
}

func (x *VehicleChassisAxleRow1Wheel) Reset() {
	*x = VehicleChassisAxleRow1Wheel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow1Wheel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow1Wheel) ProtoMessage() {}

func (x *VehicleChassisAxleRow1Wheel) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow1Wheel.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow1Wheel) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{241}
}

func (x *VehicleChassisAxleRow1Wheel) GetLeft() *VehicleChassisAxleRow1WheelLeft {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *VehicleChassisAxleRow1Wheel) GetRight() *VehicleChassisAxleRow1WheelRight {
	if x != nil {
		return x.Right
	}
	return nil
}

type VehicleChassisAxleRow1WheelLeft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brake *VehicleChassisAxleRow1WheelLeftBrake `protobuf:"bytes,1,opt,name=Brake,proto3" json:"Brake,omitempty"`
	Tire  *VehicleChassisAxleRow1WheelLeftTire  `protobuf:"bytes,2,opt,name=Tire,proto3" json:"Tire,omitempty"`
	Speed float32                               `protobuf:"fixed32,3,opt,name=Speed,proto3" json:"Speed,omitempty"`
}

func (x *VehicleChassisAxleRow1WheelLeft) Reset() {
	*x = VehicleChassisAxleRow1WheelLeft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow1WheelLeft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow1WheelLeft) ProtoMessage() {}

func (x *VehicleChassisAxleRow1WheelLeft) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow1WheelLeft.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow1WheelLeft) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{242}
}

func (x *VehicleChassisAxleRow1WheelLeft) GetBrake() *VehicleChassisAxleRow1WheelLeftBrake {
	if x != nil {
		return x.Brake
	}
	return nil
}

func (x *VehicleChassisAxleRow1WheelLeft) GetTire() *VehicleChassisAxleRow1WheelLeftTire {
	if x != nil {
		return x.Tire
	}
	return nil
}

func (x *VehicleChassisAxleRow1WheelLeft) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type VehicleChassisAxleRow1WheelLeftBrake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FluidLevel      uint32 `protobuf:"varint,1,opt,name=FluidLevel,proto3" json:"FluidLevel,omitempty"`
	IsFluidLevelLow bool   `protobuf:"varint,2,opt,name=IsFluidLevelLow,proto3" json:"IsFluidLevelLow,omitempty"`
	PadWear         uint32 `protobuf:"varint,3,opt,name=PadWear,proto3" json:"PadWear,omitempty"`
	IsBrakesWorn    bool   `protobuf:"varint,4,opt,name=IsBrakesWorn,proto3" json:"IsBrakesWorn,omitempty"`
}

func (x *VehicleChassisAxleRow1WheelLeftBrake) Reset() {
	*x = VehicleChassisAxleRow1WheelLeftBrake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow1WheelLeftBrake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow1WheelLeftBrake) ProtoMessage() {}

func (x *VehicleChassisAxleRow1WheelLeftBrake) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow1WheelLeftBrake.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow1WheelLeftBrake) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{243}
}

func (x *VehicleChassisAxleRow1WheelLeftBrake) GetFluidLevel() uint32 {
	if x != nil {
		return x.FluidLevel
	}
	return 0
}

func (x *VehicleChassisAxleRow1WheelLeftBrake) GetIsFluidLevelLow() bool {
	if x != nil {
		return x.IsFluidLevelLow
	}
	return false
}

func (x *VehicleChassisAxleRow1WheelLeftBrake) GetPadWear() uint32 {
	if x != nil {
		return x.PadWear
	}
	return 0
}

func (x *VehicleChassisAxleRow1WheelLeftBrake) GetIsBrakesWorn() bool {
	if x != nil {
		return x.IsBrakesWorn
	}
	return false
}

type VehicleChassisAxleRow1WheelLeftTire struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pressure      uint32  `protobuf:"varint,1,opt,name=Pressure,proto3" json:"Pressure,omitempty"`
	IsPressureLow bool    `protobuf:"varint,2,opt,name=IsPressureLow,proto3" json:"IsPressureLow,omitempty"`
	Temperature   float32 `protobuf:"fixed32,3,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
}

func (x *VehicleChassisAxleRow1WheelLeftTire) Reset() {
	*x = VehicleChassisAxleRow1WheelLeftTire{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow1WheelLeftTire) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow1WheelLeftTire) ProtoMessage() {}

func (x *VehicleChassisAxleRow1WheelLeftTire) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow1WheelLeftTire.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow1WheelLeftTire) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{244}
}

func (x *VehicleChassisAxleRow1WheelLeftTire) GetPressure() uint32 {
	if x != nil {
		return x.Pressure
	}
	return 0
}

func (x *VehicleChassisAxleRow1WheelLeftTire) GetIsPressureLow() bool {
	if x != nil {
		return x.IsPressureLow
	}
	return false
}

func (x *VehicleChassisAxleRow1WheelLeftTire) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

type VehicleChassisAxleRow1WheelRight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brake *VehicleChassisAxleRow1WheelRightBrake `protobuf:"bytes,1,opt,name=Brake,proto3" json:"Brake,omitempty"`
	Tire  *VehicleChassisAxleRow1WheelRightTire  `protobuf:"bytes,2,opt,name=Tire,proto3" json:"Tire,omitempty"`
	Speed float32                                `protobuf:"fixed32,3,opt,name=Speed,proto3" json:"Speed,omitempty"`
}

func (x *VehicleChassisAxleRow1WheelRight) Reset() {
	*x = VehicleChassisAxleRow1WheelRight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow1WheelRight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow1WheelRight) ProtoMessage() {}

func (x *VehicleChassisAxleRow1WheelRight) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow1WheelRight.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow1WheelRight) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{245}
}

func (x *VehicleChassisAxleRow1WheelRight) GetBrake() *VehicleChassisAxleRow1WheelRightBrake {
	if x != nil {
		return x.Brake
	}
	return nil
}

func (x *VehicleChassisAxleRow1WheelRight) GetTire() *VehicleChassisAxleRow1WheelRightTire {
	if x != nil {
		return x.Tire
	}
	return nil
}

func (x *VehicleChassisAxleRow1WheelRight) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type VehicleChassisAxleRow1WheelRightBrake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FluidLevel      uint32 `protobuf:"varint,1,opt,name=FluidLevel,proto3" json:"FluidLevel,omitempty"`
	IsFluidLevelLow bool   `protobuf:"varint,2,opt,name=IsFluidLevelLow,proto3" json:"IsFluidLevelLow,omitempty"`
	PadWear         uint32 `protobuf:"varint,3,opt,name=PadWear,proto3" json:"PadWear,omitempty"`
	IsBrakesWorn    bool   `protobuf:"varint,4,opt,name=IsBrakesWorn,proto3" json:"IsBrakesWorn,omitempty"`
}

func (x *VehicleChassisAxleRow1WheelRightBrake) Reset() {
	*x = VehicleChassisAxleRow1WheelRightBrake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow1WheelRightBrake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow1WheelRightBrake) ProtoMessage() {}

func (x *VehicleChassisAxleRow1WheelRightBrake) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow1WheelRightBrake.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow1WheelRightBrake) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{246}
}

func (x *VehicleChassisAxleRow1WheelRightBrake) GetFluidLevel() uint32 {
	if x != nil {
		return x.FluidLevel
	}
	return 0
}

func (x *VehicleChassisAxleRow1WheelRightBrake) GetIsFluidLevelLow() bool {
	if x != nil {
		return x.IsFluidLevelLow
	}
	return false
}

func (x *VehicleChassisAxleRow1WheelRightBrake) GetPadWear() uint32 {
	if x != nil {
		return x.PadWear
	}
	return 0
}

func (x *VehicleChassisAxleRow1WheelRightBrake) GetIsBrakesWorn() bool {
	if x != nil {
		return x.IsBrakesWorn
	}
	return false
}

type VehicleChassisAxleRow1WheelRightTire struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pressure      uint32  `protobuf:"varint,1,opt,name=Pressure,proto3" json:"Pressure,omitempty"`
	IsPressureLow bool    `protobuf:"varint,2,opt,name=IsPressureLow,proto3" json:"IsPressureLow,omitempty"`
	Temperature   float32 `protobuf:"fixed32,3,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
}

func (x *VehicleChassisAxleRow1WheelRightTire) Reset() {
	*x = VehicleChassisAxleRow1WheelRightTire{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow1WheelRightTire) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow1WheelRightTire) ProtoMessage() {}

func (x *VehicleChassisAxleRow1WheelRightTire) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow1WheelRightTire.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow1WheelRightTire) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{247}
}

func (x *VehicleChassisAxleRow1WheelRightTire) GetPressure() uint32 {
	if x != nil {
		return x.Pressure
	}
	return 0
}

func (x *VehicleChassisAxleRow1WheelRightTire) GetIsPressureLow() bool {
	if x != nil {
		return x.IsPressureLow
	}
	return false
}

func (x *VehicleChassisAxleRow1WheelRightTire) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

type VehicleChassisAxleRow2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TreadWidth      uint32                       `protobuf:"varint,1,opt,name=TreadWidth,proto3" json:"TreadWidth,omitempty"`
	TrackWidth      uint32                       `protobuf:"varint,2,opt,name=TrackWidth,proto3" json:"TrackWidth,omitempty"`
	AxleWidth       uint32                       `protobuf:"varint,3,opt,name=AxleWidth,proto3" json:"AxleWidth,omitempty"`
	WheelCount      uint32                       `protobuf:"varint,4,opt,name=WheelCount,proto3" json:"WheelCount,omitempty"`
	WheelDiameter   float32                      `protobuf:"fixed32,5,opt,name=WheelDiameter,proto3" json:"WheelDiameter,omitempty"`
	WheelWidth      float32                      `protobuf:"fixed32,6,opt,name=WheelWidth,proto3" json:"WheelWidth,omitempty"`
	SteeringAngle   float32                      `protobuf:"fixed32,7,opt,name=SteeringAngle,proto3" json:"SteeringAngle,omitempty"`
	TireDiameter    float32                      `protobuf:"fixed32,8,opt,name=TireDiameter,proto3" json:"TireDiameter,omitempty"`
	TireWidth       uint32                       `protobuf:"varint,9,opt,name=TireWidth,proto3" json:"TireWidth,omitempty"`
	TireAspectRatio uint32                       `protobuf:"varint,10,opt,name=TireAspectRatio,proto3" json:"TireAspectRatio,omitempty"`
	Wheel           *VehicleChassisAxleRow2Wheel `protobuf:"bytes,11,opt,name=Wheel,proto3" json:"Wheel,omitempty"`
}

func (x *VehicleChassisAxleRow2) Reset() {
	*x = VehicleChassisAxleRow2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow2) ProtoMessage() {}

func (x *VehicleChassisAxleRow2) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow2.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow2) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{248}
}

func (x *VehicleChassisAxleRow2) GetTreadWidth() uint32 {
	if x != nil {
		return x.TreadWidth
	}
	return 0
}

func (x *VehicleChassisAxleRow2) GetTrackWidth() uint32 {
	if x != nil {
		return x.TrackWidth
	}
	return 0
}

func (x *VehicleChassisAxleRow2) GetAxleWidth() uint32 {
	if x != nil {
		return x.AxleWidth
	}
	return 0
}

func (x *VehicleChassisAxleRow2) GetWheelCount() uint32 {
	if x != nil {
		return x.WheelCount
	}
	return 0
}

func (x *VehicleChassisAxleRow2) GetWheelDiameter() float32 {
	if x != nil {
		return x.WheelDiameter
	}
	return 0
}

func (x *VehicleChassisAxleRow2) GetWheelWidth() float32 {
	if x != nil {
		return x.WheelWidth
	}
	return 0
}

func (x *VehicleChassisAxleRow2) GetSteeringAngle() float32 {
	if x != nil {
		return x.SteeringAngle
	}
	return 0
}

func (x *VehicleChassisAxleRow2) GetTireDiameter() float32 {
	if x != nil {
		return x.TireDiameter
	}
	return 0
}

func (x *VehicleChassisAxleRow2) GetTireWidth() uint32 {
	if x != nil {
		return x.TireWidth
	}
	return 0
}

func (x *VehicleChassisAxleRow2) GetTireAspectRatio() uint32 {
	if x != nil {
		return x.TireAspectRatio
	}
	return 0
}

func (x *VehicleChassisAxleRow2) GetWheel() *VehicleChassisAxleRow2Wheel {
	if x != nil {
		return x.Wheel
	}
	return nil
}

type VehicleChassisAxleRow2Wheel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left  *VehicleChassisAxleRow2WheelLeft  `protobuf:"bytes,1,opt,name=Left,proto3" json:"Left,omitempty"`
	Right *VehicleChassisAxleRow2WheelRight `protobuf:"bytes,2,opt,name=Right,proto3" json:"Right,omitempty"`
}

func (x *VehicleChassisAxleRow2Wheel) Reset() {
	*x = VehicleChassisAxleRow2Wheel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow2Wheel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow2Wheel) ProtoMessage() {}

func (x *VehicleChassisAxleRow2Wheel) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow2Wheel.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow2Wheel) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{249}
}

func (x *VehicleChassisAxleRow2Wheel) GetLeft() *VehicleChassisAxleRow2WheelLeft {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *VehicleChassisAxleRow2Wheel) GetRight() *VehicleChassisAxleRow2WheelRight {
	if x != nil {
		return x.Right
	}
	return nil
}

type VehicleChassisAxleRow2WheelLeft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brake *VehicleChassisAxleRow2WheelLeftBrake `protobuf:"bytes,1,opt,name=Brake,proto3" json:"Brake,omitempty"`
	Tire  *VehicleChassisAxleRow2WheelLeftTire  `protobuf:"bytes,2,opt,name=Tire,proto3" json:"Tire,omitempty"`
	Speed float32                               `protobuf:"fixed32,3,opt,name=Speed,proto3" json:"Speed,omitempty"`
}

func (x *VehicleChassisAxleRow2WheelLeft) Reset() {
	*x = VehicleChassisAxleRow2WheelLeft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow2WheelLeft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow2WheelLeft) ProtoMessage() {}

func (x *VehicleChassisAxleRow2WheelLeft) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow2WheelLeft.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow2WheelLeft) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{250}
}

func (x *VehicleChassisAxleRow2WheelLeft) GetBrake() *VehicleChassisAxleRow2WheelLeftBrake {
	if x != nil {
		return x.Brake
	}
	return nil
}

func (x *VehicleChassisAxleRow2WheelLeft) GetTire() *VehicleChassisAxleRow2WheelLeftTire {
	if x != nil {
		return x.Tire
	}
	return nil
}

func (x *VehicleChassisAxleRow2WheelLeft) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type VehicleChassisAxleRow2WheelLeftBrake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FluidLevel      uint32 `protobuf:"varint,1,opt,name=FluidLevel,proto3" json:"FluidLevel,omitempty"`
	IsFluidLevelLow bool   `protobuf:"varint,2,opt,name=IsFluidLevelLow,proto3" json:"IsFluidLevelLow,omitempty"`
	PadWear         uint32 `protobuf:"varint,3,opt,name=PadWear,proto3" json:"PadWear,omitempty"`
	IsBrakesWorn    bool   `protobuf:"varint,4,opt,name=IsBrakesWorn,proto3" json:"IsBrakesWorn,omitempty"`
}

func (x *VehicleChassisAxleRow2WheelLeftBrake) Reset() {
	*x = VehicleChassisAxleRow2WheelLeftBrake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow2WheelLeftBrake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow2WheelLeftBrake) ProtoMessage() {}

func (x *VehicleChassisAxleRow2WheelLeftBrake) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow2WheelLeftBrake.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow2WheelLeftBrake) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{251}
}

func (x *VehicleChassisAxleRow2WheelLeftBrake) GetFluidLevel() uint32 {
	if x != nil {
		return x.FluidLevel
	}
	return 0
}

func (x *VehicleChassisAxleRow2WheelLeftBrake) GetIsFluidLevelLow() bool {
	if x != nil {
		return x.IsFluidLevelLow
	}
	return false
}

func (x *VehicleChassisAxleRow2WheelLeftBrake) GetPadWear() uint32 {
	if x != nil {
		return x.PadWear
	}
	return 0
}

func (x *VehicleChassisAxleRow2WheelLeftBrake) GetIsBrakesWorn() bool {
	if x != nil {
		return x.IsBrakesWorn
	}
	return false
}

type VehicleChassisAxleRow2WheelLeftTire struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pressure      uint32  `protobuf:"varint,1,opt,name=Pressure,proto3" json:"Pressure,omitempty"`
	IsPressureLow bool    `protobuf:"varint,2,opt,name=IsPressureLow,proto3" json:"IsPressureLow,omitempty"`
	Temperature   float32 `protobuf:"fixed32,3,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
}

func (x *VehicleChassisAxleRow2WheelLeftTire) Reset() {
	*x = VehicleChassisAxleRow2WheelLeftTire{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow2WheelLeftTire) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow2WheelLeftTire) ProtoMessage() {}

func (x *VehicleChassisAxleRow2WheelLeftTire) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow2WheelLeftTire.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow2WheelLeftTire) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{252}
}

func (x *VehicleChassisAxleRow2WheelLeftTire) GetPressure() uint32 {
	if x != nil {
		return x.Pressure
	}
	return 0
}

func (x *VehicleChassisAxleRow2WheelLeftTire) GetIsPressureLow() bool {
	if x != nil {
		return x.IsPressureLow
	}
	return false
}

func (x *VehicleChassisAxleRow2WheelLeftTire) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

type VehicleChassisAxleRow2WheelRight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brake *VehicleChassisAxleRow2WheelRightBrake `protobuf:"bytes,1,opt,name=Brake,proto3" json:"Brake,omitempty"`
	Tire  *VehicleChassisAxleRow2WheelRightTire  `protobuf:"bytes,2,opt,name=Tire,proto3" json:"Tire,omitempty"`
	Speed float32                                `protobuf:"fixed32,3,opt,name=Speed,proto3" json:"Speed,omitempty"`
}

func (x *VehicleChassisAxleRow2WheelRight) Reset() {
	*x = VehicleChassisAxleRow2WheelRight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow2WheelRight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow2WheelRight) ProtoMessage() {}

func (x *VehicleChassisAxleRow2WheelRight) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow2WheelRight.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow2WheelRight) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{253}
}

func (x *VehicleChassisAxleRow2WheelRight) GetBrake() *VehicleChassisAxleRow2WheelRightBrake {
	if x != nil {
		return x.Brake
	}
	return nil
}

func (x *VehicleChassisAxleRow2WheelRight) GetTire() *VehicleChassisAxleRow2WheelRightTire {
	if x != nil {
		return x.Tire
	}
	return nil
}

func (x *VehicleChassisAxleRow2WheelRight) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type VehicleChassisAxleRow2WheelRightBrake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FluidLevel      uint32 `protobuf:"varint,1,opt,name=FluidLevel,proto3" json:"FluidLevel,omitempty"`
	IsFluidLevelLow bool   `protobuf:"varint,2,opt,name=IsFluidLevelLow,proto3" json:"IsFluidLevelLow,omitempty"`
	PadWear         uint32 `protobuf:"varint,3,opt,name=PadWear,proto3" json:"PadWear,omitempty"`
	IsBrakesWorn    bool   `protobuf:"varint,4,opt,name=IsBrakesWorn,proto3" json:"IsBrakesWorn,omitempty"`
}

func (x *VehicleChassisAxleRow2WheelRightBrake) Reset() {
	*x = VehicleChassisAxleRow2WheelRightBrake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow2WheelRightBrake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow2WheelRightBrake) ProtoMessage() {}

func (x *VehicleChassisAxleRow2WheelRightBrake) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow2WheelRightBrake.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow2WheelRightBrake) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{254}
}

func (x *VehicleChassisAxleRow2WheelRightBrake) GetFluidLevel() uint32 {
	if x != nil {
		return x.FluidLevel
	}
	return 0
}

func (x *VehicleChassisAxleRow2WheelRightBrake) GetIsFluidLevelLow() bool {
	if x != nil {
		return x.IsFluidLevelLow
	}
	return false
}

func (x *VehicleChassisAxleRow2WheelRightBrake) GetPadWear() uint32 {
	if x != nil {
		return x.PadWear
	}
	return 0
}

func (x *VehicleChassisAxleRow2WheelRightBrake) GetIsBrakesWorn() bool {
	if x != nil {
		return x.IsBrakesWorn
	}
	return false
}

type VehicleChassisAxleRow2WheelRightTire struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pressure      uint32  `protobuf:"varint,1,opt,name=Pressure,proto3" json:"Pressure,omitempty"`
	IsPressureLow bool    `protobuf:"varint,2,opt,name=IsPressureLow,proto3" json:"IsPressureLow,omitempty"`
	Temperature   float32 `protobuf:"fixed32,3,opt,name=Temperature,proto3" json:"Temperature,omitempty"`
}

func (x *VehicleChassisAxleRow2WheelRightTire) Reset() {
	*x = VehicleChassisAxleRow2WheelRightTire{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAxleRow2WheelRightTire) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAxleRow2WheelRightTire) ProtoMessage() {}

func (x *VehicleChassisAxleRow2WheelRightTire) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAxleRow2WheelRightTire.ProtoReflect.Descriptor instead.
func (*VehicleChassisAxleRow2WheelRightTire) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{255}
}

func (x *VehicleChassisAxleRow2WheelRightTire) GetPressure() uint32 {
	if x != nil {
		return x.Pressure
	}
	return 0
}

func (x *VehicleChassisAxleRow2WheelRightTire) GetIsPressureLow() bool {
	if x != nil {
		return x.IsPressureLow
	}
	return false
}

func (x *VehicleChassisAxleRow2WheelRightTire) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

type VehicleChassisParkingBrake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEngaged          bool `protobuf:"varint,1,opt,name=IsEngaged,proto3" json:"IsEngaged,omitempty"`
	IsAutoApplyEnabled bool `protobuf:"varint,2,opt,name=IsAutoApplyEnabled,proto3" json:"IsAutoApplyEnabled,omitempty"`
}

func (x *VehicleChassisParkingBrake) Reset() {
	*x = VehicleChassisParkingBrake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisParkingBrake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisParkingBrake) ProtoMessage() {}

func (x *VehicleChassisParkingBrake) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisParkingBrake.ProtoReflect.Descriptor instead.
func (*VehicleChassisParkingBrake) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{256}
}

func (x *VehicleChassisParkingBrake) GetIsEngaged() bool {
	if x != nil {
		return x.IsEngaged
	}
	return false
}

func (x *VehicleChassisParkingBrake) GetIsAutoApplyEnabled() bool {
	if x != nil {
		return x.IsAutoApplyEnabled
	}
	return false
}

type VehicleChassisSteeringWheel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Angle          int32  `protobuf:"varint,1,opt,name=Angle,proto3" json:"Angle,omitempty"`
	Tilt           uint32 `protobuf:"varint,2,opt,name=Tilt,proto3" json:"Tilt,omitempty"`
	Extension      uint32 `protobuf:"varint,3,opt,name=Extension,proto3" json:"Extension,omitempty"`
	HeatingCooling int32  `protobuf:"varint,4,opt,name=HeatingCooling,proto3" json:"HeatingCooling,omitempty"`
}

func (x *VehicleChassisSteeringWheel) Reset() {
	*x = VehicleChassisSteeringWheel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisSteeringWheel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisSteeringWheel) ProtoMessage() {}

func (x *VehicleChassisSteeringWheel) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisSteeringWheel.ProtoReflect.Descriptor instead.
func (*VehicleChassisSteeringWheel) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{257}
}

func (x *VehicleChassisSteeringWheel) GetAngle() int32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *VehicleChassisSteeringWheel) GetTilt() uint32 {
	if x != nil {
		return x.Tilt
	}
	return 0
}

func (x *VehicleChassisSteeringWheel) GetExtension() uint32 {
	if x != nil {
		return x.Extension
	}
	return 0
}

func (x *VehicleChassisSteeringWheel) GetHeatingCooling() int32 {
	if x != nil {
		return x.HeatingCooling
	}
	return 0
}

type VehicleChassisAccelerator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PedalPosition uint32 `protobuf:"varint,1,opt,name=PedalPosition,proto3" json:"PedalPosition,omitempty"`
}

func (x *VehicleChassisAccelerator) Reset() {
	*x = VehicleChassisAccelerator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisAccelerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisAccelerator) ProtoMessage() {}

func (x *VehicleChassisAccelerator) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisAccelerator.ProtoReflect.Descriptor instead.
func (*VehicleChassisAccelerator) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{258}
}

func (x *VehicleChassisAccelerator) GetPedalPosition() uint32 {
	if x != nil {
		return x.PedalPosition
	}
	return 0
}

type VehicleChassisBrake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PedalPosition                    uint32 `protobuf:"varint,1,opt,name=PedalPosition,proto3" json:"PedalPosition,omitempty"`
	IsDriverEmergencyBrakingDetected bool   `protobuf:"varint,2,opt,name=IsDriverEmergencyBrakingDetected,proto3" json:"IsDriverEmergencyBrakingDetected,omitempty"`
}

func (x *VehicleChassisBrake) Reset() {
	*x = VehicleChassisBrake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleChassisBrake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleChassisBrake) ProtoMessage() {}

func (x *VehicleChassisBrake) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleChassisBrake.ProtoReflect.Descriptor instead.
func (*VehicleChassisBrake) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{259}
}

func (x *VehicleChassisBrake) GetPedalPosition() uint32 {
	if x != nil {
		return x.PedalPosition
	}
	return 0
}

func (x *VehicleChassisBrake) GetIsDriverEmergencyBrakingDetected() bool {
	if x != nil {
		return x.IsDriverEmergencyBrakingDetected
	}
	return false
}

type VehicleOBD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PidsA                       []string                    `protobuf:"bytes,1,rep,name=PidsA,proto3" json:"PidsA,omitempty"`
	PidsB                       []string                    `protobuf:"bytes,2,rep,name=PidsB,proto3" json:"PidsB,omitempty"`
	PidsC                       []string                    `protobuf:"bytes,3,rep,name=PidsC,proto3" json:"PidsC,omitempty"`
	Status                      *VehicleOBDStatus           `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`
	DTCList                     []string                    `protobuf:"bytes,5,rep,name=DTCList,proto3" json:"DTCList,omitempty"`
	FreezeDTC                   string                      `protobuf:"bytes,6,opt,name=FreezeDTC,proto3" json:"FreezeDTC,omitempty"`
	FuelStatus                  string                      `protobuf:"bytes,7,opt,name=FuelStatus,proto3" json:"FuelStatus,omitempty"`
	EngineLoad                  float32                     `protobuf:"fixed32,8,opt,name=EngineLoad,proto3" json:"EngineLoad,omitempty"`
	CoolantTemperature          float32                     `protobuf:"fixed32,9,opt,name=CoolantTemperature,proto3" json:"CoolantTemperature,omitempty"`
	ShortTermFuelTrim1          float32                     `protobuf:"fixed32,10,opt,name=ShortTermFuelTrim1,proto3" json:"ShortTermFuelTrim1,omitempty"`
	LongTermFuelTrim1           float32                     `protobuf:"fixed32,11,opt,name=LongTermFuelTrim1,proto3" json:"LongTermFuelTrim1,omitempty"`
	ShortTermFuelTrim2          float32                     `protobuf:"fixed32,12,opt,name=ShortTermFuelTrim2,proto3" json:"ShortTermFuelTrim2,omitempty"`
	LongTermFuelTrim2           float32                     `protobuf:"fixed32,13,opt,name=LongTermFuelTrim2,proto3" json:"LongTermFuelTrim2,omitempty"`
	FuelPressure                float32                     `protobuf:"fixed32,14,opt,name=FuelPressure,proto3" json:"FuelPressure,omitempty"`
	MAP                         float32                     `protobuf:"fixed32,15,opt,name=MAP,proto3" json:"MAP,omitempty"`
	EngineSpeed                 float32                     `protobuf:"fixed32,16,opt,name=EngineSpeed,proto3" json:"EngineSpeed,omitempty"`
	Speed                       float32                     `protobuf:"fixed32,17,opt,name=Speed,proto3" json:"Speed,omitempty"`
	TimingAdvance               float32                     `protobuf:"fixed32,18,opt,name=TimingAdvance,proto3" json:"TimingAdvance,omitempty"`
	IntakeTemp                  float32                     `protobuf:"fixed32,19,opt,name=IntakeTemp,proto3" json:"IntakeTemp,omitempty"`
	MAF                         float32                     `protobuf:"fixed32,20,opt,name=MAF,proto3" json:"MAF,omitempty"`
	ThrottlePosition            float32                     `protobuf:"fixed32,21,opt,name=ThrottlePosition,proto3" json:"ThrottlePosition,omitempty"`
	AirStatus                   string                      `protobuf:"bytes,22,opt,name=AirStatus,proto3" json:"AirStatus,omitempty"`
	OxygenSensorsIn2Banks       uint32                      `protobuf:"varint,23,opt,name=OxygenSensorsIn2Banks,proto3" json:"OxygenSensorsIn2Banks,omitempty"`
	O2                          *VehicleOBDO2               `protobuf:"bytes,24,opt,name=O2,proto3" json:"O2,omitempty"`
	OBDStandards                uint32                      `protobuf:"varint,25,opt,name=OBDStandards,proto3" json:"OBDStandards,omitempty"`
	OxygenSensorsIn4Banks       uint32                      `protobuf:"varint,26,opt,name=OxygenSensorsIn4Banks,proto3" json:"OxygenSensorsIn4Banks,omitempty"`
	IsPTOActive                 bool                        `protobuf:"varint,27,opt,name=IsPTOActive,proto3" json:"IsPTOActive,omitempty"`
	RunTime                     float32                     `protobuf:"fixed32,28,opt,name=RunTime,proto3" json:"RunTime,omitempty"`
	DistanceWithMIL             float32                     `protobuf:"fixed32,29,opt,name=DistanceWithMIL,proto3" json:"DistanceWithMIL,omitempty"`
	FuelRailPressureVac         float32                     `protobuf:"fixed32,30,opt,name=FuelRailPressureVac,proto3" json:"FuelRailPressureVac,omitempty"`
	FuelRailPressureDirect      float32                     `protobuf:"fixed32,31,opt,name=FuelRailPressureDirect,proto3" json:"FuelRailPressureDirect,omitempty"`
	O2WR                        *VehicleOBDO2WR             `protobuf:"bytes,32,opt,name=O2WR,proto3" json:"O2WR,omitempty"`
	CommandedEGR                float32                     `protobuf:"fixed32,33,opt,name=CommandedEGR,proto3" json:"CommandedEGR,omitempty"`
	EGRError                    float32                     `protobuf:"fixed32,34,opt,name=EGRError,proto3" json:"EGRError,omitempty"`
	CommandedEVAP               float32                     `protobuf:"fixed32,35,opt,name=CommandedEVAP,proto3" json:"CommandedEVAP,omitempty"`
	FuelLevel                   float32                     `protobuf:"fixed32,36,opt,name=FuelLevel,proto3" json:"FuelLevel,omitempty"`
	WarmupsSinceDTCClear        uint32                      `protobuf:"varint,37,opt,name=WarmupsSinceDTCClear,proto3" json:"WarmupsSinceDTCClear,omitempty"`
	DistanceSinceDTCClear       float32                     `protobuf:"fixed32,38,opt,name=DistanceSinceDTCClear,proto3" json:"DistanceSinceDTCClear,omitempty"`
	EVAPVaporPressure           float32                     `protobuf:"fixed32,39,opt,name=EVAPVaporPressure,proto3" json:"EVAPVaporPressure,omitempty"`
	BarometricPressure          float32                     `protobuf:"fixed32,40,opt,name=BarometricPressure,proto3" json:"BarometricPressure,omitempty"`
	Catalyst                    *VehicleOBDCatalyst         `protobuf:"bytes,41,opt,name=Catalyst,proto3" json:"Catalyst,omitempty"`
	DriveCycleStatus            *VehicleOBDDriveCycleStatus `protobuf:"bytes,42,opt,name=DriveCycleStatus,proto3" json:"DriveCycleStatus,omitempty"`
	ControlModuleVoltage        float32                     `protobuf:"fixed32,43,opt,name=ControlModuleVoltage,proto3" json:"ControlModuleVoltage,omitempty"`
	AbsoluteLoad                float32                     `protobuf:"fixed32,44,opt,name=AbsoluteLoad,proto3" json:"AbsoluteLoad,omitempty"`
	CommandedEquivalenceRatio   float32                     `protobuf:"fixed32,45,opt,name=CommandedEquivalenceRatio,proto3" json:"CommandedEquivalenceRatio,omitempty"`
	RelativeThrottlePosition    float32                     `protobuf:"fixed32,46,opt,name=RelativeThrottlePosition,proto3" json:"RelativeThrottlePosition,omitempty"`
	AmbientAirTemperature       float32                     `protobuf:"fixed32,47,opt,name=AmbientAirTemperature,proto3" json:"AmbientAirTemperature,omitempty"`
	ThrottlePositionB           float32                     `protobuf:"fixed32,48,opt,name=ThrottlePositionB,proto3" json:"ThrottlePositionB,omitempty"`
	ThrottlePositionC           float32                     `protobuf:"fixed32,49,opt,name=ThrottlePositionC,proto3" json:"ThrottlePositionC,omitempty"`
	AcceleratorPositionD        float32                     `protobuf:"fixed32,50,opt,name=AcceleratorPositionD,proto3" json:"AcceleratorPositionD,omitempty"`
	AcceleratorPositionE        float32                     `protobuf:"fixed32,51,opt,name=AcceleratorPositionE,proto3" json:"AcceleratorPositionE,omitempty"`
	AcceleratorPositionF        float32                     `protobuf:"fixed32,52,opt,name=AcceleratorPositionF,proto3" json:"AcceleratorPositionF,omitempty"`
	ThrottleActuator            float32                     `protobuf:"fixed32,53,opt,name=ThrottleActuator,proto3" json:"ThrottleActuator,omitempty"`
	RunTimeMIL                  float32                     `protobuf:"fixed32,54,opt,name=RunTimeMIL,proto3" json:"RunTimeMIL,omitempty"`
	TimeSinceDTCCleared         float32                     `protobuf:"fixed32,55,opt,name=TimeSinceDTCCleared,proto3" json:"TimeSinceDTCCleared,omitempty"`
	MaxMAF                      float32                     `protobuf:"fixed32,56,opt,name=MaxMAF,proto3" json:"MaxMAF,omitempty"`
	FuelType                    uint32                      `protobuf:"varint,57,opt,name=FuelType,proto3" json:"FuelType,omitempty"`
	EthanolPercent              float32                     `protobuf:"fixed32,58,opt,name=EthanolPercent,proto3" json:"EthanolPercent,omitempty"`
	EVAPVaporPressureAbsolute   float32                     `protobuf:"fixed32,59,opt,name=EVAPVaporPressureAbsolute,proto3" json:"EVAPVaporPressureAbsolute,omitempty"`
	EVAPVaporPressureAlternate  float32                     `protobuf:"fixed32,60,opt,name=EVAPVaporPressureAlternate,proto3" json:"EVAPVaporPressureAlternate,omitempty"`
	ShortTermO2Trim1            float32                     `protobuf:"fixed32,61,opt,name=ShortTermO2Trim1,proto3" json:"ShortTermO2Trim1,omitempty"`
	ShortTermO2Trim3            float32                     `protobuf:"fixed32,62,opt,name=ShortTermO2Trim3,proto3" json:"ShortTermO2Trim3,omitempty"`
	LongTermO2Trim1             float32                     `protobuf:"fixed32,63,opt,name=LongTermO2Trim1,proto3" json:"LongTermO2Trim1,omitempty"`
	LongTermO2Trim3             float32                     `protobuf:"fixed32,64,opt,name=LongTermO2Trim3,proto3" json:"LongTermO2Trim3,omitempty"`
	ShortTermO2Trim2            float32                     `protobuf:"fixed32,65,opt,name=ShortTermO2Trim2,proto3" json:"ShortTermO2Trim2,omitempty"`
	ShortTermO2Trim4            float32                     `protobuf:"fixed32,66,opt,name=ShortTermO2Trim4,proto3" json:"ShortTermO2Trim4,omitempty"`
	LongTermO2Trim2             float32                     `protobuf:"fixed32,67,opt,name=LongTermO2Trim2,proto3" json:"LongTermO2Trim2,omitempty"`
	LongTermO2Trim4             float32                     `protobuf:"fixed32,68,opt,name=LongTermO2Trim4,proto3" json:"LongTermO2Trim4,omitempty"`
	FuelRailPressureAbsolute    float32                     `protobuf:"fixed32,69,opt,name=FuelRailPressureAbsolute,proto3" json:"FuelRailPressureAbsolute,omitempty"`
	RelativeAcceleratorPosition float32                     `protobuf:"fixed32,70,opt,name=RelativeAcceleratorPosition,proto3" json:"RelativeAcceleratorPosition,omitempty"`
	HybridBatteryRemaining      float32                     `protobuf:"fixed32,71,opt,name=HybridBatteryRemaining,proto3" json:"HybridBatteryRemaining,omitempty"`
	OilTemperature              float32                     `protobuf:"fixed32,72,opt,name=OilTemperature,proto3" json:"OilTemperature,omitempty"`
	FuelInjectionTiming         float32                     `protobuf:"fixed32,73,opt,name=FuelInjectionTiming,proto3" json:"FuelInjectionTiming,omitempty"`
	FuelRate                    float32                     `protobuf:"fixed32,74,opt,name=FuelRate,proto3" json:"FuelRate,omitempty"`
}

func (x *VehicleOBD) Reset() {
	*x = VehicleOBD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBD) ProtoMessage() {}

func (x *VehicleOBD) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBD.ProtoReflect.Descriptor instead.
func (*VehicleOBD) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{260}
}

func (x *VehicleOBD) GetPidsA() []string {
	if x != nil {
		return x.PidsA
	}
	return nil
}

func (x *VehicleOBD) GetPidsB() []string {
	if x != nil {
		return x.PidsB
	}
	return nil
}

func (x *VehicleOBD) GetPidsC() []string {
	if x != nil {
		return x.PidsC
	}
	return nil
}

func (x *VehicleOBD) GetStatus() *VehicleOBDStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *VehicleOBD) GetDTCList() []string {
	if x != nil {
		return x.DTCList
	}
	return nil
}

func (x *VehicleOBD) GetFreezeDTC() string {
	if x != nil {
		return x.FreezeDTC
	}
	return ""
}

func (x *VehicleOBD) GetFuelStatus() string {
	if x != nil {
		return x.FuelStatus
	}
	return ""
}

func (x *VehicleOBD) GetEngineLoad() float32 {
	if x != nil {
		return x.EngineLoad
	}
	return 0
}

func (x *VehicleOBD) GetCoolantTemperature() float32 {
	if x != nil {
		return x.CoolantTemperature
	}
	return 0
}

func (x *VehicleOBD) GetShortTermFuelTrim1() float32 {
	if x != nil {
		return x.ShortTermFuelTrim1
	}
	return 0
}

func (x *VehicleOBD) GetLongTermFuelTrim1() float32 {
	if x != nil {
		return x.LongTermFuelTrim1
	}
	return 0
}

func (x *VehicleOBD) GetShortTermFuelTrim2() float32 {
	if x != nil {
		return x.ShortTermFuelTrim2
	}
	return 0
}

func (x *VehicleOBD) GetLongTermFuelTrim2() float32 {
	if x != nil {
		return x.LongTermFuelTrim2
	}
	return 0
}

func (x *VehicleOBD) GetFuelPressure() float32 {
	if x != nil {
		return x.FuelPressure
	}
	return 0
}

func (x *VehicleOBD) GetMAP() float32 {
	if x != nil {
		return x.MAP
	}
	return 0
}

func (x *VehicleOBD) GetEngineSpeed() float32 {
	if x != nil {
		return x.EngineSpeed
	}
	return 0
}

func (x *VehicleOBD) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *VehicleOBD) GetTimingAdvance() float32 {
	if x != nil {
		return x.TimingAdvance
	}
	return 0
}

func (x *VehicleOBD) GetIntakeTemp() float32 {
	if x != nil {
		return x.IntakeTemp
	}
	return 0
}

func (x *VehicleOBD) GetMAF() float32 {
	if x != nil {
		return x.MAF
	}
	return 0
}

func (x *VehicleOBD) GetThrottlePosition() float32 {
	if x != nil {
		return x.ThrottlePosition
	}
	return 0
}

func (x *VehicleOBD) GetAirStatus() string {
	if x != nil {
		return x.AirStatus
	}
	return ""
}

func (x *VehicleOBD) GetOxygenSensorsIn2Banks() uint32 {
	if x != nil {
		return x.OxygenSensorsIn2Banks
	}
	return 0
}

func (x *VehicleOBD) GetO2() *VehicleOBDO2 {
	if x != nil {
		return x.O2
	}
	return nil
}

func (x *VehicleOBD) GetOBDStandards() uint32 {
	if x != nil {
		return x.OBDStandards
	}
	return 0
}

func (x *VehicleOBD) GetOxygenSensorsIn4Banks() uint32 {
	if x != nil {
		return x.OxygenSensorsIn4Banks
	}
	return 0
}

func (x *VehicleOBD) GetIsPTOActive() bool {
	if x != nil {
		return x.IsPTOActive
	}
	return false
}

func (x *VehicleOBD) GetRunTime() float32 {
	if x != nil {
		return x.RunTime
	}
	return 0
}

func (x *VehicleOBD) GetDistanceWithMIL() float32 {
	if x != nil {
		return x.DistanceWithMIL
	}
	return 0
}

func (x *VehicleOBD) GetFuelRailPressureVac() float32 {
	if x != nil {
		return x.FuelRailPressureVac
	}
	return 0
}

func (x *VehicleOBD) GetFuelRailPressureDirect() float32 {
	if x != nil {
		return x.FuelRailPressureDirect
	}
	return 0
}

func (x *VehicleOBD) GetO2WR() *VehicleOBDO2WR {
	if x != nil {
		return x.O2WR
	}
	return nil
}

func (x *VehicleOBD) GetCommandedEGR() float32 {
	if x != nil {
		return x.CommandedEGR
	}
	return 0
}

func (x *VehicleOBD) GetEGRError() float32 {
	if x != nil {
		return x.EGRError
	}
	return 0
}

func (x *VehicleOBD) GetCommandedEVAP() float32 {
	if x != nil {
		return x.CommandedEVAP
	}
	return 0
}

func (x *VehicleOBD) GetFuelLevel() float32 {
	if x != nil {
		return x.FuelLevel
	}
	return 0
}

func (x *VehicleOBD) GetWarmupsSinceDTCClear() uint32 {
	if x != nil {
		return x.WarmupsSinceDTCClear
	}
	return 0
}

func (x *VehicleOBD) GetDistanceSinceDTCClear() float32 {
	if x != nil {
		return x.DistanceSinceDTCClear
	}
	return 0
}

func (x *VehicleOBD) GetEVAPVaporPressure() float32 {
	if x != nil {
		return x.EVAPVaporPressure
	}
	return 0
}

func (x *VehicleOBD) GetBarometricPressure() float32 {
	if x != nil {
		return x.BarometricPressure
	}
	return 0
}

func (x *VehicleOBD) GetCatalyst() *VehicleOBDCatalyst {
	if x != nil {
		return x.Catalyst
	}
	return nil
}

func (x *VehicleOBD) GetDriveCycleStatus() *VehicleOBDDriveCycleStatus {
	if x != nil {
		return x.DriveCycleStatus
	}
	return nil
}

func (x *VehicleOBD) GetControlModuleVoltage() float32 {
	if x != nil {
		return x.ControlModuleVoltage
	}
	return 0
}

func (x *VehicleOBD) GetAbsoluteLoad() float32 {
	if x != nil {
		return x.AbsoluteLoad
	}
	return 0
}

func (x *VehicleOBD) GetCommandedEquivalenceRatio() float32 {
	if x != nil {
		return x.CommandedEquivalenceRatio
	}
	return 0
}

func (x *VehicleOBD) GetRelativeThrottlePosition() float32 {
	if x != nil {
		return x.RelativeThrottlePosition
	}
	return 0
}

func (x *VehicleOBD) GetAmbientAirTemperature() float32 {
	if x != nil {
		return x.AmbientAirTemperature
	}
	return 0
}

func (x *VehicleOBD) GetThrottlePositionB() float32 {
	if x != nil {
		return x.ThrottlePositionB
	}
	return 0
}

func (x *VehicleOBD) GetThrottlePositionC() float32 {
	if x != nil {
		return x.ThrottlePositionC
	}
	return 0
}

func (x *VehicleOBD) GetAcceleratorPositionD() float32 {
	if x != nil {
		return x.AcceleratorPositionD
	}
	return 0
}

func (x *VehicleOBD) GetAcceleratorPositionE() float32 {
	if x != nil {
		return x.AcceleratorPositionE
	}
	return 0
}

func (x *VehicleOBD) GetAcceleratorPositionF() float32 {
	if x != nil {
		return x.AcceleratorPositionF
	}
	return 0
}

func (x *VehicleOBD) GetThrottleActuator() float32 {
	if x != nil {
		return x.ThrottleActuator
	}
	return 0
}

func (x *VehicleOBD) GetRunTimeMIL() float32 {
	if x != nil {
		return x.RunTimeMIL
	}
	return 0
}

func (x *VehicleOBD) GetTimeSinceDTCCleared() float32 {
	if x != nil {
		return x.TimeSinceDTCCleared
	}
	return 0
}

func (x *VehicleOBD) GetMaxMAF() float32 {
	if x != nil {
		return x.MaxMAF
	}
	return 0
}

func (x *VehicleOBD) GetFuelType() uint32 {
	if x != nil {
		return x.FuelType
	}
	return 0
}

func (x *VehicleOBD) GetEthanolPercent() float32 {
	if x != nil {
		return x.EthanolPercent
	}
	return 0
}

func (x *VehicleOBD) GetEVAPVaporPressureAbsolute() float32 {
	if x != nil {
		return x.EVAPVaporPressureAbsolute
	}
	return 0
}

func (x *VehicleOBD) GetEVAPVaporPressureAlternate() float32 {
	if x != nil {
		return x.EVAPVaporPressureAlternate
	}
	return 0
}

func (x *VehicleOBD) GetShortTermO2Trim1() float32 {
	if x != nil {
		return x.ShortTermO2Trim1
	}
	return 0
}

func (x *VehicleOBD) GetShortTermO2Trim3() float32 {
	if x != nil {
		return x.ShortTermO2Trim3
	}
	return 0
}

func (x *VehicleOBD) GetLongTermO2Trim1() float32 {
	if x != nil {
		return x.LongTermO2Trim1
	}
	return 0
}

func (x *VehicleOBD) GetLongTermO2Trim3() float32 {
	if x != nil {
		return x.LongTermO2Trim3
	}
	return 0
}

func (x *VehicleOBD) GetShortTermO2Trim2() float32 {
	if x != nil {
		return x.ShortTermO2Trim2
	}
	return 0
}

func (x *VehicleOBD) GetShortTermO2Trim4() float32 {
	if x != nil {
		return x.ShortTermO2Trim4
	}
	return 0
}

func (x *VehicleOBD) GetLongTermO2Trim2() float32 {
	if x != nil {
		return x.LongTermO2Trim2
	}
	return 0
}

func (x *VehicleOBD) GetLongTermO2Trim4() float32 {
	if x != nil {
		return x.LongTermO2Trim4
	}
	return 0
}

func (x *VehicleOBD) GetFuelRailPressureAbsolute() float32 {
	if x != nil {
		return x.FuelRailPressureAbsolute
	}
	return 0
}

func (x *VehicleOBD) GetRelativeAcceleratorPosition() float32 {
	if x != nil {
		return x.RelativeAcceleratorPosition
	}
	return 0
}

func (x *VehicleOBD) GetHybridBatteryRemaining() float32 {
	if x != nil {
		return x.HybridBatteryRemaining
	}
	return 0
}

func (x *VehicleOBD) GetOilTemperature() float32 {
	if x != nil {
		return x.OilTemperature
	}
	return 0
}

func (x *VehicleOBD) GetFuelInjectionTiming() float32 {
	if x != nil {
		return x.FuelInjectionTiming
	}
	return 0
}

func (x *VehicleOBD) GetFuelRate() float32 {
	if x != nil {
		return x.FuelRate
	}
	return 0
}

type VehicleOBDStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMILOn      bool   `protobuf:"varint,1,opt,name=IsMILOn,proto3" json:"IsMILOn,omitempty"`
	DTCCount     uint32 `protobuf:"varint,2,opt,name=DTCCount,proto3" json:"DTCCount,omitempty"`
	IgnitionType string `protobuf:"bytes,3,opt,name=IgnitionType,proto3" json:"IgnitionType,omitempty"`
}

func (x *VehicleOBDStatus) Reset() {
	*x = VehicleOBDStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDStatus) ProtoMessage() {}

func (x *VehicleOBDStatus) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDStatus.ProtoReflect.Descriptor instead.
func (*VehicleOBDStatus) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{261}
}

func (x *VehicleOBDStatus) GetIsMILOn() bool {
	if x != nil {
		return x.IsMILOn
	}
	return false
}

func (x *VehicleOBDStatus) GetDTCCount() uint32 {
	if x != nil {
		return x.DTCCount
	}
	return 0
}

func (x *VehicleOBDStatus) GetIgnitionType() string {
	if x != nil {
		return x.IgnitionType
	}
	return ""
}

type VehicleOBDO2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sensor1 *VehicleOBDO2Sensor1 `protobuf:"bytes,1,opt,name=Sensor1,proto3" json:"Sensor1,omitempty"`
	Sensor2 *VehicleOBDO2Sensor2 `protobuf:"bytes,2,opt,name=Sensor2,proto3" json:"Sensor2,omitempty"`
	Sensor3 *VehicleOBDO2Sensor3 `protobuf:"bytes,3,opt,name=Sensor3,proto3" json:"Sensor3,omitempty"`
	Sensor4 *VehicleOBDO2Sensor4 `protobuf:"bytes,4,opt,name=Sensor4,proto3" json:"Sensor4,omitempty"`
	Sensor5 *VehicleOBDO2Sensor5 `protobuf:"bytes,5,opt,name=Sensor5,proto3" json:"Sensor5,omitempty"`
	Sensor6 *VehicleOBDO2Sensor6 `protobuf:"bytes,6,opt,name=Sensor6,proto3" json:"Sensor6,omitempty"`
	Sensor7 *VehicleOBDO2Sensor7 `protobuf:"bytes,7,opt,name=Sensor7,proto3" json:"Sensor7,omitempty"`
	Sensor8 *VehicleOBDO2Sensor8 `protobuf:"bytes,8,opt,name=Sensor8,proto3" json:"Sensor8,omitempty"`
}

func (x *VehicleOBDO2) Reset() {
	*x = VehicleOBDO2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2) ProtoMessage() {}

func (x *VehicleOBDO2) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{262}
}

func (x *VehicleOBDO2) GetSensor1() *VehicleOBDO2Sensor1 {
	if x != nil {
		return x.Sensor1
	}
	return nil
}

func (x *VehicleOBDO2) GetSensor2() *VehicleOBDO2Sensor2 {
	if x != nil {
		return x.Sensor2
	}
	return nil
}

func (x *VehicleOBDO2) GetSensor3() *VehicleOBDO2Sensor3 {
	if x != nil {
		return x.Sensor3
	}
	return nil
}

func (x *VehicleOBDO2) GetSensor4() *VehicleOBDO2Sensor4 {
	if x != nil {
		return x.Sensor4
	}
	return nil
}

func (x *VehicleOBDO2) GetSensor5() *VehicleOBDO2Sensor5 {
	if x != nil {
		return x.Sensor5
	}
	return nil
}

func (x *VehicleOBDO2) GetSensor6() *VehicleOBDO2Sensor6 {
	if x != nil {
		return x.Sensor6
	}
	return nil
}

func (x *VehicleOBDO2) GetSensor7() *VehicleOBDO2Sensor7 {
	if x != nil {
		return x.Sensor7
	}
	return nil
}

func (x *VehicleOBDO2) GetSensor8() *VehicleOBDO2Sensor8 {
	if x != nil {
		return x.Sensor8
	}
	return nil
}

type VehicleOBDO2Sensor1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voltage           float32 `protobuf:"fixed32,1,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	ShortTermFuelTrim float32 `protobuf:"fixed32,2,opt,name=ShortTermFuelTrim,proto3" json:"ShortTermFuelTrim,omitempty"`
}

func (x *VehicleOBDO2Sensor1) Reset() {
	*x = VehicleOBDO2Sensor1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2Sensor1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2Sensor1) ProtoMessage() {}

func (x *VehicleOBDO2Sensor1) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2Sensor1.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2Sensor1) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{263}
}

func (x *VehicleOBDO2Sensor1) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2Sensor1) GetShortTermFuelTrim() float32 {
	if x != nil {
		return x.ShortTermFuelTrim
	}
	return 0
}

type VehicleOBDO2Sensor2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voltage           float32 `protobuf:"fixed32,1,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	ShortTermFuelTrim float32 `protobuf:"fixed32,2,opt,name=ShortTermFuelTrim,proto3" json:"ShortTermFuelTrim,omitempty"`
}

func (x *VehicleOBDO2Sensor2) Reset() {
	*x = VehicleOBDO2Sensor2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2Sensor2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2Sensor2) ProtoMessage() {}

func (x *VehicleOBDO2Sensor2) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2Sensor2.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2Sensor2) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{264}
}

func (x *VehicleOBDO2Sensor2) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2Sensor2) GetShortTermFuelTrim() float32 {
	if x != nil {
		return x.ShortTermFuelTrim
	}
	return 0
}

type VehicleOBDO2Sensor3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voltage           float32 `protobuf:"fixed32,1,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	ShortTermFuelTrim float32 `protobuf:"fixed32,2,opt,name=ShortTermFuelTrim,proto3" json:"ShortTermFuelTrim,omitempty"`
}

func (x *VehicleOBDO2Sensor3) Reset() {
	*x = VehicleOBDO2Sensor3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2Sensor3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2Sensor3) ProtoMessage() {}

func (x *VehicleOBDO2Sensor3) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2Sensor3.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2Sensor3) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{265}
}

func (x *VehicleOBDO2Sensor3) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2Sensor3) GetShortTermFuelTrim() float32 {
	if x != nil {
		return x.ShortTermFuelTrim
	}
	return 0
}

type VehicleOBDO2Sensor4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voltage           float32 `protobuf:"fixed32,1,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	ShortTermFuelTrim float32 `protobuf:"fixed32,2,opt,name=ShortTermFuelTrim,proto3" json:"ShortTermFuelTrim,omitempty"`
}

func (x *VehicleOBDO2Sensor4) Reset() {
	*x = VehicleOBDO2Sensor4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2Sensor4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2Sensor4) ProtoMessage() {}

func (x *VehicleOBDO2Sensor4) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2Sensor4.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2Sensor4) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{266}
}

func (x *VehicleOBDO2Sensor4) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2Sensor4) GetShortTermFuelTrim() float32 {
	if x != nil {
		return x.ShortTermFuelTrim
	}
	return 0
}

type VehicleOBDO2Sensor5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voltage           float32 `protobuf:"fixed32,1,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	ShortTermFuelTrim float32 `protobuf:"fixed32,2,opt,name=ShortTermFuelTrim,proto3" json:"ShortTermFuelTrim,omitempty"`
}

func (x *VehicleOBDO2Sensor5) Reset() {
	*x = VehicleOBDO2Sensor5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2Sensor5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2Sensor5) ProtoMessage() {}

func (x *VehicleOBDO2Sensor5) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2Sensor5.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2Sensor5) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{267}
}

func (x *VehicleOBDO2Sensor5) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2Sensor5) GetShortTermFuelTrim() float32 {
	if x != nil {
		return x.ShortTermFuelTrim
	}
	return 0
}

type VehicleOBDO2Sensor6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voltage           float32 `protobuf:"fixed32,1,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	ShortTermFuelTrim float32 `protobuf:"fixed32,2,opt,name=ShortTermFuelTrim,proto3" json:"ShortTermFuelTrim,omitempty"`
}

func (x *VehicleOBDO2Sensor6) Reset() {
	*x = VehicleOBDO2Sensor6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2Sensor6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2Sensor6) ProtoMessage() {}

func (x *VehicleOBDO2Sensor6) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2Sensor6.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2Sensor6) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{268}
}

func (x *VehicleOBDO2Sensor6) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2Sensor6) GetShortTermFuelTrim() float32 {
	if x != nil {
		return x.ShortTermFuelTrim
	}
	return 0
}

type VehicleOBDO2Sensor7 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voltage           float32 `protobuf:"fixed32,1,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	ShortTermFuelTrim float32 `protobuf:"fixed32,2,opt,name=ShortTermFuelTrim,proto3" json:"ShortTermFuelTrim,omitempty"`
}

func (x *VehicleOBDO2Sensor7) Reset() {
	*x = VehicleOBDO2Sensor7{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2Sensor7) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2Sensor7) ProtoMessage() {}

func (x *VehicleOBDO2Sensor7) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2Sensor7.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2Sensor7) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{269}
}

func (x *VehicleOBDO2Sensor7) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2Sensor7) GetShortTermFuelTrim() float32 {
	if x != nil {
		return x.ShortTermFuelTrim
	}
	return 0
}

type VehicleOBDO2Sensor8 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voltage           float32 `protobuf:"fixed32,1,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	ShortTermFuelTrim float32 `protobuf:"fixed32,2,opt,name=ShortTermFuelTrim,proto3" json:"ShortTermFuelTrim,omitempty"`
}

func (x *VehicleOBDO2Sensor8) Reset() {
	*x = VehicleOBDO2Sensor8{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2Sensor8) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2Sensor8) ProtoMessage() {}

func (x *VehicleOBDO2Sensor8) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2Sensor8.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2Sensor8) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{270}
}

func (x *VehicleOBDO2Sensor8) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2Sensor8) GetShortTermFuelTrim() float32 {
	if x != nil {
		return x.ShortTermFuelTrim
	}
	return 0
}

type VehicleOBDO2WR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sensor1 *VehicleOBDO2WRSensor1 `protobuf:"bytes,1,opt,name=Sensor1,proto3" json:"Sensor1,omitempty"`
	Sensor2 *VehicleOBDO2WRSensor2 `protobuf:"bytes,2,opt,name=Sensor2,proto3" json:"Sensor2,omitempty"`
	Sensor3 *VehicleOBDO2WRSensor3 `protobuf:"bytes,3,opt,name=Sensor3,proto3" json:"Sensor3,omitempty"`
	Sensor4 *VehicleOBDO2WRSensor4 `protobuf:"bytes,4,opt,name=Sensor4,proto3" json:"Sensor4,omitempty"`
	Sensor5 *VehicleOBDO2WRSensor5 `protobuf:"bytes,5,opt,name=Sensor5,proto3" json:"Sensor5,omitempty"`
	Sensor6 *VehicleOBDO2WRSensor6 `protobuf:"bytes,6,opt,name=Sensor6,proto3" json:"Sensor6,omitempty"`
	Sensor7 *VehicleOBDO2WRSensor7 `protobuf:"bytes,7,opt,name=Sensor7,proto3" json:"Sensor7,omitempty"`
	Sensor8 *VehicleOBDO2WRSensor8 `protobuf:"bytes,8,opt,name=Sensor8,proto3" json:"Sensor8,omitempty"`
}

func (x *VehicleOBDO2WR) Reset() {
	*x = VehicleOBDO2WR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2WR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2WR) ProtoMessage() {}

func (x *VehicleOBDO2WR) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2WR.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2WR) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{271}
}

func (x *VehicleOBDO2WR) GetSensor1() *VehicleOBDO2WRSensor1 {
	if x != nil {
		return x.Sensor1
	}
	return nil
}

func (x *VehicleOBDO2WR) GetSensor2() *VehicleOBDO2WRSensor2 {
	if x != nil {
		return x.Sensor2
	}
	return nil
}

func (x *VehicleOBDO2WR) GetSensor3() *VehicleOBDO2WRSensor3 {
	if x != nil {
		return x.Sensor3
	}
	return nil
}

func (x *VehicleOBDO2WR) GetSensor4() *VehicleOBDO2WRSensor4 {
	if x != nil {
		return x.Sensor4
	}
	return nil
}

func (x *VehicleOBDO2WR) GetSensor5() *VehicleOBDO2WRSensor5 {
	if x != nil {
		return x.Sensor5
	}
	return nil
}

func (x *VehicleOBDO2WR) GetSensor6() *VehicleOBDO2WRSensor6 {
	if x != nil {
		return x.Sensor6
	}
	return nil
}

func (x *VehicleOBDO2WR) GetSensor7() *VehicleOBDO2WRSensor7 {
	if x != nil {
		return x.Sensor7
	}
	return nil
}

func (x *VehicleOBDO2WR) GetSensor8() *VehicleOBDO2WRSensor8 {
	if x != nil {
		return x.Sensor8
	}
	return nil
}

type VehicleOBDO2WRSensor1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lambda  float32 `protobuf:"fixed32,1,opt,name=Lambda,proto3" json:"Lambda,omitempty"`
	Voltage float32 `protobuf:"fixed32,2,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	Current float32 `protobuf:"fixed32,3,opt,name=Current,proto3" json:"Current,omitempty"`
}

func (x *VehicleOBDO2WRSensor1) Reset() {
	*x = VehicleOBDO2WRSensor1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2WRSensor1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2WRSensor1) ProtoMessage() {}

func (x *VehicleOBDO2WRSensor1) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2WRSensor1.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2WRSensor1) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{272}
}

func (x *VehicleOBDO2WRSensor1) GetLambda() float32 {
	if x != nil {
		return x.Lambda
	}
	return 0
}

func (x *VehicleOBDO2WRSensor1) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2WRSensor1) GetCurrent() float32 {
	if x != nil {
		return x.Current
	}
	return 0
}

type VehicleOBDO2WRSensor2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lambda  float32 `protobuf:"fixed32,1,opt,name=Lambda,proto3" json:"Lambda,omitempty"`
	Voltage float32 `protobuf:"fixed32,2,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	Current float32 `protobuf:"fixed32,3,opt,name=Current,proto3" json:"Current,omitempty"`
}

func (x *VehicleOBDO2WRSensor2) Reset() {
	*x = VehicleOBDO2WRSensor2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2WRSensor2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2WRSensor2) ProtoMessage() {}

func (x *VehicleOBDO2WRSensor2) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2WRSensor2.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2WRSensor2) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{273}
}

func (x *VehicleOBDO2WRSensor2) GetLambda() float32 {
	if x != nil {
		return x.Lambda
	}
	return 0
}

func (x *VehicleOBDO2WRSensor2) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2WRSensor2) GetCurrent() float32 {
	if x != nil {
		return x.Current
	}
	return 0
}

type VehicleOBDO2WRSensor3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lambda  float32 `protobuf:"fixed32,1,opt,name=Lambda,proto3" json:"Lambda,omitempty"`
	Voltage float32 `protobuf:"fixed32,2,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	Current float32 `protobuf:"fixed32,3,opt,name=Current,proto3" json:"Current,omitempty"`
}

func (x *VehicleOBDO2WRSensor3) Reset() {
	*x = VehicleOBDO2WRSensor3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2WRSensor3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2WRSensor3) ProtoMessage() {}

func (x *VehicleOBDO2WRSensor3) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2WRSensor3.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2WRSensor3) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{274}
}

func (x *VehicleOBDO2WRSensor3) GetLambda() float32 {
	if x != nil {
		return x.Lambda
	}
	return 0
}

func (x *VehicleOBDO2WRSensor3) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2WRSensor3) GetCurrent() float32 {
	if x != nil {
		return x.Current
	}
	return 0
}

type VehicleOBDO2WRSensor4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lambda  float32 `protobuf:"fixed32,1,opt,name=Lambda,proto3" json:"Lambda,omitempty"`
	Voltage float32 `protobuf:"fixed32,2,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	Current float32 `protobuf:"fixed32,3,opt,name=Current,proto3" json:"Current,omitempty"`
}

func (x *VehicleOBDO2WRSensor4) Reset() {
	*x = VehicleOBDO2WRSensor4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2WRSensor4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2WRSensor4) ProtoMessage() {}

func (x *VehicleOBDO2WRSensor4) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2WRSensor4.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2WRSensor4) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{275}
}

func (x *VehicleOBDO2WRSensor4) GetLambda() float32 {
	if x != nil {
		return x.Lambda
	}
	return 0
}

func (x *VehicleOBDO2WRSensor4) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2WRSensor4) GetCurrent() float32 {
	if x != nil {
		return x.Current
	}
	return 0
}

type VehicleOBDO2WRSensor5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lambda  float32 `protobuf:"fixed32,1,opt,name=Lambda,proto3" json:"Lambda,omitempty"`
	Voltage float32 `protobuf:"fixed32,2,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	Current float32 `protobuf:"fixed32,3,opt,name=Current,proto3" json:"Current,omitempty"`
}

func (x *VehicleOBDO2WRSensor5) Reset() {
	*x = VehicleOBDO2WRSensor5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2WRSensor5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2WRSensor5) ProtoMessage() {}

func (x *VehicleOBDO2WRSensor5) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2WRSensor5.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2WRSensor5) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{276}
}

func (x *VehicleOBDO2WRSensor5) GetLambda() float32 {
	if x != nil {
		return x.Lambda
	}
	return 0
}

func (x *VehicleOBDO2WRSensor5) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2WRSensor5) GetCurrent() float32 {
	if x != nil {
		return x.Current
	}
	return 0
}

type VehicleOBDO2WRSensor6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lambda  float32 `protobuf:"fixed32,1,opt,name=Lambda,proto3" json:"Lambda,omitempty"`
	Voltage float32 `protobuf:"fixed32,2,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	Current float32 `protobuf:"fixed32,3,opt,name=Current,proto3" json:"Current,omitempty"`
}

func (x *VehicleOBDO2WRSensor6) Reset() {
	*x = VehicleOBDO2WRSensor6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2WRSensor6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2WRSensor6) ProtoMessage() {}

func (x *VehicleOBDO2WRSensor6) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2WRSensor6.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2WRSensor6) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{277}
}

func (x *VehicleOBDO2WRSensor6) GetLambda() float32 {
	if x != nil {
		return x.Lambda
	}
	return 0
}

func (x *VehicleOBDO2WRSensor6) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2WRSensor6) GetCurrent() float32 {
	if x != nil {
		return x.Current
	}
	return 0
}

type VehicleOBDO2WRSensor7 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lambda  float32 `protobuf:"fixed32,1,opt,name=Lambda,proto3" json:"Lambda,omitempty"`
	Voltage float32 `protobuf:"fixed32,2,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	Current float32 `protobuf:"fixed32,3,opt,name=Current,proto3" json:"Current,omitempty"`
}

func (x *VehicleOBDO2WRSensor7) Reset() {
	*x = VehicleOBDO2WRSensor7{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2WRSensor7) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2WRSensor7) ProtoMessage() {}

func (x *VehicleOBDO2WRSensor7) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2WRSensor7.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2WRSensor7) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{278}
}

func (x *VehicleOBDO2WRSensor7) GetLambda() float32 {
	if x != nil {
		return x.Lambda
	}
	return 0
}

func (x *VehicleOBDO2WRSensor7) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2WRSensor7) GetCurrent() float32 {
	if x != nil {
		return x.Current
	}
	return 0
}

type VehicleOBDO2WRSensor8 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lambda  float32 `protobuf:"fixed32,1,opt,name=Lambda,proto3" json:"Lambda,omitempty"`
	Voltage float32 `protobuf:"fixed32,2,opt,name=Voltage,proto3" json:"Voltage,omitempty"`
	Current float32 `protobuf:"fixed32,3,opt,name=Current,proto3" json:"Current,omitempty"`
}

func (x *VehicleOBDO2WRSensor8) Reset() {
	*x = VehicleOBDO2WRSensor8{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDO2WRSensor8) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDO2WRSensor8) ProtoMessage() {}

func (x *VehicleOBDO2WRSensor8) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDO2WRSensor8.ProtoReflect.Descriptor instead.
func (*VehicleOBDO2WRSensor8) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{279}
}

func (x *VehicleOBDO2WRSensor8) GetLambda() float32 {
	if x != nil {
		return x.Lambda
	}
	return 0
}

func (x *VehicleOBDO2WRSensor8) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *VehicleOBDO2WRSensor8) GetCurrent() float32 {
	if x != nil {
		return x.Current
	}
	return 0
}

type VehicleOBDCatalyst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bank1 *VehicleOBDCatalystBank1 `protobuf:"bytes,1,opt,name=Bank1,proto3" json:"Bank1,omitempty"`
	Bank2 *VehicleOBDCatalystBank2 `protobuf:"bytes,2,opt,name=Bank2,proto3" json:"Bank2,omitempty"`
}

func (x *VehicleOBDCatalyst) Reset() {
	*x = VehicleOBDCatalyst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDCatalyst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDCatalyst) ProtoMessage() {}

func (x *VehicleOBDCatalyst) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDCatalyst.ProtoReflect.Descriptor instead.
func (*VehicleOBDCatalyst) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{280}
}

func (x *VehicleOBDCatalyst) GetBank1() *VehicleOBDCatalystBank1 {
	if x != nil {
		return x.Bank1
	}
	return nil
}

func (x *VehicleOBDCatalyst) GetBank2() *VehicleOBDCatalystBank2 {
	if x != nil {
		return x.Bank2
	}
	return nil
}

type VehicleOBDCatalystBank1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temperature1 float32 `protobuf:"fixed32,1,opt,name=Temperature1,proto3" json:"Temperature1,omitempty"`
	Temperature2 float32 `protobuf:"fixed32,2,opt,name=Temperature2,proto3" json:"Temperature2,omitempty"`
}

func (x *VehicleOBDCatalystBank1) Reset() {
	*x = VehicleOBDCatalystBank1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDCatalystBank1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDCatalystBank1) ProtoMessage() {}

func (x *VehicleOBDCatalystBank1) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDCatalystBank1.ProtoReflect.Descriptor instead.
func (*VehicleOBDCatalystBank1) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{281}
}

func (x *VehicleOBDCatalystBank1) GetTemperature1() float32 {
	if x != nil {
		return x.Temperature1
	}
	return 0
}

func (x *VehicleOBDCatalystBank1) GetTemperature2() float32 {
	if x != nil {
		return x.Temperature2
	}
	return 0
}

type VehicleOBDCatalystBank2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temperature1 float32 `protobuf:"fixed32,1,opt,name=Temperature1,proto3" json:"Temperature1,omitempty"`
	Temperature2 float32 `protobuf:"fixed32,2,opt,name=Temperature2,proto3" json:"Temperature2,omitempty"`
}

func (x *VehicleOBDCatalystBank2) Reset() {
	*x = VehicleOBDCatalystBank2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[282]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDCatalystBank2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDCatalystBank2) ProtoMessage() {}

func (x *VehicleOBDCatalystBank2) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[282]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDCatalystBank2.ProtoReflect.Descriptor instead.
func (*VehicleOBDCatalystBank2) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{282}
}

func (x *VehicleOBDCatalystBank2) GetTemperature1() float32 {
	if x != nil {
		return x.Temperature1
	}
	return 0
}

func (x *VehicleOBDCatalystBank2) GetTemperature2() float32 {
	if x != nil {
		return x.Temperature2
	}
	return 0
}

type VehicleOBDDriveCycleStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMILOn      bool   `protobuf:"varint,1,opt,name=IsMILOn,proto3" json:"IsMILOn,omitempty"`
	DTCCount     uint32 `protobuf:"varint,2,opt,name=DTCCount,proto3" json:"DTCCount,omitempty"`
	IgnitionType string `protobuf:"bytes,3,opt,name=IgnitionType,proto3" json:"IgnitionType,omitempty"`
}

func (x *VehicleOBDDriveCycleStatus) Reset() {
	*x = VehicleOBDDriveCycleStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[283]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleOBDDriveCycleStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleOBDDriveCycleStatus) ProtoMessage() {}

func (x *VehicleOBDDriveCycleStatus) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[283]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleOBDDriveCycleStatus.ProtoReflect.Descriptor instead.
func (*VehicleOBDDriveCycleStatus) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{283}
}

func (x *VehicleOBDDriveCycleStatus) GetIsMILOn() bool {
	if x != nil {
		return x.IsMILOn
	}
	return false
}

func (x *VehicleOBDDriveCycleStatus) GetDTCCount() uint32 {
	if x != nil {
		return x.DTCCount
	}
	return 0
}

func (x *VehicleOBDDriveCycleStatus) GetIgnitionType() string {
	if x != nil {
		return x.IgnitionType
	}
	return ""
}

type VehicleDriver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier           *VehicleDriverIdentifier `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
	DistractionLevel     float32                  `protobuf:"fixed32,2,opt,name=DistractionLevel,proto3" json:"DistractionLevel,omitempty"`
	IsEyesOnRoad         bool                     `protobuf:"varint,3,opt,name=IsEyesOnRoad,proto3" json:"IsEyesOnRoad,omitempty"`
	IsHandsOnWheel       bool                     `protobuf:"varint,4,opt,name=IsHandsOnWheel,proto3" json:"IsHandsOnWheel,omitempty"`
	AttentiveProbability float32                  `protobuf:"fixed32,5,opt,name=AttentiveProbability,proto3" json:"AttentiveProbability,omitempty"`
	FatigueLevel         float32                  `protobuf:"fixed32,6,opt,name=FatigueLevel,proto3" json:"FatigueLevel,omitempty"`
	HeartRate            uint32                   `protobuf:"varint,7,opt,name=HeartRate,proto3" json:"HeartRate,omitempty"`
}

func (x *VehicleDriver) Reset() {
	*x = VehicleDriver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[284]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleDriver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleDriver) ProtoMessage() {}

func (x *VehicleDriver) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[284]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleDriver.ProtoReflect.Descriptor instead.
func (*VehicleDriver) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{284}
}

func (x *VehicleDriver) GetIdentifier() *VehicleDriverIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *VehicleDriver) GetDistractionLevel() float32 {
	if x != nil {
		return x.DistractionLevel
	}
	return 0
}

func (x *VehicleDriver) GetIsEyesOnRoad() bool {
	if x != nil {
		return x.IsEyesOnRoad
	}
	return false
}

func (x *VehicleDriver) GetIsHandsOnWheel() bool {
	if x != nil {
		return x.IsHandsOnWheel
	}
	return false
}

func (x *VehicleDriver) GetAttentiveProbability() float32 {
	if x != nil {
		return x.AttentiveProbability
	}
	return 0
}

func (x *VehicleDriver) GetFatigueLevel() float32 {
	if x != nil {
		return x.FatigueLevel
	}
	return 0
}

func (x *VehicleDriver) GetHeartRate() uint32 {
	if x != nil {
		return x.HeartRate
	}
	return 0
}

type VehicleDriverIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject string `protobuf:"bytes,1,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Issuer  string `protobuf:"bytes,2,opt,name=Issuer,proto3" json:"Issuer,omitempty"`
}

func (x *VehicleDriverIdentifier) Reset() {
	*x = VehicleDriverIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[285]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleDriverIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleDriverIdentifier) ProtoMessage() {}

func (x *VehicleDriverIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[285]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleDriverIdentifier.ProtoReflect.Descriptor instead.
func (*VehicleDriverIdentifier) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{285}
}

func (x *VehicleDriverIdentifier) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *VehicleDriverIdentifier) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

type VehicleExterior struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AirTemperature float32 `protobuf:"fixed32,1,opt,name=AirTemperature,proto3" json:"AirTemperature,omitempty"`
	Humidity       float32 `protobuf:"fixed32,2,opt,name=Humidity,proto3" json:"Humidity,omitempty"`
	LightIntensity float32 `protobuf:"fixed32,3,opt,name=LightIntensity,proto3" json:"LightIntensity,omitempty"`
}

func (x *VehicleExterior) Reset() {
	*x = VehicleExterior{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[286]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleExterior) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleExterior) ProtoMessage() {}

func (x *VehicleExterior) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[286]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleExterior.ProtoReflect.Descriptor instead.
func (*VehicleExterior) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{286}
}

func (x *VehicleExterior) GetAirTemperature() float32 {
	if x != nil {
		return x.AirTemperature
	}
	return 0
}

func (x *VehicleExterior) GetHumidity() float32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *VehicleExterior) GetLightIntensity() float32 {
	if x != nil {
		return x.LightIntensity
	}
	return 0
}

type VehicleService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsServiceDue      bool    `protobuf:"varint,1,opt,name=IsServiceDue,proto3" json:"IsServiceDue,omitempty"`
	DistanceToService float32 `protobuf:"fixed32,2,opt,name=DistanceToService,proto3" json:"DistanceToService,omitempty"`
	TimeToService     int32   `protobuf:"varint,3,opt,name=TimeToService,proto3" json:"TimeToService,omitempty"`
}

func (x *VehicleService) Reset() {
	*x = VehicleService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[287]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleService) ProtoMessage() {}

func (x *VehicleService) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[287]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleService.ProtoReflect.Descriptor instead.
func (*VehicleService) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{287}
}

func (x *VehicleService) GetIsServiceDue() bool {
	if x != nil {
		return x.IsServiceDue
	}
	return false
}

func (x *VehicleService) GetDistanceToService() float32 {
	if x != nil {
		return x.DistanceToService
	}
	return 0
}

func (x *VehicleService) GetTimeToService() int32 {
	if x != nil {
		return x.TimeToService
	}
	return 0
}

type VehicleConnectivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsConnectivityAvailable bool `protobuf:"varint,1,opt,name=IsConnectivityAvailable,proto3" json:"IsConnectivityAvailable,omitempty"`
}

func (x *VehicleConnectivity) Reset() {
	*x = VehicleConnectivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[288]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleConnectivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleConnectivity) ProtoMessage() {}

func (x *VehicleConnectivity) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[288]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleConnectivity.ProtoReflect.Descriptor instead.
func (*VehicleConnectivity) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{288}
}

func (x *VehicleConnectivity) GetIsConnectivityAvailable() bool {
	if x != nil {
		return x.IsConnectivityAvailable
	}
	return false
}

type VehicleDIMO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source       string `protobuf:"bytes,1,opt,name=Source,proto3" json:"Source,omitempty"`
	Type         string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	DefinitionID string `protobuf:"bytes,3,opt,name=DefinitionID,proto3" json:"DefinitionID,omitempty"`
	VehicleID    string `protobuf:"bytes,4,opt,name=VehicleID,proto3" json:"VehicleID,omitempty"`
}

func (x *VehicleDIMO) Reset() {
	*x = VehicleDIMO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vspec_proto_msgTypes[289]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleDIMO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleDIMO) ProtoMessage() {}

func (x *VehicleDIMO) ProtoReflect() protoreflect.Message {
	mi := &file_vspec_proto_msgTypes[289]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleDIMO.ProtoReflect.Descriptor instead.
func (*VehicleDIMO) Descriptor() ([]byte, []int) {
	return file_vspec_proto_rawDescGZIP(), []int{289}
}

func (x *VehicleDIMO) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *VehicleDIMO) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *VehicleDIMO) GetDefinitionID() string {
	if x != nil {
		return x.DefinitionID
	}
	return ""
}

func (x *VehicleDIMO) GetVehicleID() string {
	if x != nil {
		return x.VehicleID
	}
	return ""
}

var File_vspec_proto protoreflect.FileDescriptor

var file_vspec_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x76, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x0f,
	0x0a, 0x07, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x56, 0x53, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x53,
	0x53, 0x52, 0x0a, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x53, 0x53, 0x12, 0x53, 0x0a,
	0x15, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x4c, 0x6f, 0x77, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x4c, 0x6f, 0x77, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x4c, 0x6f, 0x77, 0x56,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x6f, 0x77,
	0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x11,
	0x4c, 0x6f, 0x77, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x76, 0x65,
	0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x10, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x65, 0x64, 0x44,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x1a, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x65,
	0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x72, 0x69, 0x70, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x54, 0x72, 0x69, 0x70, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x72, 0x69, 0x70, 0x4d, 0x65, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x10, 0x54, 0x72, 0x69, 0x70, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x6f, 0x77,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x42, 0x72, 0x6f, 0x6b, 0x65,
	0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4d, 0x6f, 0x76, 0x69, 0x6e,
	0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x4d, 0x6f, 0x76, 0x69, 0x6e,
	0x67, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x41, 0x0a, 0x0f, 0x41, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x41, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74,
	0x79, 0x52, 0x0f, 0x41, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x66, 0x4c, 0x6f, 0x61, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x66, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0b, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x4f, 0x32,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x43, 0x4f, 0x32, 0x12, 0x32, 0x0a, 0x14, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4f,
	0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x14, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x61,
	0x6c, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x75, 0x72, 0x62,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x43, 0x75,
	0x72, 0x62, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x73,
	0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x47,
	0x72, 0x6f, 0x73, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x61,
	0x78, 0x54, 0x6f, 0x77, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x4d, 0x61, 0x78, 0x54, 0x6f, 0x77, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x4d, 0x61, 0x78, 0x54, 0x6f, 0x77, 0x42, 0x61, 0x6c, 0x6c, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x4d, 0x61, 0x78, 0x54, 0x6f, 0x77,
	0x42, 0x61, 0x6c, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x34, 0x0a, 0x15, 0x57, 0x69, 0x64, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69,
	0x6e, 0x67, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x15, 0x57, 0x69, 0x64, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x4d,
	0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x57, 0x69, 0x64, 0x74, 0x68, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x57, 0x69, 0x64, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x12,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x4d, 0x69, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x57, 0x69, 0x64, 0x74, 0x68, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x64, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x54, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x54, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x69,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x65,
	0x72, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x07, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x65,
	0x72, 0x12, 0x41, 0x0a, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x12, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70,
	0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x0a,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x42, 0x6f,
	0x64, 0x79, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x23, 0x0a, 0x05,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x52, 0x05, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x12, 0x20, 0x0a, 0x04, 0x41, 0x44, 0x41, 0x53, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x44, 0x41, 0x53, 0x52, 0x04, 0x41,
	0x44, 0x41, 0x53, 0x12, 0x29, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x52, 0x07, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x12, 0x1d,
	0x0a, 0x03, 0x4f, 0x42, 0x44, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x52, 0x03, 0x4f, 0x42, 0x44, 0x12, 0x26, 0x0a,
	0x06, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x06, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x08, 0x45, 0x78, 0x74, 0x65, 0x72, 0x69, 0x6f,
	0x72, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x52, 0x08, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x69, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x2b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38,
	0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x2c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x20, 0x0a, 0x04, 0x44, 0x49, 0x4d, 0x4f, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x49, 0x4d, 0x4f, 0x52, 0x04, 0x44, 0x49,
	0x4d, 0x4f, 0x22, 0x6b, 0x0a, 0x11, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x56, 0x53, 0x53, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x6a, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4d, 0x69,
	0x6e, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22,
	0xe2, 0x06, 0x0a, 0x1c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x56, 0x49, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56,
	0x49, 0x4e, 0x12, 0x10, 0x0a, 0x03, 0x57, 0x4d, 0x49, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x57, 0x4d, 0x49, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x59, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x59, 0x65, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x72, 0x69, 0x73, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x72, 0x69, 0x73, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x6f, 0x64, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x6f, 0x64, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3e, 0x0a, 0x1a, 0x44, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x44, 0x61, 0x74, 0x65, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x4d, 0x65, 0x65, 0x74, 0x73, 0x45, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x4d, 0x65, 0x65, 0x74, 0x73, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x16, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53,
	0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x30,
	0x0a, 0x13, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x32, 0x0a, 0x14, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x69, 0x6f, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x69, 0x6f, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x4b, 0x6e,
	0x6f, 0x77, 0x6e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x73, 0x18, 0x15,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x18, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x4c, 0x6f, 0x77, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x12, 0x26, 0x0a, 0x0e, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x4e, 0x6f, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x6f, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x6f,
	0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x22, 0x6f, 0x0a, 0x13, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0c, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x65, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x56, 0x65, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x22, 0x54, 0x0a, 0x16, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41,
	0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x52, 0x6f,
	0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x69, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x50, 0x69, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x59, 0x61, 0x77, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x59, 0x61, 0x77, 0x22, 0x32, 0x0a, 0x0e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x49, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x49, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0xcb,
	0x02, 0x0a, 0x16, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x12, 0x48,
	0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e,
	0x74, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x41,
	0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x41,
	0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x10, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x75, 0x72,
	0x61, 0x63, 0x79, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x4e, 0x53, 0x53, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x4e, 0x53, 0x53, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x0c,
	0x47, 0x4e, 0x53, 0x53, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x22, 0x9f, 0x01, 0x0a,
	0x22, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x4e, 0x53, 0x53, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x78, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x69, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5f, 0x0a,
	0x10, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x47, 0x4e, 0x53, 0x53, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x75, 0x6e,
	0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x4d, 0x6f,
	0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5e,
	0x0a, 0x32, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x4e, 0x53, 0x53, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x58, 0x12, 0x0c, 0x0a, 0x01, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x59,
	0x12, 0x0c, 0x0a, 0x01, 0x5a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x5a, 0x22, 0xe7,
	0x04, 0x0a, 0x11, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x12, 0x3a, 0x0a, 0x18, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x72, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x18, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x72, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x30, 0x0a, 0x13, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f,
	0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x49,
	0x73, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69,
	0x7a, 0x65, 0x12, 0x4e, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x62, 0x75, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x43, 0x6f, 0x6d, 0x62, 0x75, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x52, 0x10, 0x43, 0x6f, 0x6d, 0x62, 0x75, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0d, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72,
	0x69, 0x63, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x52, 0x0d,
	0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x12, 0x4b, 0x0a,
	0x0f, 0x54, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x3c, 0x0a, 0x0a, 0x46, 0x75,
	0x65, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x46, 0x75, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x46, 0x75,
	0x65, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0xe0, 0x08, 0x0a, 0x21, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x6d, 0x62, 0x75, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x42, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x79, 0x6c, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x79, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3c,
	0x0a, 0x19, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x56, 0x61, 0x6c, 0x76, 0x65, 0x73,
	0x50, 0x65, 0x72, 0x43, 0x79, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x19, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x56, 0x61, 0x6c, 0x76, 0x65,
	0x73, 0x50, 0x65, 0x72, 0x43, 0x79, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10,
	0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x2c, 0x0a, 0x11, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x4f, 0x69, 0x6c, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x11, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x69, 0x6c, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x15, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x15, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6f,
	0x6c, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x4d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x4d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x54,
	0x6f, 0x72, 0x71, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x4d, 0x61, 0x78,
	0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x73, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x41, 0x73, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x69, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4f, 0x69,
	0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x4f, 0x69, 0x6c, 0x4c, 0x69, 0x66,
	0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x4f, 0x69, 0x6c, 0x4c, 0x69, 0x66, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x64, 0x6c, 0x65,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x49, 0x64, 0x6c,
	0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x43, 0x54, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x45, 0x43, 0x54, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x4f, 0x54, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x45, 0x4f, 0x54, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x41,
	0x50, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x4d, 0x41, 0x50, 0x12, 0x10, 0x0a, 0x03,
	0x4d, 0x41, 0x46, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x4d, 0x41, 0x46, 0x12, 0x10,
	0x0a, 0x03, 0x54, 0x50, 0x53, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x54, 0x50, 0x53,
	0x12, 0x10, 0x0a, 0x03, 0x45, 0x4f, 0x50, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x45,
	0x4f, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x6f, 0x72, 0x71,
	0x75, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65,
	0x12, 0x64, 0x0a, 0x12, 0x44, 0x69, 0x65, 0x73, 0x65, 0x6c, 0x45, 0x78, 0x68, 0x61, 0x75, 0x73,
	0x74, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x43, 0x6f, 0x6d, 0x62, 0x75, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x44, 0x69, 0x65, 0x73, 0x65, 0x6c, 0x45, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x46, 0x6c, 0x75,
	0x69, 0x64, 0x52, 0x12, 0x44, 0x69, 0x65, 0x73, 0x65, 0x6c, 0x45, 0x78, 0x68, 0x61, 0x75, 0x73,
	0x74, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x12, 0x73, 0x0a, 0x17, 0x44, 0x69, 0x65, 0x73, 0x65, 0x6c,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x62, 0x75,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x44, 0x69, 0x65, 0x73, 0x65,
	0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x17, 0x44, 0x69, 0x65, 0x73, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x9d, 0x01, 0x0a, 0x33,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x43, 0x6f, 0x6d, 0x62, 0x75, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x44, 0x69, 0x65, 0x73, 0x65, 0x6c, 0x45, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x46, 0x6c,
	0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49,
	0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x49, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x77, 0x22, 0xba, 0x01, 0x0a, 0x38,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x43, 0x6f, 0x6d, 0x62, 0x75, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x44, 0x69, 0x65, 0x73, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x6e, 0x6c, 0x65,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x10, 0x49, 0x6e, 0x6c, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x4f, 0x75, 0x74, 0x6c, 0x65, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x11, 0x4f, 0x75, 0x74, 0x6c, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x65, 0x73, 0x73,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x22, 0xe7, 0x05, 0x0a, 0x1d, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x47, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x47, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x44, 0x72, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x72,
	0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x64,
	0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x47, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x65, 0x61, 0x72, 0x12, 0x2c,
	0x0a, 0x11, 0x49, 0x73, 0x50, 0x61, 0x72, 0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x50, 0x61, 0x72,
	0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x49, 0x73, 0x4c, 0x6f, 0x77, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x4c, 0x6f, 0x77, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x1d, 0x49, 0x73,
	0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1d, 0x49, 0x73, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x47, 0x65,
	0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x47, 0x65, 0x61, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10,
	0x43, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x57, 0x65, 0x61, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x43, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x57, 0x65, 0x61, 0x72,
	0x12, 0x38, 0x0a, 0x17, 0x44, 0x69, 0x66, 0x66, 0x4c, 0x6f, 0x63, 0x6b, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x17, 0x44, 0x69, 0x66, 0x66, 0x4c, 0x6f, 0x63, 0x6b, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x44, 0x69,
	0x66, 0x66, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x16, 0x44, 0x69, 0x66, 0x66,
	0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12,
	0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xde, 0x02, 0x0a, 0x1e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63,
	0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x4d, 0x61, 0x78, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x67, 0x65, 0x6e,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x67, 0x65,
	0x6e, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x4d,
	0x61, 0x78, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x54, 0x6f, 0x72, 0x71, 0x75, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x43, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x12, 0x43, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x54,
	0x6f, 0x72, 0x71, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x54, 0x6f, 0x72,
	0x71, 0x75, 0x65, 0x22, 0xd4, 0x09, 0x0a, 0x20, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x49, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x49, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x0b, 0x54, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0b, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x43, 0x65,
	0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x43, 0x65, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x43,
	0x65, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x47, 0x72,
	0x6f, 0x73, 0x73, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4e, 0x65, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x54, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4f, 0x66, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52,
	0x0d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x56,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x56, 0x6f, 0x6c,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x4d, 0x61, 0x78, 0x56,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x18, 0x41, 0x63,
	0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x18, 0x41, 0x63,
	0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x3c, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x19, 0x41, 0x63, 0x63, 0x75, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x45, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x12, 0x42, 0x0a, 0x1c, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67,
	0x68, 0x70, 0x75, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x1c, 0x41, 0x63, 0x63, 0x75,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x54, 0x68,
	0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x12, 0x44, 0x0a, 0x1d, 0x41, 0x63, 0x63, 0x75,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x54,
	0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x1d, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x64, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x45, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x67, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x12,
	0x39, 0x0a, 0x04, 0x44, 0x43, 0x44, 0x43, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x54, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x44, 0x43, 0x44, 0x43, 0x52, 0x04, 0x44, 0x43, 0x44, 0x43, 0x22, 0x95, 0x01, 0x0a, 0x2b, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x54, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x41, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x4d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x61, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x4d, 0x61, 0x78, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x65, 0x6c, 0x6c,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x02, 0x52, 0x0f, 0x43, 0x65, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x2b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x65, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x4d, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x64, 0x4d, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x49, 0x64, 0x4d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x61,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x4d, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05,
	0x49, 0x64, 0x4d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x49, 0x64, 0x4d,
	0x61, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x65, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0c, 0x43, 0x65, 0x6c, 0x6c, 0x56, 0x6f,
	0x6c, 0x74, 0x61, 0x67, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x2d, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x22, 0xcc, 0x09, 0x0a, 0x28, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x77, 0x0a, 0x16, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67,
	0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x16, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6c, 0x61, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x46, 0x6c, 0x61, 0x70, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6c, 0x61, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x46, 0x6c, 0x61, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x18, 0x49, 0x73,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x49, 0x73,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x49, 0x73, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x49, 0x73, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x67, 0x43, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x6c, 0x75, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67,
	0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x44, 0x69, 0x73, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x44, 0x69, 0x73, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53,
	0x74, 0x6f, 0x70, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x67, 0x12, 0x5c, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x52, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x56, 0x6f, 0x6c, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x52, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x45, 0x76, 0x73, 0x65, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x45, 0x76, 0x73, 0x65, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x4c, 0x6f, 0x73, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x69, 0x6d, 0x65, 0x54,
	0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x44, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x05,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x22, 0x98, 0x01, 0x0a, 0x3e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x67, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x67, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x44, 0x43, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x44, 0x43, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x50, 0x68, 0x61, 0x73, 0x65, 0x31,
	0x12, 0x16, 0x0a, 0x06, 0x50, 0x68, 0x61, 0x73, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x50, 0x68, 0x61, 0x73, 0x65, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x50, 0x68, 0x61, 0x73, 0x65, 0x33,
	0x22, 0x8f, 0x01, 0x0a, 0x35, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x44, 0x43,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x44, 0x43, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x68, 0x61, 0x73, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x50, 0x68, 0x61, 0x73, 0x65, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x33, 0x22, 0x8f, 0x01, 0x0a, 0x35, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x44, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x44, 0x43, 0x12, 0x16, 0x0a, 0x06,
	0x50, 0x68, 0x61, 0x73, 0x65, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x68, 0x61, 0x73, 0x65, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x50, 0x68, 0x61, 0x73, 0x65, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x50, 0x68, 0x61, 0x73, 0x65, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x33, 0x22, 0x88, 0x01, 0x0a, 0x30, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x67, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22,
	0x57, 0x0a, 0x2d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x24, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x44, 0x43, 0x44, 0x43,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x99, 0x05, 0x0a, 0x1b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x46, 0x75, 0x65, 0x6c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x2e, 0x0a, 0x12, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x75, 0x65,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x75, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x46, 0x75, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x48, 0x79, 0x62, 0x72,
	0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x6e, 0x6b, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x54, 0x61,
	0x6e, 0x6b, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x62,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12,
	0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x15, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x49, 0x73, 0x45, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x49, 0x73, 0x45, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x73, 0x46, 0x75, 0x65, 0x6c, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x49, 0x73,
	0x46, 0x75, 0x65, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x77, 0x12, 0x2e, 0x0a, 0x12,
	0x52, 0x65, 0x66, 0x75, 0x65, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x52, 0x65, 0x66, 0x75, 0x65, 0x6c,
	0x50, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12,
	0x49, 0x73, 0x46, 0x75, 0x65, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x6c, 0x61, 0x70, 0x4f, 0x70,
	0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x49, 0x73, 0x46, 0x75, 0x65, 0x6c,
	0x50, 0x6f, 0x72, 0x74, 0x46, 0x6c, 0x61, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x22, 0xb6, 0x04, 0x0a,
	0x0b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x42, 0x6f, 0x64, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x42, 0x6f, 0x64, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x75,
	0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x52, 0x65, 0x66, 0x75, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x04, 0x48, 0x6f, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x6f, 0x6f, 0x64,
	0x52, 0x04, 0x48, 0x6f, 0x6f, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x52, 0x05, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x12,
	0x24, 0x0a, 0x04, 0x48, 0x6f, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x6f, 0x72, 0x6e, 0x52,
	0x04, 0x48, 0x6f, 0x72, 0x6e, 0x12, 0x3f, 0x0a, 0x0d, 0x52, 0x61, 0x69, 0x6e, 0x64, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x61, 0x69, 0x6e, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x52, 0x61, 0x69, 0x6e, 0x64, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0a, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x0a, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x2a,
	0x0a, 0x06, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x52, 0x06, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x4d, 0x69,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x52, 0x07, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x52, 0x65, 0x61,
	0x72, 0x4d, 0x61, 0x69, 0x6e, 0x53, 0x70, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x52, 0x65, 0x61, 0x72,
	0x4d, 0x61, 0x69, 0x6e, 0x53, 0x70, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69,
	0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x65, 0x22, 0x5d, 0x0a, 0x0f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x48, 0x6f, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x22, 0x6b, 0x0a, 0x10, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x12, 0x2c, 0x0a, 0x05, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52,
	0x05, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x61, 0x72, 0x52, 0x04, 0x52, 0x65, 0x61,
	0x72, 0x22, 0x9d, 0x01, 0x0a, 0x15, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49,
	0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f,
	0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x14, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e,
	0x22, 0x2d, 0x0a, 0x0f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x48,
	0x6f, 0x72, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22,
	0x38, 0x0a, 0x18, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x61,
	0x69, 0x6e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49,
	0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x22, 0x7a, 0x0a, 0x15, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x57,
	0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x05,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x61, 0x72, 0x52,
	0x04, 0x52, 0x65, 0x61, 0x72, 0x22, 0xc3, 0x01, 0x0a, 0x1a, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x57, 0x69, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x57, 0x69, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x57, 0x69, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x20, 0x0a, 0x0b, 0x49, 0x73, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f,
	0x6e, 0x12, 0x48, 0x0a, 0x0b, 0x57, 0x61, 0x73, 0x68, 0x65, 0x72, 0x46, 0x6c, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x57, 0x61, 0x73, 0x68, 0x65, 0x72, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x52, 0x0b,
	0x57, 0x61, 0x73, 0x68, 0x65, 0x72, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x20,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x73,
	0x68, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x57, 0x69, 0x70, 0x69, 0x6e, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x79, 0x12, 0x3f, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x57, 0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x57,
	0x69, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x57, 0x69, 0x70, 0x65, 0x72, 0x57, 0x65, 0x61, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x57, 0x69, 0x70, 0x65, 0x72, 0x57, 0x65, 0x61,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x57, 0x69, 0x70, 0x65, 0x72, 0x73, 0x57, 0x6f, 0x72,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x57, 0x69, 0x70, 0x65, 0x72,
	0x73, 0x57, 0x6f, 0x72, 0x6e, 0x22, 0xac, 0x03, 0x0a, 0x26, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x57, 0x69, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x57, 0x69, 0x70, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x57, 0x69, 0x70, 0x69,
	0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x69,
	0x70, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49,
	0x73, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x70, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x57, 0x69, 0x70, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x57, 0x69, 0x70, 0x65, 0x72, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x49, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x68, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x68, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x22, 0x5d, 0x0a, 0x25, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x57, 0x61, 0x73, 0x68, 0x65, 0x72, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x49, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x49, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x77, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x22, 0xc0, 0x01, 0x0a, 0x19, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x61,
	0x72, 0x12, 0x38, 0x0a, 0x06, 0x57, 0x69, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x57,
	0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x61, 0x72, 0x57, 0x69, 0x70,
	0x69, 0x6e, 0x67, 0x52, 0x06, 0x57, 0x69, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x49,
	0x73, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x49, 0x73, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x12, 0x47, 0x0a,
	0x0b, 0x57, 0x61, 0x73, 0x68, 0x65, 0x72, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x57, 0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x61, 0x72, 0x57, 0x61,
	0x73, 0x68, 0x65, 0x72, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x52, 0x0b, 0x57, 0x61, 0x73, 0x68, 0x65,
	0x72, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x22, 0xd5, 0x01, 0x0a, 0x1f, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x65, 0x61, 0x72, 0x57, 0x69, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x06,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x73, 0x68,
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x61, 0x72, 0x57, 0x69, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09,
	0x57, 0x69, 0x70, 0x65, 0x72, 0x57, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x57, 0x69, 0x70, 0x65, 0x72, 0x57, 0x65, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73,
	0x57, 0x69, 0x70, 0x65, 0x72, 0x73, 0x57, 0x6f, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x49, 0x73, 0x57, 0x69, 0x70, 0x65, 0x72, 0x73, 0x57, 0x6f, 0x72, 0x6e, 0x22, 0xab,
	0x03, 0x0a, 0x25, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x57, 0x69,
	0x6e, 0x64, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x61, 0x72, 0x57, 0x69, 0x70, 0x69,
	0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x49, 0x73, 0x57, 0x69, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x49, 0x73, 0x57, 0x69, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73,
	0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x70, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x45, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x57,
	0x69, 0x70, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x57, 0x69,
	0x70, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x49, 0x73, 0x57, 0x69, 0x70, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x11,
	0x49, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49,
	0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x4f, 0x76,
	0x65, 0x72, 0x68, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x49, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x68, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x5c, 0x0a, 0x24,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x73,
	0x68, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x61, 0x72, 0x57, 0x61, 0x73, 0x68, 0x65, 0x72, 0x46,
	0x6c, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c,
	0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x4c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xd1, 0x04, 0x0a, 0x11, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x12, 0x2e, 0x0a, 0x12, 0x49, 0x73, 0x48, 0x69, 0x67, 0x68, 0x42, 0x65, 0x61, 0x6d,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x49, 0x73, 0x48, 0x69, 0x67, 0x68, 0x42, 0x65, 0x61, 0x6d, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x4f, 0x6e, 0x12, 0x2a, 0x0a, 0x04, 0x42, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x42, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x42, 0x65, 0x61, 0x6d, 0x12, 0x33,
	0x0a, 0x07, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x52, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x06, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x33, 0x0a, 0x07, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x03, 0x46, 0x6f,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x46, 0x6f, 0x67, 0x52, 0x03,
	0x46, 0x6f, 0x67, 0x12, 0x42, 0x0a, 0x0c, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x42, 0x72, 0x61, 0x6b, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x52,
	0x05, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x48, 0x61, 0x7a, 0x61, 0x72, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x48, 0x61, 0x7a, 0x61, 0x72, 0x64,
	0x52, 0x06, 0x48, 0x61, 0x7a, 0x61, 0x72, 0x64, 0x12, 0x54, 0x0a, 0x12, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x12, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x74,
	0x0a, 0x15, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x42, 0x65, 0x61, 0x6d, 0x12, 0x2b, 0x0a, 0x03, 0x4c, 0x6f, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x77, 0x52,
	0x03, 0x4c, 0x6f, 0x77, 0x12, 0x2e, 0x0a, 0x04, 0x48, 0x69, 0x67, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x65, 0x61, 0x6d, 0x48, 0x69, 0x67, 0x68, 0x52, 0x04,
	0x48, 0x69, 0x67, 0x68, 0x22, 0x4a, 0x0a, 0x18, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x77,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x73, 0x4f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x49, 0x73, 0x4f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x44, 0x65, 0x66, 0x65, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x44, 0x65, 0x66, 0x65, 0x63, 0x74,
	0x22, 0x4b, 0x0a, 0x19, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x65, 0x61, 0x6d, 0x48, 0x69, 0x67, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x73, 0x4f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x73, 0x4f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x44, 0x65, 0x66, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x44, 0x65, 0x66, 0x65, 0x63, 0x74, 0x22, 0x4a, 0x0a,
	0x18, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x73, 0x4f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x73, 0x4f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x49, 0x73, 0x44, 0x65, 0x66, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x49, 0x73, 0x44, 0x65, 0x66, 0x65, 0x63, 0x74, 0x22, 0x49, 0x0a, 0x17, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x73, 0x4f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x49, 0x73, 0x4f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x44, 0x65,
	0x66, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x44, 0x65,
	0x66, 0x65, 0x63, 0x74, 0x22, 0x4a, 0x0a, 0x18, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x73, 0x4f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x49, 0x73, 0x4f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x44, 0x65, 0x66, 0x65, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x44, 0x65, 0x66, 0x65, 0x63, 0x74,
	0x22, 0x77, 0x0a, 0x14, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x46, 0x6f, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x46, 0x6f, 0x67, 0x52, 0x65, 0x61,
	0x72, 0x52, 0x04, 0x52, 0x65, 0x61, 0x72, 0x12, 0x30, 0x0a, 0x05, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x46, 0x6f, 0x67, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x52, 0x05, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x18, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x46, 0x6f,
	0x67, 0x52, 0x65, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x73, 0x4f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x49, 0x73, 0x4f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x44,
	0x65, 0x66, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x44,
	0x65, 0x66, 0x65, 0x63, 0x74, 0x22, 0x4b, 0x0a, 0x19, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x46, 0x6f, 0x67, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x73, 0x4f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x49, 0x73, 0x4f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x44, 0x65, 0x66, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x44, 0x65, 0x66, 0x65,
	0x63, 0x74, 0x22, 0x4f, 0x0a, 0x1d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x73, 0x4f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x49, 0x73, 0x4f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x44, 0x65, 0x66,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x44, 0x65, 0x66,
	0x65, 0x63, 0x74, 0x22, 0x50, 0x0a, 0x16, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x44,
	0x65, 0x66, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x44,
	0x65, 0x66, 0x65, 0x63, 0x74, 0x22, 0x57, 0x0a, 0x17, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x48, 0x61, 0x7a, 0x61, 0x72, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x44, 0x65, 0x66, 0x65, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x44, 0x65, 0x66, 0x65, 0x63, 0x74, 0x22, 0xa4,
	0x01, 0x0a, 0x23, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x04, 0x4c, 0x65, 0x66, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x52, 0x04,
	0x4c, 0x65, 0x66, 0x74, 0x12, 0x3f, 0x0a, 0x05, 0x52, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x52, 0x05,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x22, 0x67, 0x0a, 0x27, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4c, 0x65, 0x66, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x44, 0x65, 0x66, 0x65, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x44, 0x65, 0x66, 0x65, 0x63, 0x74, 0x22, 0x68,
	0x0a, 0x28, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x49, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x49, 0x73, 0x44, 0x65, 0x66, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x49, 0x73, 0x44, 0x65, 0x66, 0x65, 0x63, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x12, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12,
	0x3d, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x52, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x46,
	0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x1c, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x69, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x50,
	0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x50, 0x61, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x49, 0x73, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49,
	0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x1f, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x50, 0x61,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x69, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x69, 0x6c, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x50, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x50, 0x61,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x4f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x22, 0xff, 0x05, 0x0a, 0x0c,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x09,
	0x52, 0x65, 0x61, 0x72, 0x53, 0x68, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x52, 0x65,
	0x61, 0x72, 0x53, 0x68, 0x61, 0x64, 0x65, 0x52, 0x09, 0x52, 0x65, 0x61, 0x72, 0x53, 0x68, 0x61,
	0x64, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x48, 0x56, 0x41, 0x43, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x48,
	0x56, 0x41, 0x43, 0x52, 0x04, 0x48, 0x56, 0x41, 0x43, 0x12, 0x3d, 0x0a, 0x0c, 0x49, 0x6e, 0x66,
	0x6f, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x49, 0x6e, 0x66, 0x6f,
	0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x53, 0x75, 0x6e, 0x72,
	0x6f, 0x6f, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x75, 0x6e, 0x72, 0x6f, 0x6f, 0x66, 0x52,
	0x07, 0x53, 0x75, 0x6e, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x43, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x52,
	0x65, 0x61, 0x72, 0x76, 0x69, 0x65, 0x77, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0e, 0x52,
	0x65, 0x61, 0x72, 0x76, 0x69, 0x65, 0x77, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a,
	0x05, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x05, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x44, 0x6f, 0x6f, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x04, 0x44, 0x6f, 0x6f, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x44, 0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x44, 0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18,
	0x49, 0x73, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4c, 0x6f, 0x63,
	0x6b, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18,
	0x49, 0x73, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4c, 0x6f, 0x63,
	0x6b, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x53,
	0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53,
	0x65, 0x61, 0x74, 0x50, 0x6f, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0c, 0x53, 0x65, 0x61, 0x74, 0x50, 0x6f, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3a, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x0b,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70,
	0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x49,
	0x73, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69,
	0x7a, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x22, 0x63, 0x0a,
	0x15, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x52, 0x65, 0x61,
	0x72, 0x53, 0x68, 0x61, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x22, 0xbc, 0x03, 0x0a, 0x10, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x12, 0x32, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x49,
	0x73, 0x52, 0x65, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x49, 0x73, 0x52, 0x65,
	0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x36, 0x0a, 0x16, 0x49, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x72,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x16, 0x49, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x72, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x49, 0x73, 0x52,
	0x65, 0x61, 0x72, 0x44, 0x65, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x49, 0x73, 0x52, 0x65, 0x61, 0x72,
	0x44, 0x65, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x38, 0x0a, 0x17, 0x49, 0x73, 0x41, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x17, 0x49, 0x73, 0x41, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x41, 0x6d, 0x62,
	0x69, 0x65, 0x6e, 0x74, 0x41, 0x69, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x15, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e,
	0x74, 0x41, 0x69, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x30, 0x0a, 0x13, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70,
	0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x49, 0x73,
	0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a,
	0x65, 0x22, 0xe1, 0x01, 0x0a, 0x17, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a,
	0x04, 0x52, 0x6f, 0x77, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x31, 0x52, 0x04, 0x52, 0x6f, 0x77, 0x31, 0x12,
	0x30, 0x0a, 0x04, 0x52, 0x6f, 0x77, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x32, 0x52, 0x04, 0x52, 0x6f, 0x77,
	0x32, 0x12, 0x30, 0x0a, 0x04, 0x52, 0x6f, 0x77, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56,
	0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x33, 0x52, 0x04, 0x52,
	0x6f, 0x77, 0x33, 0x12, 0x30, 0x0a, 0x04, 0x52, 0x6f, 0x77, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x34, 0x52,
	0x04, 0x52, 0x6f, 0x77, 0x34, 0x22, 0x9e, 0x01, 0x0a, 0x1b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x6f, 0x77, 0x31, 0x12, 0x3a, 0x0a, 0x06, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x06, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x43, 0x0a, 0x09, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f,
	0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x09, 0x50, 0x61, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x21, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x69,
	0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x69, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x24, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41,
	0x69, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x69, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x1b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x6f, 0x77, 0x32, 0x12, 0x3a, 0x0a, 0x06, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x06, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x43, 0x0a, 0x09, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f,
	0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x09, 0x50, 0x61, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x21, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x69,
	0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x69, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x24, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41,
	0x69, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x69, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x1b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x6f, 0x77, 0x33, 0x12, 0x3a, 0x0a, 0x06, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x77, 0x33, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x06, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x43, 0x0a, 0x09, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f,
	0x77, 0x33, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x09, 0x50, 0x61, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x21, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x33, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x69,
	0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x69, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x24, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x6f, 0x77, 0x33, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41,
	0x69, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x69, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x1b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x6f, 0x77, 0x34, 0x12, 0x3a, 0x0a, 0x06, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x6f, 0x77, 0x34, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x06, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x43, 0x0a, 0x09, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f,
	0x77, 0x34, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x09, 0x50, 0x61, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x21, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x34, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x69,
	0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x69, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x24, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x48, 0x56, 0x41, 0x43, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x6f, 0x77, 0x34, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x46, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41,
	0x69, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x69, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8a, 0x03, 0x0a, 0x18, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x52, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x43, 0x0a, 0x0a, 0x4e, 0x61, 0x76, 0x69,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x74,
	0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x03, 0x48, 0x4d, 0x49, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x74, 0x61, 0x69,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x4d, 0x49, 0x52, 0x03, 0x48, 0x4d, 0x49, 0x12, 0x61, 0x0a,
	0x14, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x74, 0x61,
	0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x53, 0x6d, 0x61, 0x72,
	0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2e, 0x0a, 0x12, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x30, 0x0a, 0x13, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f,
	0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x49,
	0x73, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69,
	0x7a, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x1d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x06,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x74,
	0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x64, 0x52, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x55, 0x52, 0x49, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x55, 0x52, 0x49, 0x12, 0x20, 0x0a, 0x0b,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x55, 0x52, 0x49, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x55, 0x52, 0x49, 0x12, 0x16,
	0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x23, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x74, 0x61, 0x69, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52,
	0x49, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x49, 0x12, 0x22, 0x0a, 0x0c,
	0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x61, 0x74, 0x65,
	0x22, 0x8b, 0x02, 0x0a, 0x22, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x76,
	0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x52, 0x0e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4d, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x47, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x47, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x76, 0x69,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x52, 0x03, 0x4d, 0x61, 0x70, 0x22, 0x6c,
	0x0a, 0x30, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x59, 0x0a, 0x25,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x12, 0x30, 0x0a, 0x13, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x55, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x13, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x55, 0x73, 0x65, 0x64, 0x22, 0xa5, 0x05, 0x0a, 0x1b, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x74, 0x61, 0x69, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x4d, 0x49, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x6f, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x6f, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x44, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x44, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x6e, 0x69,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x75, 0x65, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x55,
	0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x46, 0x75, 0x65, 0x6c, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x46, 0x75, 0x65,
	0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x46, 0x75, 0x65, 0x6c, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x56, 0x45, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x45,
	0x56, 0x45, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x69, 0x72, 0x65, 0x50,
	0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x54, 0x69, 0x72, 0x65, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x65, 0x65, 0x64, 0x55, 0x6e, 0x69, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x65, 0x65, 0x64, 0x55, 0x6e, 0x69,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x45, 0x56, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x55, 0x6e, 0x69,
	0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x45, 0x56, 0x45, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x42, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x61, 0x79, 0x4e, 0x69,
	0x67, 0x68, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44,
	0x61, 0x79, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x49,
	0x73, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x41, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x4f, 0x6e, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x41,
	0x6c, 0x77, 0x61, 0x79, 0x73, 0x4f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x4c, 0x61, 0x73, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4f, 0x66, 0x66, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4f, 0x66, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x84, 0x01, 0x0a, 0x2c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6d, 0x61, 0x72,
	0x74, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x7a, 0x0a, 0x13, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x75, 0x6e, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x12, 0x2f, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53,
	0x75, 0x6e, 0x72, 0x6f, 0x6f, 0x66, 0x53, 0x68, 0x61, 0x64, 0x65, 0x52, 0x05, 0x53, 0x68, 0x61,
	0x64, 0x65, 0x22, 0x66, 0x0a, 0x18, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x53, 0x75, 0x6e, 0x72, 0x6f, 0x6f, 0x66, 0x53, 0x68, 0x61, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x40, 0x0a, 0x1a, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x52, 0x65, 0x61, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x69, 0x6d, 0x6d,
	0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x44, 0x69, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xe1, 0x02, 0x0a,
	0x11, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x47, 0x6c, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x78,
	0x4f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x47, 0x6c, 0x6f, 0x76,
	0x65, 0x42, 0x6f, 0x78, 0x4f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x44, 0x6f, 0x6d, 0x65,
	0x4f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x44, 0x6f, 0x6d, 0x65,
	0x4f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x50, 0x65, 0x72, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41,
	0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x15, 0x50, 0x65, 0x72, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x6d, 0x62, 0x69,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x53, 0x70, 0x6f, 0x74,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53,
	0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x09, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x62,
	0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0c, 0x41, 0x6d, 0x62, 0x69, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x57, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x42, 0x61, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x42, 0x61, 0x72, 0x52, 0x13, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x42, 0x61, 0x72,
	0x22, 0xf0, 0x01, 0x0a, 0x1a, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x33, 0x0a, 0x04, 0x52, 0x6f, 0x77, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x52, 0x04,
	0x52, 0x6f, 0x77, 0x31, 0x12, 0x33, 0x0a, 0x04, 0x52, 0x6f, 0x77, 0x32, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x6f, 0x77, 0x32, 0x52, 0x04, 0x52, 0x6f, 0x77, 0x32, 0x12, 0x33, 0x0a, 0x04, 0x52, 0x6f, 0x77,
	0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x33, 0x52, 0x04, 0x52, 0x6f, 0x77, 0x33, 0x12, 0x33,
	0x0a, 0x04, 0x52, 0x6f, 0x77, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x34, 0x52, 0x04, 0x52,
	0x6f, 0x77, 0x34, 0x22, 0xbf, 0x01, 0x0a, 0x1e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x12, 0x49, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70,
	0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x12, 0x52, 0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x22, 0x7c, 0x0a, 0x28, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x22, 0x7f, 0x0a, 0x2b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xbf, 0x01, 0x0a, 0x1e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x12, 0x49, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53,
	0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f,
	0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x22, 0x7c, 0x0a, 0x28, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x7f, 0x0a, 0x2b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xbf, 0x01, 0x0a, 0x1e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x33, 0x12, 0x49, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x33, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70,
	0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x33, 0x50, 0x61, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x22, 0x7c, 0x0a, 0x28, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x33, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x7f, 0x0a, 0x2b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x33, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x4f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xbf, 0x01, 0x0a, 0x1e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x34, 0x12, 0x49, 0x0a, 0x0a, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x53, 0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x34, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53,
	0x70, 0x6f, 0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x34, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x22, 0x7c, 0x0a, 0x28, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f,
	0x74, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x34, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x4f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x7f, 0x0a, 0x2b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x34, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x4f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x4f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x8f, 0x01, 0x0a, 0x1d, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x62,
	0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x52, 0x6f, 0x77,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x62, 0x69, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x52, 0x04, 0x52, 0x6f, 0x77,
	0x31, 0x12, 0x36, 0x0a, 0x04, 0x52, 0x6f, 0x77, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x6f, 0x77, 0x32, 0x52, 0x04, 0x52, 0x6f, 0x77, 0x32, 0x22, 0xc8, 0x01, 0x0a, 0x21, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x41,
	0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x12,
	0x4c, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x52, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x55, 0x0a,
	0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x22, 0x7f, 0x0a, 0x2b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x82, 0x01, 0x0a, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x62, 0x69, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x4f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xc8, 0x01, 0x0a, 0x21, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x32,
	0x12, 0x4c, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x52, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x55,
	0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x22, 0x7f, 0x0a, 0x2b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x4f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x82, 0x01, 0x0a, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6d, 0x62, 0x69,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73,
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x90, 0x01, 0x0a, 0x24,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x42, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x4c, 0x69, 0x67, 0x68, 0x74,
	0x4f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0x68,
	0x0a, 0x10, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f,
	0x6f, 0x72, 0x12, 0x29, 0x0a, 0x04, 0x52, 0x6f, 0x77, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44,
	0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x31, 0x52, 0x04, 0x52, 0x6f, 0x77, 0x31, 0x12, 0x29, 0x0a,
	0x04, 0x52, 0x6f, 0x77, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f,
	0x77, 0x32, 0x52, 0x04, 0x52, 0x6f, 0x77, 0x32, 0x22, 0xa1, 0x01, 0x0a, 0x14, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77,
	0x31, 0x12, 0x3f, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x31,
	0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0d, 0x50,
	0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x22, 0xb1, 0x02, 0x0a,
	0x1e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f,
	0x72, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x49,
	0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4f,
	0x70, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x3d, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x06,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x49, 0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x53, 0x68, 0x61, 0x64, 0x65, 0x52, 0x05, 0x53, 0x68, 0x61, 0x64, 0x65,
	0x22, 0x72, 0x0a, 0x24, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x22, 0x71, 0x0a, 0x23, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x68, 0x61, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x49,
	0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4f,
	0x70, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0xba, 0x02, 0x0a, 0x21, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x31,
	0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f,
	0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x40, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52,
	0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x64, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x68, 0x61, 0x64, 0x65, 0x52, 0x05, 0x53,
	0x68, 0x61, 0x64, 0x65, 0x22, 0x75, 0x0a, 0x27, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12,
	0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x74, 0x0a, 0x26, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52,
	0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65,
	0x53, 0x68, 0x61, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x22, 0xa1, 0x01, 0x0a, 0x14, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x32, 0x12, 0x3f, 0x0a, 0x0a, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f,
	0x72, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52,
	0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x50,
	0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x22, 0xb1, 0x02, 0x0a, 0x1e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x12, 0x3d, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44,
	0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12,
	0x2c, 0x0a, 0x11, 0x49, 0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x3a, 0x0a,
	0x05, 0x53, 0x68, 0x61, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52,
	0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x68, 0x61,
	0x64, 0x65, 0x52, 0x05, 0x53, 0x68, 0x61, 0x64, 0x65, 0x22, 0x72, 0x0a, 0x24, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77,
	0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x71, 0x0a,
	0x23, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f,
	0x72, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53,
	0x68, 0x61, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x22, 0xba, 0x02, 0x0a, 0x21, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x40,
	0x0a, 0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f,
	0x72, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x3d,
	0x0a, 0x05, 0x53, 0x68, 0x61, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72,
	0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x53, 0x68, 0x61, 0x64, 0x65, 0x52, 0x05, 0x53, 0x68, 0x61, 0x64, 0x65, 0x22, 0x75, 0x0a,
	0x27, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f,
	0x72, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x22, 0x74, 0x0a, 0x26, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x68, 0x61, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x68, 0x0a, 0x10, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x12, 0x29,
	0x0a, 0x04, 0x52, 0x6f, 0x77, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x6f, 0x77, 0x31, 0x52, 0x04, 0x52, 0x6f, 0x77, 0x31, 0x12, 0x29, 0x0a, 0x04, 0x52, 0x6f, 0x77,
	0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x52, 0x04,
	0x52, 0x6f, 0x77, 0x32, 0x22, 0xd6, 0x01, 0x0a, 0x14, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x12, 0x3f, 0x0a,
	0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x52, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x33,
	0x0a, 0x06, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x52, 0x06, 0x4d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77,
	0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0d,
	0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x22, 0xb7, 0x05,
	0x0a, 0x1e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64,
	0x12, 0x43, 0x0a, 0x08, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x08, 0x4f, 0x63, 0x63,
	0x75, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x42, 0x65, 0x6c, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x42, 0x65, 0x6c, 0x74, 0x65,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x74, 0x42, 0x65, 0x6c, 0x74, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x53, 0x65, 0x61, 0x74, 0x42,
	0x65, 0x6c, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x65, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x48, 0x65, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x48, 0x65, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4d, 0x61,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6c,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x54, 0x69, 0x6c, 0x74, 0x12, 0x43, 0x0a,
	0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65,
	0x73, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x53, 0x65, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x52,
	0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x41, 0x69, 0x72,
	0x62, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x41, 0x69, 0x72, 0x62, 0x61, 0x67,
	0x52, 0x06, 0x41, 0x69, 0x72, 0x62, 0x61, 0x67, 0x12, 0x3d, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52,
	0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x7b, 0x0a, 0x26, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e,
	0x74, 0x12, 0x51, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x22, 0x64, 0x0a, 0x30, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0xdf, 0x01, 0x0a, 0x26, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63,
	0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x45, 0x0a, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x52, 0x06,
	0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12, 0x54, 0x0a, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f,
	0x6c, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f,
	0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x2c,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x4d,
	0x0a, 0x31, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3f, 0x0a,
	0x25, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53,
	0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x56,
	0x0a, 0x26, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0x46, 0x0a, 0x24, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x41, 0x69, 0x72, 0x62, 0x61, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x49, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x22, 0xac,
	0x05, 0x0a, 0x24, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53,
	0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x57, 0x61, 0x72,
	0x6d, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x43, 0x6f, 0x6f, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x49, 0x73, 0x43, 0x6f,
	0x6f, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x49,
	0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63,
	0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x55, 0x70,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77,
	0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a,
	0x14, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x54,
	0x69, 0x6c, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x12, 0x34, 0x0a, 0x15, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x77,
	0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x49, 0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72,
	0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65,
	0x73, 0x74, 0x12, 0x46, 0x0a, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x49, 0x0a, 0x08, 0x48, 0x65,
	0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x48, 0x65, 0x61,
	0x64, 0x72, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xcd, 0x02,
	0x0a, 0x2c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x38,
	0x0a, 0x17, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x17, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x49, 0x73, 0x52, 0x65,
	0x63, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x49, 0x73, 0x52, 0x65,
	0x63, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x4b, 0x0a, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72,
	0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x52, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61,
	0x72, 0x12, 0x5a, 0x0a, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63,
	0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x22, 0xe4, 0x01,
	0x0a, 0x32, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75,
	0x6d, 0x62, 0x61, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4c, 0x65,
	0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x37, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63,
	0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x2b, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77,
	0x31, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x73, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61,
	0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x2c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x48, 0x65, 0x61, 0x64, 0x72,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45,
	0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73,
	0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x49,
	0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63,
	0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x2b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x61,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x49, 0x73, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73,
	0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x49, 0x73, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x22, 0x9b, 0x05, 0x0a, 0x1a, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64,
	0x12, 0x3f, 0x0a, 0x08, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4f,
	0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x08, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x42, 0x65, 0x6c, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x42, 0x65, 0x6c, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x53, 0x65, 0x61, 0x74, 0x42, 0x65, 0x6c, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x53, 0x65, 0x61, 0x74, 0x42, 0x65, 0x6c, 0x74, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x26, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6f, 0x6c, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6c, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x04, 0x54, 0x69, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x42, 0x61, 0x63,
	0x6b, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f,
	0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x53, 0x65,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f,
	0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x64,
	0x72, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77,
	0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x52,
	0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x41, 0x69, 0x72,
	0x62, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31,
	0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x41, 0x69, 0x72, 0x62, 0x61, 0x67, 0x52, 0x06, 0x41, 0x69,
	0x72, 0x62, 0x61, 0x67, 0x12, 0x39, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22,
	0x73, 0x0a, 0x22, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53,
	0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4f, 0x63, 0x63,
	0x75, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31,
	0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x2c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0xd3, 0x01, 0x0a, 0x22, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62,
	0x61, 0x72, 0x52, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12, 0x50, 0x0a, 0x0b, 0x53, 0x69,
	0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x22, 0x5c, 0x0a, 0x28,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65,
	0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x49, 0x0a, 0x2d, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f,
	0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74,
	0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3b, 0x0a, 0x21, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x22, 0x52, 0x0a, 0x22, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0x42, 0x0a, 0x20, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x41, 0x69, 0x72, 0x62, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x49, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x22, 0x98, 0x05, 0x0a, 0x20, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12,
	0x28, 0x0a, 0x0f, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6d,
	0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x43,
	0x6f, 0x6f, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x49, 0x73, 0x43, 0x6f, 0x6f, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49,
	0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12,
	0x2c, 0x0a, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x42, 0x61,
	0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x49, 0x73, 0x54,
	0x69, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74,
	0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12,
	0x45, 0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x42, 0x61,
	0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x45, 0x0a, 0x08, 0x48, 0x65,
	0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x48,
	0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73,
	0x74, 0x12, 0x42, 0x0a, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x61,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc1, 0x02, 0x0a, 0x28, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x17, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x18,
	0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72,
	0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18,
	0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72,
	0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x06, 0x4c, 0x75, 0x6d, 0x62,
	0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72,
	0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x52, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61,
	0x72, 0x12, 0x56, 0x0a, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73,
	0x74, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x53, 0x69,
	0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x22, 0xe0, 0x01, 0x0a, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f,
	0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61,
	0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12, 0x32, 0x0a, 0x14,
	0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4d, 0x6f,
	0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x49, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45,
	0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49,
	0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0x9d, 0x01, 0x0a,
	0x33, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4c, 0x65,
	0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0x83, 0x01, 0x0a,
	0x27, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x73, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61,
	0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x22, 0xcc, 0x01, 0x0a, 0x28, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72,
	0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x22, 0x85, 0x01, 0x0a, 0x27, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a,
	0x11, 0x49, 0x73, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49,
	0x73, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0xcc, 0x05, 0x0a, 0x21, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f,
	0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x12,
	0x46, 0x0a, 0x08, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x08, 0x4f,
	0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x42, 0x65, 0x6c,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x42, 0x65, 0x6c,
	0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x74, 0x42, 0x65, 0x6c, 0x74, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x53, 0x65, 0x61,
	0x74, 0x42, 0x65, 0x6c, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x48,
	0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x48, 0x65,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x48,
	0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x69, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x54, 0x69, 0x6c, 0x74, 0x12,
	0x46, 0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x42,
	0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50,
	0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x65, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x08,
	0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x48, 0x65, 0x61, 0x64,
	0x72, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x41, 0x69, 0x72, 0x62, 0x61, 0x67, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x41, 0x69, 0x72, 0x62, 0x61, 0x67, 0x52, 0x06,
	0x41, 0x69, 0x72, 0x62, 0x61, 0x67, 0x12, 0x40, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x52, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x81, 0x01, 0x0a, 0x29, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77,
	0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x4f, 0x63,
	0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77,
	0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x4f, 0x63,
	0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x67, 0x0a, 0x33,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0xe8, 0x01, 0x0a, 0x29, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x48, 0x0a,
	0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x52,
	0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12, 0x57, 0x0a, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x42,
	0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72,
	0x22, 0x63, 0x0a, 0x2f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d,
	0x62, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x50, 0x0a, 0x34, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65,
	0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x42, 0x0a, 0x28, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50,
	0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x65, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x59, 0x0a, 0x29, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0x49, 0x0a, 0x27, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x41, 0x69, 0x72, 0x62, 0x61,
	0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x64, 0x22, 0xbb, 0x05, 0x0a, 0x27, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x28, 0x0a,
	0x0f, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6d, 0x65, 0x72,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x43, 0x6f, 0x6f,
	0x6c, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x49, 0x73, 0x43, 0x6f, 0x6f, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a,
	0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b,
	0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x49,
	0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x14, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x49, 0x73, 0x54, 0x69, 0x6c,
	0x74, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x42, 0x61,
	0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x4c, 0x0a,
	0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x07, 0x53,
	0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x53,
	0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x4c, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65,
	0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50,
	0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x48, 0x65, 0x61, 0x64,
	0x72, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d,
	0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xd6, 0x02, 0x0a, 0x2f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72,
	0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x3a, 0x0a,
	0x18, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61,
	0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x18, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61,
	0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x06, 0x4c, 0x75, 0x6d,
	0x62, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31,
	0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61,
	0x72, 0x52, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12, 0x5d, 0x0a, 0x0b, 0x53, 0x69, 0x64,
	0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74,
	0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x53, 0x69, 0x64,
	0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x22, 0xe7, 0x01, 0x0a, 0x35, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77,
	0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62,
	0x61, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45,
	0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4c, 0x65, 0x73, 0x73,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73,
	0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x3a, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61,
	0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f,
	0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x10,
	0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x42, 0x61,
	0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45,
	0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0xd3, 0x01, 0x0a, 0x2f, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x31, 0x50,
	0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73,
	0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45,
	0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63,
	0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0x8c, 0x01, 0x0a,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x31, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x49, 0x73, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a,
	0x11, 0x49, 0x73, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x44, 0x65, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0xd6, 0x01, 0x0a, 0x14,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x6f, 0x77, 0x32, 0x12, 0x3f, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x52, 0x06, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x50, 0x61,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x22, 0xb7, 0x05, 0x0a, 0x1e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x4f, 0x63, 0x63,
	0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x4f,
	0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x08, 0x4f, 0x63, 0x63, 0x75, 0x70,
	0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61,
	0x6e, 0x74, 0x52, 0x08, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x49, 0x73, 0x42, 0x65, 0x6c, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x49, 0x73, 0x42, 0x65, 0x6c, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x74,
	0x42, 0x65, 0x6c, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x53, 0x65, 0x61, 0x74, 0x42, 0x65, 0x6c, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x48, 0x65,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6f, 0x6c, 0x69,
	0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04,
	0x54, 0x69, 0x6c, 0x74, 0x12, 0x43, 0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x52,
	0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x53, 0x65, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77,
	0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x65, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x08, 0x48,
	0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x06, 0x41, 0x69, 0x72, 0x62, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53,
	0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x41, 0x69, 0x72, 0x62, 0x61, 0x67, 0x52, 0x06, 0x41, 0x69, 0x72, 0x62, 0x61, 0x67, 0x12,
	0x3d, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x7b,
	0x0a, 0x26, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65,
	0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x4f, 0x63, 0x63,
	0x75, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x64, 0x0a, 0x30, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x4f, 0x63, 0x63,
	0x75, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x22, 0xdf, 0x01, 0x0a, 0x26, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x52,
	0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c,
	0x75, 0x6d, 0x62, 0x61, 0x72, 0x52, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12, 0x54, 0x0a,
	0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42,
	0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73,
	0x74, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x2c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d,
	0x62, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x4d, 0x0a, 0x31, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53,
	0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x3f, 0x0a, 0x25, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x56, 0x0a, 0x26, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6e, 0x67, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0x46, 0x0a,
	0x24, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x41,
	0x69, 0x72, 0x62, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x64, 0x22, 0xac, 0x05, 0x0a, 0x24, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x28,
	0x0a, 0x0f, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6d, 0x65,
	0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x43, 0x6f,
	0x6f, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x49, 0x73, 0x43, 0x6f, 0x6f, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45,
	0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63,
	0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x49, 0x73, 0x54, 0x69,
	0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x42,
	0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x49,
	0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53,
	0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x52,
	0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x07, 0x53, 0x65, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77,
	0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x49, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x07,
	0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x61, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xcd, 0x02, 0x0a, 0x2c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63,
	0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69,
	0x6e, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e,
	0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12,
	0x3a, 0x0a, 0x18, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x18, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x4b, 0x0a, 0x06, 0x4c,
	0x75, 0x6d, 0x62, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f,
	0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72,
	0x52, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12, 0x5a, 0x0a, 0x0b, 0x53, 0x69, 0x64, 0x65,
	0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65,
	0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c,
	0x73, 0x74, 0x65, 0x72, 0x22, 0xe4, 0x01, 0x0a, 0x32, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63,
	0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x49,
	0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72,
	0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12,
	0x32, 0x0a, 0x14, 0x49, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49,
	0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45,
	0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73,
	0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x37,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65,
	0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72,
	0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x49,
	0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4c, 0x65, 0x73,
	0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22,
	0x87, 0x01, 0x0a, 0x2b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x2a, 0x0a, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49,
	0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61,
	0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x2c, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f,
	0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73,
	0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45,
	0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63,
	0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0x89, 0x01, 0x0a,
	0x2b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x32, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x49, 0x73, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73,
	0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73,
	0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0x9b, 0x05, 0x0a, 0x1a, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77,
	0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x4f, 0x63, 0x63,
	0x75, 0x70, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x4f,
	0x63, 0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x08, 0x4f, 0x63, 0x63, 0x75, 0x70,
	0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32,
	0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x08,
	0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x42, 0x65,
	0x6c, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x42, 0x65,
	0x6c, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x74, 0x42, 0x65, 0x6c, 0x74,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x53, 0x65,
	0x61, 0x74, 0x42, 0x65, 0x6c, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x48,
	0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x69, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x54, 0x69, 0x6c, 0x74,
	0x12, 0x3f, 0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x42,
	0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53,
	0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x3f, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x06, 0x41, 0x69, 0x72, 0x62, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53,
	0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x41, 0x69, 0x72,
	0x62, 0x61, 0x67, 0x52, 0x06, 0x41, 0x69, 0x72, 0x62, 0x61, 0x67, 0x12, 0x39, 0x0a, 0x06, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f,
	0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x06,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22, 0x73, 0x0a, 0x22, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x0a,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53,
	0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4f, 0x63, 0x63,
	0x75, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x2c, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0xd3, 0x01,
	0x0a, 0x22, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x72, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x41,
	0x0a, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72,
	0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x52, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61,
	0x72, 0x12, 0x50, 0x0a, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42,
	0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73,
	0x74, 0x65, 0x72, 0x22, 0x5c, 0x0a, 0x28, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x49, 0x0a, 0x2d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x42,
	0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3b, 0x0a, 0x21,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x52, 0x0a, 0x22, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77,
	0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6e, 0x67, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0x42, 0x0a,
	0x20, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x41, 0x69, 0x72, 0x62, 0x61,
	0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x64, 0x22, 0x98, 0x05, 0x0a, 0x20, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6d,
	0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x43, 0x6f, 0x6f, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x49, 0x73, 0x43, 0x6f, 0x6f,
	0x6c, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x73,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45,
	0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b,
	0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45,
	0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49,
	0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14,
	0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x54, 0x69,
	0x6c, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x12, 0x34, 0x0a, 0x15, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61,
	0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x15, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45,
	0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65,
	0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72,
	0x65, 0x73, 0x74, 0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a,
	0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x45, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08,
	0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x07, 0x4d, 0x61, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32,
	0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc1, 0x02, 0x0a,
	0x28, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x49, 0x73, 0x52,
	0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x49, 0x73, 0x52, 0x65,
	0x63, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12,
	0x47, 0x0a, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72,
	0x52, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12, 0x56, 0x0a, 0x0b, 0x53, 0x69, 0x64, 0x65,
	0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72,
	0x22, 0xe0, 0x01, 0x0a, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d,
	0x62, 0x61, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4c, 0x65, 0x73,
	0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x49,
	0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x33, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74,
	0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x49,
	0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72,
	0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12,
	0x32, 0x0a, 0x14, 0x49, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49,
	0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x27, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x4d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x2a, 0x0a, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49,
	0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61,
	0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0xcc, 0x01, 0x0a, 0x28, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f,
	0x77, 0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x48, 0x65,
	0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x55,
	0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x44, 0x6f,
	0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73,
	0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72,
	0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x27, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77,
	0x32, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x49, 0x73, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49,
	0x73, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x22, 0xcc, 0x05, 0x0a, 0x21, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x4f, 0x63, 0x63, 0x75,
	0x70, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x4f, 0x63,
	0x63, 0x75, 0x70, 0x69, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x08, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50,
	0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x4f, 0x63, 0x63, 0x75,
	0x70, 0x61, 0x6e, 0x74, 0x52, 0x08, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x49, 0x73, 0x42, 0x65, 0x6c, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x49, 0x73, 0x42, 0x65, 0x6c, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65,
	0x61, 0x74, 0x42, 0x65, 0x6c, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x53, 0x65, 0x61, 0x74, 0x42, 0x65, 0x6c, 0x74, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e,
	0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6f,
	0x6c, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x54, 0x69, 0x6c, 0x74, 0x12, 0x46, 0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65,
	0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50,
	0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x43,
	0x0a, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x53, 0x65, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x41,
	0x69, 0x72, 0x62, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f,
	0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x41,
	0x69, 0x72, 0x62, 0x61, 0x67, 0x52, 0x06, 0x41, 0x69, 0x72, 0x62, 0x61, 0x67, 0x12, 0x40, 0x0a,
	0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x22,
	0x81, 0x01, 0x0a, 0x29, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x54, 0x0a,
	0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x22, 0x67, 0x0a, 0x33, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0xe8, 0x01, 0x0a,
	0x29, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65,
	0x63, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x52, 0x65, 0x63,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61,
	0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74,
	0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x52, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12, 0x57,
	0x0a, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53,
	0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x53, 0x69, 0x64, 0x65,
	0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x22, 0x63, 0x0a, 0x2f, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50,
	0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x72, 0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x50, 0x0a, 0x34,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x42,
	0x0a, 0x28, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x22, 0x59, 0x0a, 0x29, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x6e, 0x67, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0x49, 0x0a,
	0x27, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x41, 0x69, 0x72, 0x62, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x22, 0xbb, 0x05, 0x0a, 0x27, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77,
	0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6d, 0x65, 0x72,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x49,
	0x73, 0x57, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x49, 0x73, 0x43, 0x6f, 0x6f, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x49, 0x73, 0x43, 0x6f, 0x6f, 0x6c, 0x65,
	0x72, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x73, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61,
	0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x44,
	0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73,
	0x54, 0x69, 0x6c, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x34,
	0x0a, 0x15, 0x49, 0x73, 0x54, 0x69, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x49,
	0x73, 0x54, 0x69, 0x6c, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65,
	0x73, 0x74, 0x12, 0x49, 0x0a, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x53, 0x65, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x53, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x4c, 0x0a,
	0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73,
	0x74, 0x52, 0x08, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x07, 0x4d,
	0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d,
	0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd6, 0x02, 0x0a, 0x2f, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50,
	0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x49, 0x73,
	0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x49, 0x73, 0x52,
	0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6c, 0x69, 0x6e,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x12, 0x4e, 0x0a, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53,
	0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65,
	0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x52, 0x06, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72,
	0x12, 0x5d, 0x0a, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42,
	0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x0b, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x22,
	0xe7, 0x01, 0x0a, 0x35, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72,
	0x65, 0x73, 0x74, 0x4c, 0x75, 0x6d, 0x62, 0x61, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4d,
	0x6f, 0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a,
	0x14, 0x49, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4c,
	0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x44, 0x6f,
	0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x3a, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f,
	0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x72, 0x65, 0x73, 0x74, 0x53, 0x69, 0x64,
	0x65, 0x42, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x4d, 0x6f,
	0x72, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14,
	0x49, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x4c, 0x65,
	0x73, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x22, 0x8a, 0x01, 0x0a, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x53, 0x65, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x49,
	0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12,
	0x2c, 0x0a, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x42, 0x61,
	0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0xd3, 0x01,
	0x0a, 0x2f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x48, 0x65, 0x61, 0x64, 0x72, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x55, 0x70, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x44, 0x6f,
	0x77, 0x6e, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x73, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x49, 0x73, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77,
	0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x6f, 0x77, 0x32, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4d,
	0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x49, 0x73, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x49, 0x73, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x22, 0x31, 0x0a, 0x17, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x95, 0x05, 0x0a, 0x0b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x41, 0x44, 0x41, 0x53, 0x12, 0x30, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41,
	0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x36, 0x0a, 0x16, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x41, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x41, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x3f, 0x0a, 0x0d, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x41, 0x44, 0x41, 0x53, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x52, 0x0d, 0x43, 0x72, 0x75, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x12, 0x5a, 0x0a, 0x16, 0x4c, 0x61, 0x6e, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72,
	0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x44, 0x41, 0x53, 0x4c, 0x61,
	0x6e, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x4c, 0x61, 0x6e, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x11,
	0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x41, 0x44, 0x41, 0x53, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x03, 0x41, 0x42, 0x53,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x41, 0x44, 0x41, 0x53, 0x41, 0x42, 0x53, 0x52, 0x03, 0x41, 0x42, 0x53, 0x12, 0x21, 0x0a, 0x03,
	0x54, 0x43, 0x53, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x41, 0x44, 0x41, 0x53, 0x54, 0x43, 0x53, 0x52, 0x03, 0x54, 0x43, 0x53, 0x12,
	0x21, 0x0a, 0x03, 0x45, 0x53, 0x43, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x44, 0x41, 0x53, 0x45, 0x53, 0x43, 0x52, 0x03, 0x45,
	0x53, 0x43, 0x12, 0x21, 0x0a, 0x03, 0x45, 0x42, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x44, 0x41, 0x53, 0x45, 0x42, 0x44,
	0x52, 0x03, 0x45, 0x42, 0x44, 0x12, 0x21, 0x0a, 0x03, 0x45, 0x42, 0x41, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x44, 0x41, 0x53,
	0x45, 0x42, 0x41, 0x52, 0x03, 0x45, 0x42, 0x41, 0x12, 0x21, 0x0a, 0x03, 0x44, 0x4d, 0x53, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41,
	0x44, 0x41, 0x53, 0x44, 0x4d, 0x53, 0x52, 0x03, 0x44, 0x4d, 0x53, 0x12, 0x2e, 0x0a, 0x12, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70,
	0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x49,
	0x73, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69,
	0x7a, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x22, 0x8a, 0x01,
	0x0a, 0x18, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x44, 0x41, 0x53, 0x43, 0x72, 0x75,
	0x69, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49,
	0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x65, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x49, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x79, 0x0a, 0x21, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x44, 0x41, 0x53, 0x4c, 0x61, 0x6e, 0x65, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x49,
	0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x74, 0x0a, 0x1c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x41, 0x44, 0x41, 0x53, 0x4f, 0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x66, 0x0a, 0x0e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x44, 0x41, 0x53, 0x41, 0x42, 0x53, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x49,
	0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x22, 0x66, 0x0a, 0x0e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x44,
	0x41, 0x53, 0x54, 0x43, 0x53, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x73, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0xe5, 0x01, 0x0a, 0x0e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x44, 0x41, 0x53, 0x45, 0x53, 0x43, 0x12, 0x1c,
	0x0a, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x49, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49,
	0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x67, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x67,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x19, 0x49, 0x73, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67,
	0x43, 0x72, 0x6f, 0x73, 0x73, 0x57, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x49, 0x73, 0x53, 0x74, 0x72, 0x6f, 0x6e,
	0x67, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x57, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x52, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x41, 0x44, 0x41, 0x53, 0x45, 0x53, 0x43, 0x52, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x52, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x1a, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41,
	0x44, 0x41, 0x53, 0x45, 0x53, 0x43, 0x52, 0x6f, 0x61, 0x64, 0x46, 0x72, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x4d, 0x6f, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x62, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x4c, 0x6f, 0x77, 0x65,
	0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x70, 0x65, 0x72, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x55, 0x70, 0x70, 0x65,
	0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x66, 0x0a, 0x0e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x41, 0x44, 0x41, 0x53, 0x45, 0x42, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0x66,
	0x0a, 0x0e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x41, 0x44, 0x41, 0x53, 0x45, 0x42, 0x41,
	0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x49, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x49, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x45,
	0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x22, 0x66, 0x0a, 0x0e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x41, 0x44, 0x41, 0x53, 0x44, 0x4d, 0x53, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x57, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x57, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xe4,
	0x02, 0x0a, 0x0e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x04, 0x41, 0x78, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78,
	0x6c, 0x65, 0x52, 0x04, 0x41, 0x78, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x78, 0x6c, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x78, 0x6c,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x50, 0x61, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x52, 0x0c, 0x50, 0x61, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x53, 0x74, 0x65, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x53,
	0x74, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x0d, 0x53, 0x74,
	0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x3c, 0x0a, 0x0b, 0x41,
	0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x41, 0x63,
	0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x42, 0x72, 0x61,
	0x6b, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x52, 0x05,
	0x42, 0x72, 0x61, 0x6b, 0x65, 0x22, 0x6e, 0x0a, 0x12, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x52,
	0x6f, 0x77, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f,
	0x77, 0x31, 0x52, 0x04, 0x52, 0x6f, 0x77, 0x31, 0x12, 0x2b, 0x0a, 0x04, 0x52, 0x6f, 0x77, 0x32,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x52,
	0x04, 0x52, 0x6f, 0x77, 0x32, 0x22, 0xa2, 0x03, 0x0a, 0x16, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x31,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x72, 0x65, 0x61, 0x64, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x54, 0x72, 0x65, 0x61, 0x64, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x1c, 0x0a, 0x09, 0x41, 0x78, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x78, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1e,
	0x0a, 0x0a, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x44, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x44, 0x69, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x41, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x53, 0x74, 0x65,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x69,
	0x72, 0x65, 0x44, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0c, 0x54, 0x69, 0x72, 0x65, 0x44, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x69, 0x72, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x54, 0x69, 0x72, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x0f,
	0x54, 0x69, 0x72, 0x65, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x54, 0x69, 0x72, 0x65, 0x41, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x32, 0x0a, 0x05, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x31, 0x57, 0x68,
	0x65, 0x65, 0x6c, 0x52, 0x05, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x22, 0x8c, 0x01, 0x0a, 0x1b, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c,
	0x65, 0x52, 0x6f, 0x77, 0x31, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x34, 0x0a, 0x04, 0x4c, 0x65,
	0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77,
	0x31, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x52, 0x04, 0x4c, 0x65, 0x66, 0x74,
	0x12, 0x37, 0x0a, 0x05, 0x52, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x31, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x05, 0x52, 0x69, 0x67, 0x68, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x1f, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65,
	0x52, 0x6f, 0x77, 0x31, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x3b, 0x0a,
	0x05, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c,
	0x65, 0x52, 0x6f, 0x77, 0x31, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x42, 0x72,
	0x61, 0x6b, 0x65, 0x52, 0x05, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x54, 0x69,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77,
	0x31, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x72, 0x65, 0x52, 0x04,
	0x54, 0x69, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x24, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c,
	0x65, 0x52, 0x6f, 0x77, 0x31, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x42, 0x72,
	0x61, 0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x49, 0x73,
	0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x77, 0x12, 0x18, 0x0a,
	0x07, 0x50, 0x61, 0x64, 0x57, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x50, 0x61, 0x64, 0x57, 0x65, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x42, 0x72, 0x61,
	0x6b, 0x65, 0x73, 0x57, 0x6f, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49,
	0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x73, 0x57, 0x6f, 0x72, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x23,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78,
	0x6c, 0x65, 0x52, 0x6f, 0x77, 0x31, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x54,
	0x69, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x49, 0x73, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75,
	0x72, 0x65, 0x4c, 0x6f, 0x77, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x20, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f,
	0x77, 0x31, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3c, 0x0a, 0x05,
	0x42, 0x72, 0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65,
	0x52, 0x6f, 0x77, 0x31, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x72,
	0x61, 0x6b, 0x65, 0x52, 0x05, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x54, 0x69,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77,
	0x31, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x69, 0x72, 0x65, 0x52,
	0x04, 0x54, 0x69, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x25,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78,
	0x6c, 0x65, 0x52, 0x6f, 0x77, 0x31, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x42, 0x72, 0x61, 0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x46, 0x6c, 0x75, 0x69, 0x64,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x46, 0x6c, 0x75, 0x69, 0x64,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x49, 0x73, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x77, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x61, 0x64, 0x57, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x50, 0x61, 0x64, 0x57, 0x65, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x42,
	0x72, 0x61, 0x6b, 0x65, 0x73, 0x57, 0x6f, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x49, 0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x73, 0x57, 0x6f, 0x72, 0x6e, 0x22, 0x8a, 0x01,
	0x0a, 0x24, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x31, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x54, 0x69, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75,
	0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65,
	0x4c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x50, 0x72, 0x65,
	0x73, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x77, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xa2, 0x03, 0x0a, 0x16, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c,
	0x65, 0x52, 0x6f, 0x77, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x72, 0x65, 0x61, 0x64, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x54, 0x72, 0x65, 0x61, 0x64,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x78, 0x6c, 0x65, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x78, 0x6c, 0x65, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x44, 0x69, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x57, 0x68, 0x65, 0x65,
	0x6c, 0x44, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x68, 0x65,
	0x65, 0x6c, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x57,
	0x68, 0x65, 0x65, 0x6c, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74, 0x65,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0d, 0x53, 0x74, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x54, 0x69, 0x72, 0x65, 0x44, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x54, 0x69, 0x72, 0x65, 0x44, 0x69, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x72, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x54, 0x69, 0x72, 0x65, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x69, 0x72, 0x65, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x54, 0x69, 0x72, 0x65,
	0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x32, 0x0a, 0x05, 0x57,
	0x68, 0x65, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52,
	0x6f, 0x77, 0x32, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x05, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x22,
	0x8c, 0x01, 0x0a, 0x1b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12,
	0x34, 0x0a, 0x04, 0x4c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78,
	0x6c, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x52,
	0x04, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x52, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x57, 0x68, 0x65,
	0x65, 0x6c, 0x52, 0x69, 0x67, 0x68, 0x74, 0x52, 0x05, 0x52, 0x69, 0x67, 0x68, 0x74, 0x22, 0xae,
	0x01, 0x0a, 0x1f, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x4c, 0x65,
	0x66, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x4c,
	0x65, 0x66, 0x74, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x52, 0x05, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x12,
	0x38, 0x0a, 0x04, 0x54, 0x69, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78,
	0x6c, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x54,
	0x69, 0x72, 0x65, 0x52, 0x04, 0x54, 0x69, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x22,
	0xae, 0x01, 0x0a, 0x24, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x4c,
	0x65, 0x66, 0x74, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6c, 0x75, 0x69,
	0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x46, 0x6c,
	0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x46, 0x6c,
	0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x49, 0x73, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c,
	0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x64, 0x57, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x50, 0x61, 0x64, 0x57, 0x65, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x49, 0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x73, 0x57, 0x6f, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x73, 0x57, 0x6f, 0x72, 0x6e,
	0x22, 0x89, 0x01, 0x0a, 0x23, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x57, 0x68, 0x65, 0x65, 0x6c,
	0x4c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x65, 0x73,
	0x73, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x65, 0x73,
	0x73, 0x75, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75,
	0x72, 0x65, 0x4c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x50,
	0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x77, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xb1, 0x01, 0x0a,
	0x20, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41,
	0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x3c, 0x0a, 0x05, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x52, 0x05, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x12,
	0x39, 0x0a, 0x04, 0x54, 0x69, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78,
	0x6c, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x54, 0x69, 0x72, 0x65, 0x52, 0x04, 0x54, 0x69, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x22, 0xaf, 0x01, 0x0a, 0x25, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x57, 0x68, 0x65, 0x65, 0x6c,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6c,
	0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73,
	0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x49, 0x73, 0x46, 0x6c, 0x75, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x4c, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x64, 0x57, 0x65, 0x61, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x50, 0x61, 0x64, 0x57, 0x65, 0x61, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x49, 0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x73, 0x57, 0x6f, 0x72, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x73, 0x57, 0x6f,
	0x72, 0x6e, 0x22, 0x8a, 0x01, 0x0a, 0x24, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x78, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x57, 0x68, 0x65,
	0x65, 0x6c, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x69, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50,
	0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x50, 0x72, 0x65,
	0x73, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x49, 0x73, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x77, 0x12, 0x20, 0x0a,
	0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0x6a, 0x0a, 0x1a, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x49, 0x73, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x49, 0x73, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x49,
	0x73, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x49, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x1b,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x53, 0x74,
	0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x6e, 0x67, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x41, 0x6e, 0x67, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x54, 0x69, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x48, 0x65, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0x41, 0x0a, 0x19, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x41, 0x63, 0x63,
	0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x65, 0x64, 0x61,
	0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x50, 0x65, 0x64, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87,
	0x01, 0x0a, 0x13, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x42, 0x72, 0x61, 0x6b, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x65, 0x64, 0x61, 0x6c, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x50,
	0x65, 0x64, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x20,
	0x49, 0x73, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63,
	0x79, 0x42, 0x72, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x49, 0x73, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x72, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0xb3, 0x18, 0x0a, 0x0a, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x69, 0x64, 0x73, 0x41,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x50, 0x69, 0x64, 0x73, 0x41, 0x12, 0x14, 0x0a,
	0x05, 0x50, 0x69, 0x64, 0x73, 0x42, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x50, 0x69,
	0x64, 0x73, 0x42, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x69, 0x64, 0x73, 0x43, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x50, 0x69, 0x64, 0x73, 0x43, 0x12, 0x29, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x54, 0x43, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x44, 0x54, 0x43, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x44, 0x54, 0x43, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x44, 0x54, 0x43, 0x12, 0x1e, 0x0a, 0x0a,
	0x46, 0x75, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x46, 0x75, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x12,
	0x43, 0x6f, 0x6f, 0x6c, 0x61, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x43, 0x6f, 0x6f, 0x6c, 0x61, 0x6e,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69,
	0x6d, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54,
	0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x31, 0x12, 0x2c, 0x0a, 0x11,
	0x4c, 0x6f, 0x6e, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d,
	0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x4c, 0x6f, 0x6e, 0x67, 0x54, 0x65, 0x72,
	0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x31, 0x12, 0x2e, 0x0a, 0x12, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x32,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72,
	0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x32, 0x12, 0x2c, 0x0a, 0x11, 0x4c, 0x6f,
	0x6e, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x32, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x4c, 0x6f, 0x6e, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x46,
	0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x32, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x75, 0x65, 0x6c,
	0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c,
	0x46, 0x75, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x4d, 0x41, 0x50, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x4d, 0x41, 0x50, 0x12, 0x20,
	0x0a, 0x0b, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0b, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67,
	0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x54,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x6e, 0x74, 0x61, 0x6b, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x49, 0x6e, 0x74, 0x61, 0x6b, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x4d, 0x41, 0x46, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x4d, 0x41, 0x46, 0x12, 0x2a,
	0x0a, 0x10, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74,
	0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x69,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41,
	0x69, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x4f, 0x78, 0x79, 0x67,
	0x65, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x32, 0x42, 0x61, 0x6e, 0x6b,
	0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x32, 0x42, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x1d,
	0x0a, 0x02, 0x4f, 0x32, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x52, 0x02, 0x4f, 0x32, 0x12, 0x22, 0x0a,
	0x0c, 0x4f, 0x42, 0x44, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x4f, 0x42, 0x44, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x34, 0x0a, 0x15, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x73, 0x49, 0x6e, 0x34, 0x42, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x15, 0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x49,
	0x6e, 0x34, 0x42, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x50, 0x54, 0x4f,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73,
	0x50, 0x54, 0x4f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x75, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x52, 0x75, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x4d, 0x49, 0x4c, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x49, 0x4c, 0x12, 0x30, 0x0a,
	0x13, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72,
	0x65, 0x56, 0x61, 0x63, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x46, 0x75, 0x65, 0x6c,
	0x52, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x56, 0x61, 0x63, 0x12,
	0x36, 0x0a, 0x16, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x73,
	0x75, 0x72, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x16, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72,
	0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x4f, 0x32, 0x57, 0x52, 0x18,
	0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f,
	0x42, 0x44, 0x4f, 0x32, 0x57, 0x52, 0x52, 0x04, 0x4f, 0x32, 0x57, 0x52, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x45, 0x47, 0x52, 0x18, 0x21, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x45, 0x47, 0x52,
	0x12, 0x1a, 0x0a, 0x08, 0x45, 0x47, 0x52, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x45, 0x47, 0x52, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x45, 0x56, 0x41, 0x50, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x45, 0x56,
	0x41, 0x50, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x75, 0x65, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x46, 0x75, 0x65, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x32, 0x0a, 0x14, 0x57, 0x61, 0x72, 0x6d, 0x75, 0x70, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65,
	0x44, 0x54, 0x43, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14,
	0x57, 0x61, 0x72, 0x6d, 0x75, 0x70, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x44, 0x54, 0x43, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x12, 0x34, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x53, 0x69, 0x6e, 0x63, 0x65, 0x44, 0x54, 0x43, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x26, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x15, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x6e,
	0x63, 0x65, 0x44, 0x54, 0x43, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x45, 0x56,
	0x41, 0x50, 0x56, 0x61, 0x70, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x45, 0x56, 0x41, 0x50, 0x56, 0x61, 0x70, 0x6f, 0x72,
	0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x42, 0x61, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x42, 0x61, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x79, 0x73, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x79, 0x73, 0x74, 0x52,
	0x08, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x79, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x10, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x10, 0x44, 0x72, 0x69, 0x76, 0x65, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x56,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x41, 0x62,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x3c, 0x0a, 0x19, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x45, 0x71, 0x75, 0x69, 0x76, 0x61, 0x6c, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x19, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x45, 0x71, 0x75, 0x69, 0x76, 0x61, 0x6c, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x3a, 0x0a, 0x18, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x18, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x41,
	0x69, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x2f, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x15, 0x41, 0x6d, 0x62, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x69, 0x72, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x68,
	0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x18,
	0x30, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x68, 0x72, 0x6f,
	0x74, 0x74, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x18, 0x31, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x11, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x12, 0x32, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x12, 0x32, 0x0a, 0x14, 0x41, 0x63,
	0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x18, 0x33, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x12, 0x32,
	0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x18, 0x34, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x41, 0x63,
	0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x63,
	0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x35, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x54, 0x68,
	0x72, 0x6f, 0x74, 0x74, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x49, 0x4c, 0x18, 0x36, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x49, 0x4c, 0x12, 0x30,
	0x0a, 0x13, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x44, 0x54, 0x43, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x44, 0x54, 0x43, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x78, 0x4d, 0x41, 0x46, 0x18, 0x38, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x4d, 0x61, 0x78, 0x4d, 0x41, 0x46, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x75, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x46, 0x75, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x74, 0x68, 0x61, 0x6e, 0x6f, 0x6c, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x45, 0x74,
	0x68, 0x61, 0x6e, 0x6f, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x19,
	0x45, 0x56, 0x41, 0x50, 0x56, 0x61, 0x70, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72,
	0x65, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x19, 0x45, 0x56, 0x41, 0x50, 0x56, 0x61, 0x70, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75,
	0x72, 0x65, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x45, 0x56,
	0x41, 0x50, 0x56, 0x61, 0x70, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x1a,
	0x45, 0x56, 0x41, 0x50, 0x56, 0x61, 0x70, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72,
	0x65, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x4f, 0x32, 0x54, 0x72, 0x69, 0x6d, 0x31, 0x18, 0x3d,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x4f,
	0x32, 0x54, 0x72, 0x69, 0x6d, 0x31, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54,
	0x65, 0x72, 0x6d, 0x4f, 0x32, 0x54, 0x72, 0x69, 0x6d, 0x33, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x10, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x4f, 0x32, 0x54, 0x72, 0x69,
	0x6d, 0x33, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x6f, 0x6e, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x4f, 0x32,
	0x54, 0x72, 0x69, 0x6d, 0x31, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x4c, 0x6f, 0x6e,
	0x67, 0x54, 0x65, 0x72, 0x6d, 0x4f, 0x32, 0x54, 0x72, 0x69, 0x6d, 0x31, 0x12, 0x28, 0x0a, 0x0f,
	0x4c, 0x6f, 0x6e, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x4f, 0x32, 0x54, 0x72, 0x69, 0x6d, 0x33, 0x18,
	0x40, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x4c, 0x6f, 0x6e, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x4f,
	0x32, 0x54, 0x72, 0x69, 0x6d, 0x33, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54,
	0x65, 0x72, 0x6d, 0x4f, 0x32, 0x54, 0x72, 0x69, 0x6d, 0x32, 0x18, 0x41, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x10, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x4f, 0x32, 0x54, 0x72, 0x69,
	0x6d, 0x32, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x4f,
	0x32, 0x54, 0x72, 0x69, 0x6d, 0x34, 0x18, 0x42, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x4f, 0x32, 0x54, 0x72, 0x69, 0x6d, 0x34, 0x12, 0x28,
	0x0a, 0x0f, 0x4c, 0x6f, 0x6e, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x4f, 0x32, 0x54, 0x72, 0x69, 0x6d,
	0x32, 0x18, 0x43, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x4c, 0x6f, 0x6e, 0x67, 0x54, 0x65, 0x72,
	0x6d, 0x4f, 0x32, 0x54, 0x72, 0x69, 0x6d, 0x32, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x6f, 0x6e, 0x67,
	0x54, 0x65, 0x72, 0x6d, 0x4f, 0x32, 0x54, 0x72, 0x69, 0x6d, 0x34, 0x18, 0x44, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0f, 0x4c, 0x6f, 0x6e, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x4f, 0x32, 0x54, 0x72, 0x69,
	0x6d, 0x34, 0x12, 0x3a, 0x0a, 0x18, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x61, 0x69, 0x6c, 0x50, 0x72,
	0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x18, 0x45,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x18, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x61, 0x69, 0x6c, 0x50, 0x72,
	0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x12, 0x40,
	0x0a, 0x1b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x46, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x1b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x36, 0x0a, 0x16, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x47, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x16, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x69, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x48, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0e, 0x4f, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x30, 0x0a, 0x13, 0x46, 0x75, 0x65, 0x6c, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x49, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x46,
	0x75, 0x65, 0x6c, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x18, 0x4a,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x22, 0x6c,
	0x0a, 0x10, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x4d, 0x49, 0x4c, 0x4f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x4d, 0x49, 0x4c, 0x4f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x54, 0x43, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x44, 0x54, 0x43, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x67, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x49, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8e, 0x03, 0x0a,
	0x0c, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x12, 0x2e, 0x0a,
	0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x31, 0x52, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x31, 0x12, 0x2e, 0x0a,
	0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x32, 0x52, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x32, 0x12, 0x2e, 0x0a,
	0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x33, 0x52, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x33, 0x12, 0x2e, 0x0a,
	0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x34, 0x52, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x34, 0x12, 0x2e, 0x0a,
	0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x35, 0x52, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x35, 0x12, 0x2e, 0x0a,
	0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x36, 0x52, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x36, 0x12, 0x2e, 0x0a,
	0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x37, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x37, 0x52, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x37, 0x12, 0x2e, 0x0a,
	0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x38, 0x52, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x38, 0x22, 0x5d, 0x0a,
	0x13, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54,
	0x72, 0x69, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x22, 0x5d, 0x0a, 0x13,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a,
	0x11, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72,
	0x69, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54,
	0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x22, 0x5d, 0x0a, 0x13, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x33, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65,
	0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x22, 0x5d, 0x0a, 0x13, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x34, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72,
	0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x22, 0x5d, 0x0a, 0x13, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x35,
	0x12, 0x18, 0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d,
	0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x22, 0x5d, 0x0a, 0x13, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x36, 0x12,
	0x18, 0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46,
	0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x22, 0x5d, 0x0a, 0x13, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x37, 0x12, 0x18,
	0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75,
	0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x22, 0x5d, 0x0a, 0x13, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x38, 0x12, 0x18, 0x0a,
	0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x46, 0x75, 0x65,
	0x6c, 0x54, 0x72, 0x69, 0x6d, 0x22, 0xa0, 0x03, 0x0a, 0x0e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x57, 0x52, 0x12, 0x30, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x57, 0x52, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x31, 0x52, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x31, 0x12, 0x30, 0x0a, 0x07, 0x53, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x57, 0x52, 0x53, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x32, 0x52, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x32, 0x12, 0x30, 0x0a, 0x07,
	0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x57, 0x52, 0x53, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x33, 0x52, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x33, 0x12, 0x30,
	0x0a, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x57, 0x52,
	0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x34, 0x52, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x34,
	0x12, 0x30, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32,
	0x57, 0x52, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x35, 0x52, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x35, 0x12, 0x30, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x36, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44,
	0x4f, 0x32, 0x57, 0x52, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x36, 0x52, 0x07, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x36, 0x12, 0x30, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x37, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f,
	0x42, 0x44, 0x4f, 0x32, 0x57, 0x52, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x37, 0x52, 0x07, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x37, 0x12, 0x30, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x38, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x57, 0x52, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x38, 0x52,
	0x07, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x38, 0x22, 0x63, 0x0a, 0x15, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x57, 0x52, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x31, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x6f, 0x6c,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x56, 0x6f, 0x6c, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x63, 0x0a,
	0x15, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x57, 0x52, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x22, 0x63, 0x0a, 0x15, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44,
	0x4f, 0x32, 0x57, 0x52, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x4c,
	0x61, 0x6d, 0x62, 0x64, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x4c, 0x61, 0x6d,
	0x62, 0x64, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x15, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x57, 0x52, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x34,
	0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x15,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x57, 0x52, 0x53, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x22, 0x63, 0x0a, 0x15, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f,
	0x32, 0x57, 0x52, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61,
	0x6d, 0x62, 0x64, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x4c, 0x61, 0x6d, 0x62,
	0x64, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x15, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x57, 0x52, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x37, 0x12,
	0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x15, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x4f, 0x32, 0x57, 0x52, 0x53, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x56,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x22, 0x74, 0x0a, 0x12, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x43, 0x61,
	0x74, 0x61, 0x6c, 0x79, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x42, 0x61, 0x6e, 0x6b, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f,
	0x42, 0x44, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x79, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x31, 0x52,
	0x05, 0x42, 0x61, 0x6e, 0x6b, 0x31, 0x12, 0x2e, 0x0a, 0x05, 0x42, 0x61, 0x6e, 0x6b, 0x32, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f,
	0x42, 0x44, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x79, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x32, 0x52,
	0x05, 0x42, 0x61, 0x6e, 0x6b, 0x32, 0x22, 0x61, 0x0a, 0x17, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x4f, 0x42, 0x44, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x79, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6b,
	0x31, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x31, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x32, 0x22, 0x61, 0x0a, 0x17, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x79, 0x73, 0x74, 0x42,
	0x61, 0x6e, 0x6b, 0x32, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x31, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x32, 0x22, 0x76, 0x0a, 0x1a,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x42, 0x44, 0x44, 0x72, 0x69, 0x76, 0x65, 0x43,
	0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73,
	0x4d, 0x49, 0x4c, 0x4f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x4d,
	0x49, 0x4c, 0x4f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x54, 0x43, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x44, 0x54, 0x43, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x49, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xb7, 0x02, 0x0a, 0x0d, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x2a, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c,
	0x49, 0x73, 0x45, 0x79, 0x65, 0x73, 0x4f, 0x6e, 0x52, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x45, 0x79, 0x65, 0x73, 0x4f, 0x6e, 0x52, 0x6f, 0x61, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x49, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x4f, 0x6e, 0x57, 0x68, 0x65,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x49, 0x73, 0x48, 0x61, 0x6e, 0x64,
	0x73, 0x4f, 0x6e, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c,
	0x46, 0x61, 0x74, 0x69, 0x67, 0x75, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0c, 0x46, 0x61, 0x74, 0x69, 0x67, 0x75, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x22, 0x4b,
	0x0a, 0x17, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0x7d, 0x0a, 0x0f, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x12, 0x26,
	0x0a, 0x0e, 0x41, 0x69, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x41, 0x69, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x4c, 0x69, 0x67, 0x68,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x49, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x75,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x4f, 0x0a, 0x13, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x17,
	0x49, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x49,
	0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x7b, 0x0a, 0x0b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x44, 0x49, 0x4d, 0x4f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x49, 0x44, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vspec_proto_rawDescOnce sync.Once
	file_vspec_proto_rawDescData = file_vspec_proto_rawDesc
)

func file_vspec_proto_rawDescGZIP() []byte {
	file_vspec_proto_rawDescOnce.Do(func() {
		file_vspec_proto_rawDescData = protoimpl.X.CompressGZIP(file_vspec_proto_rawDescData)
	})
	return file_vspec_proto_rawDescData
}

var file_vspec_proto_msgTypes = make([]protoimpl.MessageInfo, 290)
var file_vspec_proto_goTypes = []interface{}{
	(*Vehicle)(nil),                                                        // 0: Vehicle
	(*VehicleVersionVSS)(nil),                                              // 1: VehicleVersionVSS
	(*VehicleVehicleIdentification)(nil),                                   // 2: VehicleVehicleIdentification
	(*VehicleLowVoltageBattery)(nil),                                       // 3: VehicleLowVoltageBattery
	(*VehicleAcceleration)(nil),                                            // 4: VehicleAcceleration
	(*VehicleAngularVelocity)(nil),                                         // 5: VehicleAngularVelocity
	(*VehicleTrailer)(nil),                                                 // 6: VehicleTrailer
	(*VehicleCurrentLocation)(nil),                                         // 7: VehicleCurrentLocation
	(*VehicleCurrentLocationGNSSReceiver)(nil),                             // 8: VehicleCurrentLocationGNSSReceiver
	(*VehicleCurrentLocationGNSSReceiverMountingPosition)(nil),             // 9: VehicleCurrentLocationGNSSReceiverMountingPosition
	(*VehiclePowertrain)(nil),                                              // 10: VehiclePowertrain
	(*VehiclePowertrainCombustionEngine)(nil),                              // 11: VehiclePowertrainCombustionEngine
	(*VehiclePowertrainCombustionEngineDieselExhaustFluid)(nil),            // 12: VehiclePowertrainCombustionEngineDieselExhaustFluid
	(*VehiclePowertrainCombustionEngineDieselParticulateFilter)(nil),       // 13: VehiclePowertrainCombustionEngineDieselParticulateFilter
	(*VehiclePowertrainTransmission)(nil),                                  // 14: VehiclePowertrainTransmission
	(*VehiclePowertrainElectricMotor)(nil),                                 // 15: VehiclePowertrainElectricMotor
	(*VehiclePowertrainTractionBattery)(nil),                               // 16: VehiclePowertrainTractionBattery
	(*VehiclePowertrainTractionBatteryTemperature)(nil),                    // 17: VehiclePowertrainTractionBatteryTemperature
	(*VehiclePowertrainTractionBatteryCellVoltage)(nil),                    // 18: VehiclePowertrainTractionBatteryCellVoltage
	(*VehiclePowertrainTractionBatteryStateOfCharge)(nil),                  // 19: VehiclePowertrainTractionBatteryStateOfCharge
	(*VehiclePowertrainTractionBatteryCharging)(nil),                       // 20: VehiclePowertrainTractionBatteryCharging
	(*VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent)(nil), // 21: VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent
	(*VehiclePowertrainTractionBatteryChargingChargeCurrent)(nil),          // 22: VehiclePowertrainTractionBatteryChargingChargeCurrent
	(*VehiclePowertrainTractionBatteryChargingChargeVoltage)(nil),          // 23: VehiclePowertrainTractionBatteryChargingChargeVoltage
	(*VehiclePowertrainTractionBatteryChargingLocation)(nil),               // 24: VehiclePowertrainTractionBatteryChargingLocation
	(*VehiclePowertrainTractionBatteryChargingTimer)(nil),                  // 25: VehiclePowertrainTractionBatteryChargingTimer
	(*VehiclePowertrainTractionBatteryDCDC)(nil),                           // 26: VehiclePowertrainTractionBatteryDCDC
	(*VehiclePowertrainFuelSystem)(nil),                                    // 27: VehiclePowertrainFuelSystem
	(*VehicleBody)(nil),                                                    // 28: VehicleBody
	(*VehicleBodyHood)(nil),                                                // 29: VehicleBodyHood
	(*VehicleBodyTrunk)(nil),                                               // 30: VehicleBodyTrunk
	(*VehicleBodyTrunkFront)(nil),                                          // 31: VehicleBodyTrunkFront
	(*VehicleBodyTrunkRear)(nil),                                           // 32: VehicleBodyTrunkRear
	(*VehicleBodyHorn)(nil),                                                // 33: VehicleBodyHorn
	(*VehicleBodyRaindetection)(nil),                                       // 34: VehicleBodyRaindetection
	(*VehicleBodyWindshield)(nil),                                          // 35: VehicleBodyWindshield
	(*VehicleBodyWindshieldFront)(nil),                                     // 36: VehicleBodyWindshieldFront
	(*VehicleBodyWindshieldFrontWiping)(nil),                               // 37: VehicleBodyWindshieldFrontWiping
	(*VehicleBodyWindshieldFrontWipingSystem)(nil),                         // 38: VehicleBodyWindshieldFrontWipingSystem
	(*VehicleBodyWindshieldFrontWasherFluid)(nil),                          // 39: VehicleBodyWindshieldFrontWasherFluid
	(*VehicleBodyWindshieldRear)(nil),                                      // 40: VehicleBodyWindshieldRear
	(*VehicleBodyWindshieldRearWiping)(nil),                                // 41: VehicleBodyWindshieldRearWiping
	(*VehicleBodyWindshieldRearWipingSystem)(nil),                          // 42: VehicleBodyWindshieldRearWipingSystem
	(*VehicleBodyWindshieldRearWasherFluid)(nil),                           // 43: VehicleBodyWindshieldRearWasherFluid
	(*VehicleBodyLights)(nil),                                              // 44: VehicleBodyLights
	(*VehicleBodyLightsBeam)(nil),                                          // 45: VehicleBodyLightsBeam
	(*VehicleBodyLightsBeamLow)(nil),                                       // 46: VehicleBodyLightsBeamLow
	(*VehicleBodyLightsBeamHigh)(nil),                                      // 47: VehicleBodyLightsBeamHigh
	(*VehicleBodyLightsRunning)(nil),                                       // 48: VehicleBodyLightsRunning
	(*VehicleBodyLightsBackup)(nil),                                        // 49: VehicleBodyLightsBackup
	(*VehicleBodyLightsParking)(nil),                                       // 50: VehicleBodyLightsParking
	(*VehicleBodyLightsFog)(nil),                                           // 51: VehicleBodyLightsFog
	(*VehicleBodyLightsFogRear)(nil),                                       // 52: VehicleBodyLightsFogRear
	(*VehicleBodyLightsFogFront)(nil),                                      // 53: VehicleBodyLightsFogFront
	(*VehicleBodyLightsLicensePlate)(nil),                                  // 54: VehicleBodyLightsLicensePlate
	(*VehicleBodyLightsBrake)(nil),                                         // 55: VehicleBodyLightsBrake
	(*VehicleBodyLightsHazard)(nil),                                        // 56: VehicleBodyLightsHazard
	(*VehicleBodyLightsDirectionIndicator)(nil),                            // 57: VehicleBodyLightsDirectionIndicator
	(*VehicleBodyLightsDirectionIndicatorLeft)(nil),                        // 58: VehicleBodyLightsDirectionIndicatorLeft
	(*VehicleBodyLightsDirectionIndicatorRight)(nil),                       // 59: VehicleBodyLightsDirectionIndicatorRight
	(*VehicleBodyMirrors)(nil),                                             // 60: VehicleBodyMirrors
	(*VehicleBodyMirrorsDriverSide)(nil),                                   // 61: VehicleBodyMirrorsDriverSide
	(*VehicleBodyMirrorsPassengerSide)(nil),                                // 62: VehicleBodyMirrorsPassengerSide
	(*VehicleCabin)(nil),                                                   // 63: VehicleCabin
	(*VehicleCabinRearShade)(nil),                                          // 64: VehicleCabinRearShade
	(*VehicleCabinHVAC)(nil),                                               // 65: VehicleCabinHVAC
	(*VehicleCabinHVACStation)(nil),                                        // 66: VehicleCabinHVACStation
	(*VehicleCabinHVACStationRow1)(nil),                                    // 67: VehicleCabinHVACStationRow1
	(*VehicleCabinHVACStationRow1Driver)(nil),                              // 68: VehicleCabinHVACStationRow1Driver
	(*VehicleCabinHVACStationRow1Passenger)(nil),                           // 69: VehicleCabinHVACStationRow1Passenger
	(*VehicleCabinHVACStationRow2)(nil),                                    // 70: VehicleCabinHVACStationRow2
	(*VehicleCabinHVACStationRow2Driver)(nil),                              // 71: VehicleCabinHVACStationRow2Driver
	(*VehicleCabinHVACStationRow2Passenger)(nil),                           // 72: VehicleCabinHVACStationRow2Passenger
	(*VehicleCabinHVACStationRow3)(nil),                                    // 73: VehicleCabinHVACStationRow3
	(*VehicleCabinHVACStationRow3Driver)(nil),                              // 74: VehicleCabinHVACStationRow3Driver
	(*VehicleCabinHVACStationRow3Passenger)(nil),                           // 75: VehicleCabinHVACStationRow3Passenger
	(*VehicleCabinHVACStationRow4)(nil),                                    // 76: VehicleCabinHVACStationRow4
	(*VehicleCabinHVACStationRow4Driver)(nil),                              // 77: VehicleCabinHVACStationRow4Driver
	(*VehicleCabinHVACStationRow4Passenger)(nil),                           // 78: VehicleCabinHVACStationRow4Passenger
	(*VehicleCabinInfotainment)(nil),                                       // 79: VehicleCabinInfotainment
	(*VehicleCabinInfotainmentMedia)(nil),                                  // 80: VehicleCabinInfotainmentMedia
	(*VehicleCabinInfotainmentMediaPlayed)(nil),                            // 81: VehicleCabinInfotainmentMediaPlayed
	(*VehicleCabinInfotainmentNavigation)(nil),                             // 82: VehicleCabinInfotainmentNavigation
	(*VehicleCabinInfotainmentNavigationDestinationSet)(nil),               // 83: VehicleCabinInfotainmentNavigationDestinationSet
	(*VehicleCabinInfotainmentNavigationMap)(nil),                          // 84: VehicleCabinInfotainmentNavigationMap
	(*VehicleCabinInfotainmentHMI)(nil),                                    // 85: VehicleCabinInfotainmentHMI
	(*VehicleCabinInfotainmentSmartphoneProjection)(nil),                   // 86: VehicleCabinInfotainmentSmartphoneProjection
	(*VehicleCabinSunroof)(nil),                                            // 87: VehicleCabinSunroof
	(*VehicleCabinSunroofShade)(nil),                                       // 88: VehicleCabinSunroofShade
	(*VehicleCabinRearviewMirror)(nil),                                     // 89: VehicleCabinRearviewMirror
	(*VehicleCabinLight)(nil),                                              // 90: VehicleCabinLight
	(*VehicleCabinLightSpotlight)(nil),                                     // 91: VehicleCabinLightSpotlight
	(*VehicleCabinLightSpotlightRow1)(nil),                                 // 92: VehicleCabinLightSpotlightRow1
	(*VehicleCabinLightSpotlightRow1DriverSide)(nil),                       // 93: VehicleCabinLightSpotlightRow1DriverSide
	(*VehicleCabinLightSpotlightRow1PassengerSide)(nil),                    // 94: VehicleCabinLightSpotlightRow1PassengerSide
	(*VehicleCabinLightSpotlightRow2)(nil),                                 // 95: VehicleCabinLightSpotlightRow2
	(*VehicleCabinLightSpotlightRow2DriverSide)(nil),                       // 96: VehicleCabinLightSpotlightRow2DriverSide
	(*VehicleCabinLightSpotlightRow2PassengerSide)(nil),                    // 97: VehicleCabinLightSpotlightRow2PassengerSide
	(*VehicleCabinLightSpotlightRow3)(nil),                                 // 98: VehicleCabinLightSpotlightRow3
	(*VehicleCabinLightSpotlightRow3DriverSide)(nil),                       // 99: VehicleCabinLightSpotlightRow3DriverSide
	(*VehicleCabinLightSpotlightRow3PassengerSide)(nil),                    // 100: VehicleCabinLightSpotlightRow3PassengerSide
	(*VehicleCabinLightSpotlightRow4)(nil),                                 // 101: VehicleCabinLightSpotlightRow4
	(*VehicleCabinLightSpotlightRow4DriverSide)(nil),                       // 102: VehicleCabinLightSpotlightRow4DriverSide
	(*VehicleCabinLightSpotlightRow4PassengerSide)(nil),                    // 103: VehicleCabinLightSpotlightRow4PassengerSide
	(*VehicleCabinLightAmbientLight)(nil),                                  // 104: VehicleCabinLightAmbientLight
	(*VehicleCabinLightAmbientLightRow1)(nil),                              // 105: VehicleCabinLightAmbientLightRow1
	(*VehicleCabinLightAmbientLightRow1DriverSide)(nil),                    // 106: VehicleCabinLightAmbientLightRow1DriverSide
	(*VehicleCabinLightAmbientLightRow1PassengerSide)(nil),                 // 107: VehicleCabinLightAmbientLightRow1PassengerSide
	(*VehicleCabinLightAmbientLightRow2)(nil),                              // 108: VehicleCabinLightAmbientLightRow2
	(*VehicleCabinLightAmbientLightRow2DriverSide)(nil),                    // 109: VehicleCabinLightAmbientLightRow2DriverSide
	(*VehicleCabinLightAmbientLightRow2PassengerSide)(nil),                 // 110: VehicleCabinLightAmbientLightRow2PassengerSide
	(*VehicleCabinLightInteractiveLightBar)(nil),                           // 111: VehicleCabinLightInteractiveLightBar
	(*VehicleCabinDoor)(nil),                                               // 112: VehicleCabinDoor
	(*VehicleCabinDoorRow1)(nil),                                           // 113: VehicleCabinDoorRow1
	(*VehicleCabinDoorRow1DriverSide)(nil),                                 // 114: VehicleCabinDoorRow1DriverSide
	(*VehicleCabinDoorRow1DriverSideWindow)(nil),                           // 115: VehicleCabinDoorRow1DriverSideWindow
	(*VehicleCabinDoorRow1DriverSideShade)(nil),                            // 116: VehicleCabinDoorRow1DriverSideShade
	(*VehicleCabinDoorRow1PassengerSide)(nil),                              // 117: VehicleCabinDoorRow1PassengerSide
	(*VehicleCabinDoorRow1PassengerSideWindow)(nil),                        // 118: VehicleCabinDoorRow1PassengerSideWindow
	(*VehicleCabinDoorRow1PassengerSideShade)(nil),                         // 119: VehicleCabinDoorRow1PassengerSideShade
	(*VehicleCabinDoorRow2)(nil),                                           // 120: VehicleCabinDoorRow2
	(*VehicleCabinDoorRow2DriverSide)(nil),                                 // 121: VehicleCabinDoorRow2DriverSide
	(*VehicleCabinDoorRow2DriverSideWindow)(nil),                           // 122: VehicleCabinDoorRow2DriverSideWindow
	(*VehicleCabinDoorRow2DriverSideShade)(nil),                            // 123: VehicleCabinDoorRow2DriverSideShade
	(*VehicleCabinDoorRow2PassengerSide)(nil),                              // 124: VehicleCabinDoorRow2PassengerSide
	(*VehicleCabinDoorRow2PassengerSideWindow)(nil),                        // 125: VehicleCabinDoorRow2PassengerSideWindow
	(*VehicleCabinDoorRow2PassengerSideShade)(nil),                         // 126: VehicleCabinDoorRow2PassengerSideShade
	(*VehicleCabinSeat)(nil),                                               // 127: VehicleCabinSeat
	(*VehicleCabinSeatRow1)(nil),                                           // 128: VehicleCabinSeatRow1
	(*VehicleCabinSeatRow1DriverSide)(nil),                                 // 129: VehicleCabinSeatRow1DriverSide
	(*VehicleCabinSeatRow1DriverSideOccupant)(nil),                         // 130: VehicleCabinSeatRow1DriverSideOccupant
	(*VehicleCabinSeatRow1DriverSideOccupantIdentifier)(nil),               // 131: VehicleCabinSeatRow1DriverSideOccupantIdentifier
	(*VehicleCabinSeatRow1DriverSideBackrest)(nil),                         // 132: VehicleCabinSeatRow1DriverSideBackrest
	(*VehicleCabinSeatRow1DriverSideBackrestLumbar)(nil),                   // 133: VehicleCabinSeatRow1DriverSideBackrestLumbar
	(*VehicleCabinSeatRow1DriverSideBackrestSideBolster)(nil),              // 134: VehicleCabinSeatRow1DriverSideBackrestSideBolster
	(*VehicleCabinSeatRow1DriverSideSeating)(nil),                          // 135: VehicleCabinSeatRow1DriverSideSeating
	(*VehicleCabinSeatRow1DriverSideHeadrest)(nil),                         // 136: VehicleCabinSeatRow1DriverSideHeadrest
	(*VehicleCabinSeatRow1DriverSideAirbag)(nil),                           // 137: VehicleCabinSeatRow1DriverSideAirbag
	(*VehicleCabinSeatRow1DriverSideSwitch)(nil),                           // 138: VehicleCabinSeatRow1DriverSideSwitch
	(*VehicleCabinSeatRow1DriverSideSwitchBackrest)(nil),                   // 139: VehicleCabinSeatRow1DriverSideSwitchBackrest
	(*VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar)(nil),             // 140: VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar
	(*VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster)(nil),        // 141: VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster
	(*VehicleCabinSeatRow1DriverSideSwitchSeating)(nil),                    // 142: VehicleCabinSeatRow1DriverSideSwitchSeating
	(*VehicleCabinSeatRow1DriverSideSwitchHeadrest)(nil),                   // 143: VehicleCabinSeatRow1DriverSideSwitchHeadrest
	(*VehicleCabinSeatRow1DriverSideSwitchMassage)(nil),                    // 144: VehicleCabinSeatRow1DriverSideSwitchMassage
	(*VehicleCabinSeatRow1Middle)(nil),                                     // 145: VehicleCabinSeatRow1Middle
	(*VehicleCabinSeatRow1MiddleOccupant)(nil),                             // 146: VehicleCabinSeatRow1MiddleOccupant
	(*VehicleCabinSeatRow1MiddleOccupantIdentifier)(nil),                   // 147: VehicleCabinSeatRow1MiddleOccupantIdentifier
	(*VehicleCabinSeatRow1MiddleBackrest)(nil),                             // 148: VehicleCabinSeatRow1MiddleBackrest
	(*VehicleCabinSeatRow1MiddleBackrestLumbar)(nil),                       // 149: VehicleCabinSeatRow1MiddleBackrestLumbar
	(*VehicleCabinSeatRow1MiddleBackrestSideBolster)(nil),                  // 150: VehicleCabinSeatRow1MiddleBackrestSideBolster
	(*VehicleCabinSeatRow1MiddleSeating)(nil),                              // 151: VehicleCabinSeatRow1MiddleSeating
	(*VehicleCabinSeatRow1MiddleHeadrest)(nil),                             // 152: VehicleCabinSeatRow1MiddleHeadrest
	(*VehicleCabinSeatRow1MiddleAirbag)(nil),                               // 153: VehicleCabinSeatRow1MiddleAirbag
	(*VehicleCabinSeatRow1MiddleSwitch)(nil),                               // 154: VehicleCabinSeatRow1MiddleSwitch
	(*VehicleCabinSeatRow1MiddleSwitchBackrest)(nil),                       // 155: VehicleCabinSeatRow1MiddleSwitchBackrest
	(*VehicleCabinSeatRow1MiddleSwitchBackrestLumbar)(nil),                 // 156: VehicleCabinSeatRow1MiddleSwitchBackrestLumbar
	(*VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster)(nil),            // 157: VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster
	(*VehicleCabinSeatRow1MiddleSwitchSeating)(nil),                        // 158: VehicleCabinSeatRow1MiddleSwitchSeating
	(*VehicleCabinSeatRow1MiddleSwitchHeadrest)(nil),                       // 159: VehicleCabinSeatRow1MiddleSwitchHeadrest
	(*VehicleCabinSeatRow1MiddleSwitchMassage)(nil),                        // 160: VehicleCabinSeatRow1MiddleSwitchMassage
	(*VehicleCabinSeatRow1PassengerSide)(nil),                              // 161: VehicleCabinSeatRow1PassengerSide
	(*VehicleCabinSeatRow1PassengerSideOccupant)(nil),                      // 162: VehicleCabinSeatRow1PassengerSideOccupant
	(*VehicleCabinSeatRow1PassengerSideOccupantIdentifier)(nil),            // 163: VehicleCabinSeatRow1PassengerSideOccupantIdentifier
	(*VehicleCabinSeatRow1PassengerSideBackrest)(nil),                      // 164: VehicleCabinSeatRow1PassengerSideBackrest
	(*VehicleCabinSeatRow1PassengerSideBackrestLumbar)(nil),                // 165: VehicleCabinSeatRow1PassengerSideBackrestLumbar
	(*VehicleCabinSeatRow1PassengerSideBackrestSideBolster)(nil),           // 166: VehicleCabinSeatRow1PassengerSideBackrestSideBolster
	(*VehicleCabinSeatRow1PassengerSideSeating)(nil),                       // 167: VehicleCabinSeatRow1PassengerSideSeating
	(*VehicleCabinSeatRow1PassengerSideHeadrest)(nil),                      // 168: VehicleCabinSeatRow1PassengerSideHeadrest
	(*VehicleCabinSeatRow1PassengerSideAirbag)(nil),                        // 169: VehicleCabinSeatRow1PassengerSideAirbag
	(*VehicleCabinSeatRow1PassengerSideSwitch)(nil),                        // 170: VehicleCabinSeatRow1PassengerSideSwitch
	(*VehicleCabinSeatRow1PassengerSideSwitchBackrest)(nil),                // 171: VehicleCabinSeatRow1PassengerSideSwitchBackrest
	(*VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar)(nil),          // 172: VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar
	(*VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster)(nil),     // 173: VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster
	(*VehicleCabinSeatRow1PassengerSideSwitchSeating)(nil),                 // 174: VehicleCabinSeatRow1PassengerSideSwitchSeating
	(*VehicleCabinSeatRow1PassengerSideSwitchHeadrest)(nil),                // 175: VehicleCabinSeatRow1PassengerSideSwitchHeadrest
	(*VehicleCabinSeatRow1PassengerSideSwitchMassage)(nil),                 // 176: VehicleCabinSeatRow1PassengerSideSwitchMassage
	(*VehicleCabinSeatRow2)(nil),                                           // 177: VehicleCabinSeatRow2
	(*VehicleCabinSeatRow2DriverSide)(nil),                                 // 178: VehicleCabinSeatRow2DriverSide
	(*VehicleCabinSeatRow2DriverSideOccupant)(nil),                         // 179: VehicleCabinSeatRow2DriverSideOccupant
	(*VehicleCabinSeatRow2DriverSideOccupantIdentifier)(nil),               // 180: VehicleCabinSeatRow2DriverSideOccupantIdentifier
	(*VehicleCabinSeatRow2DriverSideBackrest)(nil),                         // 181: VehicleCabinSeatRow2DriverSideBackrest
	(*VehicleCabinSeatRow2DriverSideBackrestLumbar)(nil),                   // 182: VehicleCabinSeatRow2DriverSideBackrestLumbar
	(*VehicleCabinSeatRow2DriverSideBackrestSideBolster)(nil),              // 183: VehicleCabinSeatRow2DriverSideBackrestSideBolster
	(*VehicleCabinSeatRow2DriverSideSeating)(nil),                          // 184: VehicleCabinSeatRow2DriverSideSeating
	(*VehicleCabinSeatRow2DriverSideHeadrest)(nil),                         // 185: VehicleCabinSeatRow2DriverSideHeadrest
	(*VehicleCabinSeatRow2DriverSideAirbag)(nil),                           // 186: VehicleCabinSeatRow2DriverSideAirbag
	(*VehicleCabinSeatRow2DriverSideSwitch)(nil),                           // 187: VehicleCabinSeatRow2DriverSideSwitch
	(*VehicleCabinSeatRow2DriverSideSwitchBackrest)(nil),                   // 188: VehicleCabinSeatRow2DriverSideSwitchBackrest
	(*VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar)(nil),             // 189: VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar
	(*VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster)(nil),        // 190: VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster
	(*VehicleCabinSeatRow2DriverSideSwitchSeating)(nil),                    // 191: VehicleCabinSeatRow2DriverSideSwitchSeating
	(*VehicleCabinSeatRow2DriverSideSwitchHeadrest)(nil),                   // 192: VehicleCabinSeatRow2DriverSideSwitchHeadrest
	(*VehicleCabinSeatRow2DriverSideSwitchMassage)(nil),                    // 193: VehicleCabinSeatRow2DriverSideSwitchMassage
	(*VehicleCabinSeatRow2Middle)(nil),                                     // 194: VehicleCabinSeatRow2Middle
	(*VehicleCabinSeatRow2MiddleOccupant)(nil),                             // 195: VehicleCabinSeatRow2MiddleOccupant
	(*VehicleCabinSeatRow2MiddleOccupantIdentifier)(nil),                   // 196: VehicleCabinSeatRow2MiddleOccupantIdentifier
	(*VehicleCabinSeatRow2MiddleBackrest)(nil),                             // 197: VehicleCabinSeatRow2MiddleBackrest
	(*VehicleCabinSeatRow2MiddleBackrestLumbar)(nil),                       // 198: VehicleCabinSeatRow2MiddleBackrestLumbar
	(*VehicleCabinSeatRow2MiddleBackrestSideBolster)(nil),                  // 199: VehicleCabinSeatRow2MiddleBackrestSideBolster
	(*VehicleCabinSeatRow2MiddleSeating)(nil),                              // 200: VehicleCabinSeatRow2MiddleSeating
	(*VehicleCabinSeatRow2MiddleHeadrest)(nil),                             // 201: VehicleCabinSeatRow2MiddleHeadrest
	(*VehicleCabinSeatRow2MiddleAirbag)(nil),                               // 202: VehicleCabinSeatRow2MiddleAirbag
	(*VehicleCabinSeatRow2MiddleSwitch)(nil),                               // 203: VehicleCabinSeatRow2MiddleSwitch
	(*VehicleCabinSeatRow2MiddleSwitchBackrest)(nil),                       // 204: VehicleCabinSeatRow2MiddleSwitchBackrest
	(*VehicleCabinSeatRow2MiddleSwitchBackrestLumbar)(nil),                 // 205: VehicleCabinSeatRow2MiddleSwitchBackrestLumbar
	(*VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster)(nil),            // 206: VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster
	(*VehicleCabinSeatRow2MiddleSwitchSeating)(nil),                        // 207: VehicleCabinSeatRow2MiddleSwitchSeating
	(*VehicleCabinSeatRow2MiddleSwitchHeadrest)(nil),                       // 208: VehicleCabinSeatRow2MiddleSwitchHeadrest
	(*VehicleCabinSeatRow2MiddleSwitchMassage)(nil),                        // 209: VehicleCabinSeatRow2MiddleSwitchMassage
	(*VehicleCabinSeatRow2PassengerSide)(nil),                              // 210: VehicleCabinSeatRow2PassengerSide
	(*VehicleCabinSeatRow2PassengerSideOccupant)(nil),                      // 211: VehicleCabinSeatRow2PassengerSideOccupant
	(*VehicleCabinSeatRow2PassengerSideOccupantIdentifier)(nil),            // 212: VehicleCabinSeatRow2PassengerSideOccupantIdentifier
	(*VehicleCabinSeatRow2PassengerSideBackrest)(nil),                      // 213: VehicleCabinSeatRow2PassengerSideBackrest
	(*VehicleCabinSeatRow2PassengerSideBackrestLumbar)(nil),                // 214: VehicleCabinSeatRow2PassengerSideBackrestLumbar
	(*VehicleCabinSeatRow2PassengerSideBackrestSideBolster)(nil),           // 215: VehicleCabinSeatRow2PassengerSideBackrestSideBolster
	(*VehicleCabinSeatRow2PassengerSideSeating)(nil),                       // 216: VehicleCabinSeatRow2PassengerSideSeating
	(*VehicleCabinSeatRow2PassengerSideHeadrest)(nil),                      // 217: VehicleCabinSeatRow2PassengerSideHeadrest
	(*VehicleCabinSeatRow2PassengerSideAirbag)(nil),                        // 218: VehicleCabinSeatRow2PassengerSideAirbag
	(*VehicleCabinSeatRow2PassengerSideSwitch)(nil),                        // 219: VehicleCabinSeatRow2PassengerSideSwitch
	(*VehicleCabinSeatRow2PassengerSideSwitchBackrest)(nil),                // 220: VehicleCabinSeatRow2PassengerSideSwitchBackrest
	(*VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar)(nil),          // 221: VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar
	(*VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster)(nil),     // 222: VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster
	(*VehicleCabinSeatRow2PassengerSideSwitchSeating)(nil),                 // 223: VehicleCabinSeatRow2PassengerSideSwitchSeating
	(*VehicleCabinSeatRow2PassengerSideSwitchHeadrest)(nil),                // 224: VehicleCabinSeatRow2PassengerSideSwitchHeadrest
	(*VehicleCabinSeatRow2PassengerSideSwitchMassage)(nil),                 // 225: VehicleCabinSeatRow2PassengerSideSwitchMassage
	(*VehicleCabinConvertible)(nil),                                        // 226: VehicleCabinConvertible
	(*VehicleADAS)(nil),                                                    // 227: VehicleADAS
	(*VehicleADASCruiseControl)(nil),                                       // 228: VehicleADASCruiseControl
	(*VehicleADASLaneDepartureDetection)(nil),                              // 229: VehicleADASLaneDepartureDetection
	(*VehicleADASObstacleDetection)(nil),                                   // 230: VehicleADASObstacleDetection
	(*VehicleADASABS)(nil),                                                 // 231: VehicleADASABS
	(*VehicleADASTCS)(nil),                                                 // 232: VehicleADASTCS
	(*VehicleADASESC)(nil),                                                 // 233: VehicleADASESC
	(*VehicleADASESCRoadFriction)(nil),                                     // 234: VehicleADASESCRoadFriction
	(*VehicleADASEBD)(nil),                                                 // 235: VehicleADASEBD
	(*VehicleADASEBA)(nil),                                                 // 236: VehicleADASEBA
	(*VehicleADASDMS)(nil),                                                 // 237: VehicleADASDMS
	(*VehicleChassis)(nil),                                                 // 238: VehicleChassis
	(*VehicleChassisAxle)(nil),                                             // 239: VehicleChassisAxle
	(*VehicleChassisAxleRow1)(nil),                                         // 240: VehicleChassisAxleRow1
	(*VehicleChassisAxleRow1Wheel)(nil),                                    // 241: VehicleChassisAxleRow1Wheel
	(*VehicleChassisAxleRow1WheelLeft)(nil),                                // 242: VehicleChassisAxleRow1WheelLeft
	(*VehicleChassisAxleRow1WheelLeftBrake)(nil),                           // 243: VehicleChassisAxleRow1WheelLeftBrake
	(*VehicleChassisAxleRow1WheelLeftTire)(nil),                            // 244: VehicleChassisAxleRow1WheelLeftTire
	(*VehicleChassisAxleRow1WheelRight)(nil),                               // 245: VehicleChassisAxleRow1WheelRight
	(*VehicleChassisAxleRow1WheelRightBrake)(nil),                          // 246: VehicleChassisAxleRow1WheelRightBrake
	(*VehicleChassisAxleRow1WheelRightTire)(nil),                           // 247: VehicleChassisAxleRow1WheelRightTire
	(*VehicleChassisAxleRow2)(nil),                                         // 248: VehicleChassisAxleRow2
	(*VehicleChassisAxleRow2Wheel)(nil),                                    // 249: VehicleChassisAxleRow2Wheel
	(*VehicleChassisAxleRow2WheelLeft)(nil),                                // 250: VehicleChassisAxleRow2WheelLeft
	(*VehicleChassisAxleRow2WheelLeftBrake)(nil),                           // 251: VehicleChassisAxleRow2WheelLeftBrake
	(*VehicleChassisAxleRow2WheelLeftTire)(nil),                            // 252: VehicleChassisAxleRow2WheelLeftTire
	(*VehicleChassisAxleRow2WheelRight)(nil),                               // 253: VehicleChassisAxleRow2WheelRight
	(*VehicleChassisAxleRow2WheelRightBrake)(nil),                          // 254: VehicleChassisAxleRow2WheelRightBrake
	(*VehicleChassisAxleRow2WheelRightTire)(nil),                           // 255: VehicleChassisAxleRow2WheelRightTire
	(*VehicleChassisParkingBrake)(nil),                                     // 256: VehicleChassisParkingBrake
	(*VehicleChassisSteeringWheel)(nil),                                    // 257: VehicleChassisSteeringWheel
	(*VehicleChassisAccelerator)(nil),                                      // 258: VehicleChassisAccelerator
	(*VehicleChassisBrake)(nil),                                            // 259: VehicleChassisBrake
	(*VehicleOBD)(nil),                                                     // 260: VehicleOBD
	(*VehicleOBDStatus)(nil),                                               // 261: VehicleOBDStatus
	(*VehicleOBDO2)(nil),                                                   // 262: VehicleOBDO2
	(*VehicleOBDO2Sensor1)(nil),                                            // 263: VehicleOBDO2Sensor1
	(*VehicleOBDO2Sensor2)(nil),                                            // 264: VehicleOBDO2Sensor2
	(*VehicleOBDO2Sensor3)(nil),                                            // 265: VehicleOBDO2Sensor3
	(*VehicleOBDO2Sensor4)(nil),                                            // 266: VehicleOBDO2Sensor4
	(*VehicleOBDO2Sensor5)(nil),                                            // 267: VehicleOBDO2Sensor5
	(*VehicleOBDO2Sensor6)(nil),                                            // 268: VehicleOBDO2Sensor6
	(*VehicleOBDO2Sensor7)(nil),                                            // 269: VehicleOBDO2Sensor7
	(*VehicleOBDO2Sensor8)(nil),                                            // 270: VehicleOBDO2Sensor8
	(*VehicleOBDO2WR)(nil),                                                 // 271: VehicleOBDO2WR
	(*VehicleOBDO2WRSensor1)(nil),                                          // 272: VehicleOBDO2WRSensor1
	(*VehicleOBDO2WRSensor2)(nil),                                          // 273: VehicleOBDO2WRSensor2
	(*VehicleOBDO2WRSensor3)(nil),                                          // 274: VehicleOBDO2WRSensor3
	(*VehicleOBDO2WRSensor4)(nil),                                          // 275: VehicleOBDO2WRSensor4
	(*VehicleOBDO2WRSensor5)(nil),                                          // 276: VehicleOBDO2WRSensor5
	(*VehicleOBDO2WRSensor6)(nil),                                          // 277: VehicleOBDO2WRSensor6
	(*VehicleOBDO2WRSensor7)(nil),                                          // 278: VehicleOBDO2WRSensor7
	(*VehicleOBDO2WRSensor8)(nil),                                          // 279: VehicleOBDO2WRSensor8
	(*VehicleOBDCatalyst)(nil),                                             // 280: VehicleOBDCatalyst
	(*VehicleOBDCatalystBank1)(nil),                                        // 281: VehicleOBDCatalystBank1
	(*VehicleOBDCatalystBank2)(nil),                                        // 282: VehicleOBDCatalystBank2
	(*VehicleOBDDriveCycleStatus)(nil),                                     // 283: VehicleOBDDriveCycleStatus
	(*VehicleDriver)(nil),                                                  // 284: VehicleDriver
	(*VehicleDriverIdentifier)(nil),                                        // 285: VehicleDriverIdentifier
	(*VehicleExterior)(nil),                                                // 286: VehicleExterior
	(*VehicleService)(nil),                                                 // 287: VehicleService
	(*VehicleConnectivity)(nil),                                            // 288: VehicleConnectivity
	(*VehicleDIMO)(nil),                                                    // 289: VehicleDIMO
}
var file_vspec_proto_depIdxs = []int32{
	1,   // 0: Vehicle.VersionVSS:type_name -> VehicleVersionVSS
	2,   // 1: Vehicle.VehicleIdentification:type_name -> VehicleVehicleIdentification
	3,   // 2: Vehicle.LowVoltageBattery:type_name -> VehicleLowVoltageBattery
	4,   // 3: Vehicle.Acceleration:type_name -> VehicleAcceleration
	5,   // 4: Vehicle.AngularVelocity:type_name -> VehicleAngularVelocity
	6,   // 5: Vehicle.Trailer:type_name -> VehicleTrailer
	7,   // 6: Vehicle.CurrentLocation:type_name -> VehicleCurrentLocation
	10,  // 7: Vehicle.Powertrain:type_name -> VehiclePowertrain
	28,  // 8: Vehicle.Body:type_name -> VehicleBody
	63,  // 9: Vehicle.Cabin:type_name -> VehicleCabin
	227, // 10: Vehicle.ADAS:type_name -> VehicleADAS
	238, // 11: Vehicle.Chassis:type_name -> VehicleChassis
	260, // 12: Vehicle.OBD:type_name -> VehicleOBD
	284, // 13: Vehicle.Driver:type_name -> VehicleDriver
	286, // 14: Vehicle.Exterior:type_name -> VehicleExterior
	287, // 15: Vehicle.Service:type_name -> VehicleService
	288, // 16: Vehicle.Connectivity:type_name -> VehicleConnectivity
	289, // 17: Vehicle.DIMO:type_name -> VehicleDIMO
	8,   // 18: VehicleCurrentLocation.GNSSReceiver:type_name -> VehicleCurrentLocationGNSSReceiver
	9,   // 19: VehicleCurrentLocationGNSSReceiver.MountingPosition:type_name -> VehicleCurrentLocationGNSSReceiverMountingPosition
	11,  // 20: VehiclePowertrain.CombustionEngine:type_name -> VehiclePowertrainCombustionEngine
	14,  // 21: VehiclePowertrain.Transmission:type_name -> VehiclePowertrainTransmission
	15,  // 22: VehiclePowertrain.ElectricMotor:type_name -> VehiclePowertrainElectricMotor
	16,  // 23: VehiclePowertrain.TractionBattery:type_name -> VehiclePowertrainTractionBattery
	27,  // 24: VehiclePowertrain.FuelSystem:type_name -> VehiclePowertrainFuelSystem
	12,  // 25: VehiclePowertrainCombustionEngine.DieselExhaustFluid:type_name -> VehiclePowertrainCombustionEngineDieselExhaustFluid
	13,  // 26: VehiclePowertrainCombustionEngine.DieselParticulateFilter:type_name -> VehiclePowertrainCombustionEngineDieselParticulateFilter
	17,  // 27: VehiclePowertrainTractionBattery.Temperature:type_name -> VehiclePowertrainTractionBatteryTemperature
	18,  // 28: VehiclePowertrainTractionBattery.CellVoltage:type_name -> VehiclePowertrainTractionBatteryCellVoltage
	19,  // 29: VehiclePowertrainTractionBattery.StateOfCharge:type_name -> VehiclePowertrainTractionBatteryStateOfCharge
	20,  // 30: VehiclePowertrainTractionBattery.Charging:type_name -> VehiclePowertrainTractionBatteryCharging
	26,  // 31: VehiclePowertrainTractionBattery.DCDC:type_name -> VehiclePowertrainTractionBatteryDCDC
	21,  // 32: VehiclePowertrainTractionBatteryCharging.MaximumChargingCurrent:type_name -> VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent
	22,  // 33: VehiclePowertrainTractionBatteryCharging.ChargeCurrent:type_name -> VehiclePowertrainTractionBatteryChargingChargeCurrent
	23,  // 34: VehiclePowertrainTractionBatteryCharging.ChargeVoltage:type_name -> VehiclePowertrainTractionBatteryChargingChargeVoltage
	24,  // 35: VehiclePowertrainTractionBatteryCharging.Location:type_name -> VehiclePowertrainTractionBatteryChargingLocation
	25,  // 36: VehiclePowertrainTractionBatteryCharging.Timer:type_name -> VehiclePowertrainTractionBatteryChargingTimer
	29,  // 37: VehicleBody.Hood:type_name -> VehicleBodyHood
	30,  // 38: VehicleBody.Trunk:type_name -> VehicleBodyTrunk
	33,  // 39: VehicleBody.Horn:type_name -> VehicleBodyHorn
	34,  // 40: VehicleBody.Raindetection:type_name -> VehicleBodyRaindetection
	35,  // 41: VehicleBody.Windshield:type_name -> VehicleBodyWindshield
	44,  // 42: VehicleBody.Lights:type_name -> VehicleBodyLights
	60,  // 43: VehicleBody.Mirrors:type_name -> VehicleBodyMirrors
	31,  // 44: VehicleBodyTrunk.Front:type_name -> VehicleBodyTrunkFront
	32,  // 45: VehicleBodyTrunk.Rear:type_name -> VehicleBodyTrunkRear
	36,  // 46: VehicleBodyWindshield.Front:type_name -> VehicleBodyWindshieldFront
	40,  // 47: VehicleBodyWindshield.Rear:type_name -> VehicleBodyWindshieldRear
	37,  // 48: VehicleBodyWindshieldFront.Wiping:type_name -> VehicleBodyWindshieldFrontWiping
	39,  // 49: VehicleBodyWindshieldFront.WasherFluid:type_name -> VehicleBodyWindshieldFrontWasherFluid
	38,  // 50: VehicleBodyWindshieldFrontWiping.System:type_name -> VehicleBodyWindshieldFrontWipingSystem
	41,  // 51: VehicleBodyWindshieldRear.Wiping:type_name -> VehicleBodyWindshieldRearWiping
	43,  // 52: VehicleBodyWindshieldRear.WasherFluid:type_name -> VehicleBodyWindshieldRearWasherFluid
	42,  // 53: VehicleBodyWindshieldRearWiping.System:type_name -> VehicleBodyWindshieldRearWipingSystem
	45,  // 54: VehicleBodyLights.Beam:type_name -> VehicleBodyLightsBeam
	48,  // 55: VehicleBodyLights.Running:type_name -> VehicleBodyLightsRunning
	49,  // 56: VehicleBodyLights.Backup:type_name -> VehicleBodyLightsBackup
	50,  // 57: VehicleBodyLights.Parking:type_name -> VehicleBodyLightsParking
	51,  // 58: VehicleBodyLights.Fog:type_name -> VehicleBodyLightsFog
	54,  // 59: VehicleBodyLights.LicensePlate:type_name -> VehicleBodyLightsLicensePlate
	55,  // 60: VehicleBodyLights.Brake:type_name -> VehicleBodyLightsBrake
	56,  // 61: VehicleBodyLights.Hazard:type_name -> VehicleBodyLightsHazard
	57,  // 62: VehicleBodyLights.DirectionIndicator:type_name -> VehicleBodyLightsDirectionIndicator
	46,  // 63: VehicleBodyLightsBeam.Low:type_name -> VehicleBodyLightsBeamLow
	47,  // 64: VehicleBodyLightsBeam.High:type_name -> VehicleBodyLightsBeamHigh
	52,  // 65: VehicleBodyLightsFog.Rear:type_name -> VehicleBodyLightsFogRear
	53,  // 66: VehicleBodyLightsFog.Front:type_name -> VehicleBodyLightsFogFront
	58,  // 67: VehicleBodyLightsDirectionIndicator.Left:type_name -> VehicleBodyLightsDirectionIndicatorLeft
	59,  // 68: VehicleBodyLightsDirectionIndicator.Right:type_name -> VehicleBodyLightsDirectionIndicatorRight
	61,  // 69: VehicleBodyMirrors.DriverSide:type_name -> VehicleBodyMirrorsDriverSide
	62,  // 70: VehicleBodyMirrors.PassengerSide:type_name -> VehicleBodyMirrorsPassengerSide
	64,  // 71: VehicleCabin.RearShade:type_name -> VehicleCabinRearShade
	65,  // 72: VehicleCabin.HVAC:type_name -> VehicleCabinHVAC
	79,  // 73: VehicleCabin.Infotainment:type_name -> VehicleCabinInfotainment
	87,  // 74: VehicleCabin.Sunroof:type_name -> VehicleCabinSunroof
	89,  // 75: VehicleCabin.RearviewMirror:type_name -> VehicleCabinRearviewMirror
	90,  // 76: VehicleCabin.Light:type_name -> VehicleCabinLight
	112, // 77: VehicleCabin.Door:type_name -> VehicleCabinDoor
	127, // 78: VehicleCabin.Seat:type_name -> VehicleCabinSeat
	226, // 79: VehicleCabin.Convertible:type_name -> VehicleCabinConvertible
	66,  // 80: VehicleCabinHVAC.Station:type_name -> VehicleCabinHVACStation
	67,  // 81: VehicleCabinHVACStation.Row1:type_name -> VehicleCabinHVACStationRow1
	70,  // 82: VehicleCabinHVACStation.Row2:type_name -> VehicleCabinHVACStationRow2
	73,  // 83: VehicleCabinHVACStation.Row3:type_name -> VehicleCabinHVACStationRow3
	76,  // 84: VehicleCabinHVACStation.Row4:type_name -> VehicleCabinHVACStationRow4
	68,  // 85: VehicleCabinHVACStationRow1.Driver:type_name -> VehicleCabinHVACStationRow1Driver
	69,  // 86: VehicleCabinHVACStationRow1.Passenger:type_name -> VehicleCabinHVACStationRow1Passenger
	71,  // 87: VehicleCabinHVACStationRow2.Driver:type_name -> VehicleCabinHVACStationRow2Driver
	72,  // 88: VehicleCabinHVACStationRow2.Passenger:type_name -> VehicleCabinHVACStationRow2Passenger
	74,  // 89: VehicleCabinHVACStationRow3.Driver:type_name -> VehicleCabinHVACStationRow3Driver
	75,  // 90: VehicleCabinHVACStationRow3.Passenger:type_name -> VehicleCabinHVACStationRow3Passenger
	77,  // 91: VehicleCabinHVACStationRow4.Driver:type_name -> VehicleCabinHVACStationRow4Driver
	78,  // 92: VehicleCabinHVACStationRow4.Passenger:type_name -> VehicleCabinHVACStationRow4Passenger
	80,  // 93: VehicleCabinInfotainment.Media:type_name -> VehicleCabinInfotainmentMedia
	82,  // 94: VehicleCabinInfotainment.Navigation:type_name -> VehicleCabinInfotainmentNavigation
	85,  // 95: VehicleCabinInfotainment.HMI:type_name -> VehicleCabinInfotainmentHMI
	86,  // 96: VehicleCabinInfotainment.SmartphoneProjection:type_name -> VehicleCabinInfotainmentSmartphoneProjection
	81,  // 97: VehicleCabinInfotainmentMedia.Played:type_name -> VehicleCabinInfotainmentMediaPlayed
	83,  // 98: VehicleCabinInfotainmentNavigation.DestinationSet:type_name -> VehicleCabinInfotainmentNavigationDestinationSet
	84,  // 99: VehicleCabinInfotainmentNavigation.Map:type_name -> VehicleCabinInfotainmentNavigationMap
	88,  // 100: VehicleCabinSunroof.Shade:type_name -> VehicleCabinSunroofShade
	91,  // 101: VehicleCabinLight.Spotlight:type_name -> VehicleCabinLightSpotlight
	104, // 102: VehicleCabinLight.AmbientLight:type_name -> VehicleCabinLightAmbientLight
	111, // 103: VehicleCabinLight.InteractiveLightBar:type_name -> VehicleCabinLightInteractiveLightBar
	92,  // 104: VehicleCabinLightSpotlight.Row1:type_name -> VehicleCabinLightSpotlightRow1
	95,  // 105: VehicleCabinLightSpotlight.Row2:type_name -> VehicleCabinLightSpotlightRow2
	98,  // 106: VehicleCabinLightSpotlight.Row3:type_name -> VehicleCabinLightSpotlightRow3
	101, // 107: VehicleCabinLightSpotlight.Row4:type_name -> VehicleCabinLightSpotlightRow4
	93,  // 108: VehicleCabinLightSpotlightRow1.DriverSide:type_name -> VehicleCabinLightSpotlightRow1DriverSide
	94,  // 109: VehicleCabinLightSpotlightRow1.PassengerSide:type_name -> VehicleCabinLightSpotlightRow1PassengerSide
	96,  // 110: VehicleCabinLightSpotlightRow2.DriverSide:type_name -> VehicleCabinLightSpotlightRow2DriverSide
	97,  // 111: VehicleCabinLightSpotlightRow2.PassengerSide:type_name -> VehicleCabinLightSpotlightRow2PassengerSide
	99,  // 112: VehicleCabinLightSpotlightRow3.DriverSide:type_name -> VehicleCabinLightSpotlightRow3DriverSide
	100, // 113: VehicleCabinLightSpotlightRow3.PassengerSide:type_name -> VehicleCabinLightSpotlightRow3PassengerSide
	102, // 114: VehicleCabinLightSpotlightRow4.DriverSide:type_name -> VehicleCabinLightSpotlightRow4DriverSide
	103, // 115: VehicleCabinLightSpotlightRow4.PassengerSide:type_name -> VehicleCabinLightSpotlightRow4PassengerSide
	105, // 116: VehicleCabinLightAmbientLight.Row1:type_name -> VehicleCabinLightAmbientLightRow1
	108, // 117: VehicleCabinLightAmbientLight.Row2:type_name -> VehicleCabinLightAmbientLightRow2
	106, // 118: VehicleCabinLightAmbientLightRow1.DriverSide:type_name -> VehicleCabinLightAmbientLightRow1DriverSide
	107, // 119: VehicleCabinLightAmbientLightRow1.PassengerSide:type_name -> VehicleCabinLightAmbientLightRow1PassengerSide
	109, // 120: VehicleCabinLightAmbientLightRow2.DriverSide:type_name -> VehicleCabinLightAmbientLightRow2DriverSide
	110, // 121: VehicleCabinLightAmbientLightRow2.PassengerSide:type_name -> VehicleCabinLightAmbientLightRow2PassengerSide
	113, // 122: VehicleCabinDoor.Row1:type_name -> VehicleCabinDoorRow1
	120, // 123: VehicleCabinDoor.Row2:type_name -> VehicleCabinDoorRow2
	114, // 124: VehicleCabinDoorRow1.DriverSide:type_name -> VehicleCabinDoorRow1DriverSide
	117, // 125: VehicleCabinDoorRow1.PassengerSide:type_name -> VehicleCabinDoorRow1PassengerSide
	115, // 126: VehicleCabinDoorRow1DriverSide.Window:type_name -> VehicleCabinDoorRow1DriverSideWindow
	116, // 127: VehicleCabinDoorRow1DriverSide.Shade:type_name -> VehicleCabinDoorRow1DriverSideShade
	118, // 128: VehicleCabinDoorRow1PassengerSide.Window:type_name -> VehicleCabinDoorRow1PassengerSideWindow
	119, // 129: VehicleCabinDoorRow1PassengerSide.Shade:type_name -> VehicleCabinDoorRow1PassengerSideShade
	121, // 130: VehicleCabinDoorRow2.DriverSide:type_name -> VehicleCabinDoorRow2DriverSide
	124, // 131: VehicleCabinDoorRow2.PassengerSide:type_name -> VehicleCabinDoorRow2PassengerSide
	122, // 132: VehicleCabinDoorRow2DriverSide.Window:type_name -> VehicleCabinDoorRow2DriverSideWindow
	123, // 133: VehicleCabinDoorRow2DriverSide.Shade:type_name -> VehicleCabinDoorRow2DriverSideShade
	125, // 134: VehicleCabinDoorRow2PassengerSide.Window:type_name -> VehicleCabinDoorRow2PassengerSideWindow
	126, // 135: VehicleCabinDoorRow2PassengerSide.Shade:type_name -> VehicleCabinDoorRow2PassengerSideShade
	128, // 136: VehicleCabinSeat.Row1:type_name -> VehicleCabinSeatRow1
	177, // 137: VehicleCabinSeat.Row2:type_name -> VehicleCabinSeatRow2
	129, // 138: VehicleCabinSeatRow1.DriverSide:type_name -> VehicleCabinSeatRow1DriverSide
	145, // 139: VehicleCabinSeatRow1.Middle:type_name -> VehicleCabinSeatRow1Middle
	161, // 140: VehicleCabinSeatRow1.PassengerSide:type_name -> VehicleCabinSeatRow1PassengerSide
	130, // 141: VehicleCabinSeatRow1DriverSide.Occupant:type_name -> VehicleCabinSeatRow1DriverSideOccupant
	132, // 142: VehicleCabinSeatRow1DriverSide.Backrest:type_name -> VehicleCabinSeatRow1DriverSideBackrest
	135, // 143: VehicleCabinSeatRow1DriverSide.Seating:type_name -> VehicleCabinSeatRow1DriverSideSeating
	136, // 144: VehicleCabinSeatRow1DriverSide.Headrest:type_name -> VehicleCabinSeatRow1DriverSideHeadrest
	137, // 145: VehicleCabinSeatRow1DriverSide.Airbag:type_name -> VehicleCabinSeatRow1DriverSideAirbag
	138, // 146: VehicleCabinSeatRow1DriverSide.Switch:type_name -> VehicleCabinSeatRow1DriverSideSwitch
	131, // 147: VehicleCabinSeatRow1DriverSideOccupant.Identifier:type_name -> VehicleCabinSeatRow1DriverSideOccupantIdentifier
	133, // 148: VehicleCabinSeatRow1DriverSideBackrest.Lumbar:type_name -> VehicleCabinSeatRow1DriverSideBackrestLumbar
	134, // 149: VehicleCabinSeatRow1DriverSideBackrest.SideBolster:type_name -> VehicleCabinSeatRow1DriverSideBackrestSideBolster
	139, // 150: VehicleCabinSeatRow1DriverSideSwitch.Backrest:type_name -> VehicleCabinSeatRow1DriverSideSwitchBackrest
	142, // 151: VehicleCabinSeatRow1DriverSideSwitch.Seating:type_name -> VehicleCabinSeatRow1DriverSideSwitchSeating
	143, // 152: VehicleCabinSeatRow1DriverSideSwitch.Headrest:type_name -> VehicleCabinSeatRow1DriverSideSwitchHeadrest
	144, // 153: VehicleCabinSeatRow1DriverSideSwitch.Massage:type_name -> VehicleCabinSeatRow1DriverSideSwitchMassage
	140, // 154: VehicleCabinSeatRow1DriverSideSwitchBackrest.Lumbar:type_name -> VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar
	141, // 155: VehicleCabinSeatRow1DriverSideSwitchBackrest.SideBolster:type_name -> VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster
	146, // 156: VehicleCabinSeatRow1Middle.Occupant:type_name -> VehicleCabinSeatRow1MiddleOccupant
	148, // 157: VehicleCabinSeatRow1Middle.Backrest:type_name -> VehicleCabinSeatRow1MiddleBackrest
	151, // 158: VehicleCabinSeatRow1Middle.Seating:type_name -> VehicleCabinSeatRow1MiddleSeating
	152, // 159: VehicleCabinSeatRow1Middle.Headrest:type_name -> VehicleCabinSeatRow1MiddleHeadrest
	153, // 160: VehicleCabinSeatRow1Middle.Airbag:type_name -> VehicleCabinSeatRow1MiddleAirbag
	154, // 161: VehicleCabinSeatRow1Middle.Switch:type_name -> VehicleCabinSeatRow1MiddleSwitch
	147, // 162: VehicleCabinSeatRow1MiddleOccupant.Identifier:type_name -> VehicleCabinSeatRow1MiddleOccupantIdentifier
	149, // 163: VehicleCabinSeatRow1MiddleBackrest.Lumbar:type_name -> VehicleCabinSeatRow1MiddleBackrestLumbar
	150, // 164: VehicleCabinSeatRow1MiddleBackrest.SideBolster:type_name -> VehicleCabinSeatRow1MiddleBackrestSideBolster
	155, // 165: VehicleCabinSeatRow1MiddleSwitch.Backrest:type_name -> VehicleCabinSeatRow1MiddleSwitchBackrest
	158, // 166: VehicleCabinSeatRow1MiddleSwitch.Seating:type_name -> VehicleCabinSeatRow1MiddleSwitchSeating
	159, // 167: VehicleCabinSeatRow1MiddleSwitch.Headrest:type_name -> VehicleCabinSeatRow1MiddleSwitchHeadrest
	160, // 168: VehicleCabinSeatRow1MiddleSwitch.Massage:type_name -> VehicleCabinSeatRow1MiddleSwitchMassage
	156, // 169: VehicleCabinSeatRow1MiddleSwitchBackrest.Lumbar:type_name -> VehicleCabinSeatRow1MiddleSwitchBackrestLumbar
	157, // 170: VehicleCabinSeatRow1MiddleSwitchBackrest.SideBolster:type_name -> VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster
	162, // 171: VehicleCabinSeatRow1PassengerSide.Occupant:type_name -> VehicleCabinSeatRow1PassengerSideOccupant
	164, // 172: VehicleCabinSeatRow1PassengerSide.Backrest:type_name -> VehicleCabinSeatRow1PassengerSideBackrest
	167, // 173: VehicleCabinSeatRow1PassengerSide.Seating:type_name -> VehicleCabinSeatRow1PassengerSideSeating
	168, // 174: VehicleCabinSeatRow1PassengerSide.Headrest:type_name -> VehicleCabinSeatRow1PassengerSideHeadrest
	169, // 175: VehicleCabinSeatRow1PassengerSide.Airbag:type_name -> VehicleCabinSeatRow1PassengerSideAirbag
	170, // 176: VehicleCabinSeatRow1PassengerSide.Switch:type_name -> VehicleCabinSeatRow1PassengerSideSwitch
	163, // 177: VehicleCabinSeatRow1PassengerSideOccupant.Identifier:type_name -> VehicleCabinSeatRow1PassengerSideOccupantIdentifier
	165, // 178: VehicleCabinSeatRow1PassengerSideBackrest.Lumbar:type_name -> VehicleCabinSeatRow1PassengerSideBackrestLumbar
	166, // 179: VehicleCabinSeatRow1PassengerSideBackrest.SideBolster:type_name -> VehicleCabinSeatRow1PassengerSideBackrestSideBolster
	171, // 180: VehicleCabinSeatRow1PassengerSideSwitch.Backrest:type_name -> VehicleCabinSeatRow1PassengerSideSwitchBackrest
	174, // 181: VehicleCabinSeatRow1PassengerSideSwitch.Seating:type_name -> VehicleCabinSeatRow1PassengerSideSwitchSeating
	175, // 182: VehicleCabinSeatRow1PassengerSideSwitch.Headrest:type_name -> VehicleCabinSeatRow1PassengerSideSwitchHeadrest
	176, // 183: VehicleCabinSeatRow1PassengerSideSwitch.Massage:type_name -> VehicleCabinSeatRow1PassengerSideSwitchMassage
	172, // 184: VehicleCabinSeatRow1PassengerSideSwitchBackrest.Lumbar:type_name -> VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar
	173, // 185: VehicleCabinSeatRow1PassengerSideSwitchBackrest.SideBolster:type_name -> VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster
	178, // 186: VehicleCabinSeatRow2.DriverSide:type_name -> VehicleCabinSeatRow2DriverSide
	194, // 187: VehicleCabinSeatRow2.Middle:type_name -> VehicleCabinSeatRow2Middle
	210, // 188: VehicleCabinSeatRow2.PassengerSide:type_name -> VehicleCabinSeatRow2PassengerSide
	179, // 189: VehicleCabinSeatRow2DriverSide.Occupant:type_name -> VehicleCabinSeatRow2DriverSideOccupant
	181, // 190: VehicleCabinSeatRow2DriverSide.Backrest:type_name -> VehicleCabinSeatRow2DriverSideBackrest
	184, // 191: VehicleCabinSeatRow2DriverSide.Seating:type_name -> VehicleCabinSeatRow2DriverSideSeating
	185, // 192: VehicleCabinSeatRow2DriverSide.Headrest:type_name -> VehicleCabinSeatRow2DriverSideHeadrest
	186, // 193: VehicleCabinSeatRow2DriverSide.Airbag:type_name -> VehicleCabinSeatRow2DriverSideAirbag
	187, // 194: VehicleCabinSeatRow2DriverSide.Switch:type_name -> VehicleCabinSeatRow2DriverSideSwitch
	180, // 195: VehicleCabinSeatRow2DriverSideOccupant.Identifier:type_name -> VehicleCabinSeatRow2DriverSideOccupantIdentifier
	182, // 196: VehicleCabinSeatRow2DriverSideBackrest.Lumbar:type_name -> VehicleCabinSeatRow2DriverSideBackrestLumbar
	183, // 197: VehicleCabinSeatRow2DriverSideBackrest.SideBolster:type_name -> VehicleCabinSeatRow2DriverSideBackrestSideBolster
	188, // 198: VehicleCabinSeatRow2DriverSideSwitch.Backrest:type_name -> VehicleCabinSeatRow2DriverSideSwitchBackrest
	191, // 199: VehicleCabinSeatRow2DriverSideSwitch.Seating:type_name -> VehicleCabinSeatRow2DriverSideSwitchSeating
	192, // 200: VehicleCabinSeatRow2DriverSideSwitch.Headrest:type_name -> VehicleCabinSeatRow2DriverSideSwitchHeadrest
	193, // 201: VehicleCabinSeatRow2DriverSideSwitch.Massage:type_name -> VehicleCabinSeatRow2DriverSideSwitchMassage
	189, // 202: VehicleCabinSeatRow2DriverSideSwitchBackrest.Lumbar:type_name -> VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar
	190, // 203: VehicleCabinSeatRow2DriverSideSwitchBackrest.SideBolster:type_name -> VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster
	195, // 204: VehicleCabinSeatRow2Middle.Occupant:type_name -> VehicleCabinSeatRow2MiddleOccupant
	197, // 205: VehicleCabinSeatRow2Middle.Backrest:type_name -> VehicleCabinSeatRow2MiddleBackrest
	200, // 206: VehicleCabinSeatRow2Middle.Seating:type_name -> VehicleCabinSeatRow2MiddleSeating
	201, // 207: VehicleCabinSeatRow2Middle.Headrest:type_name -> VehicleCabinSeatRow2MiddleHeadrest
	202, // 208: VehicleCabinSeatRow2Middle.Airbag:type_name -> VehicleCabinSeatRow2MiddleAirbag
	203, // 209: VehicleCabinSeatRow2Middle.Switch:type_name -> VehicleCabinSeatRow2MiddleSwitch
	196, // 210: VehicleCabinSeatRow2MiddleOccupant.Identifier:type_name -> VehicleCabinSeatRow2MiddleOccupantIdentifier
	198, // 211: VehicleCabinSeatRow2MiddleBackrest.Lumbar:type_name -> VehicleCabinSeatRow2MiddleBackrestLumbar
	199, // 212: VehicleCabinSeatRow2MiddleBackrest.SideBolster:type_name -> VehicleCabinSeatRow2MiddleBackrestSideBolster
	204, // 213: VehicleCabinSeatRow2MiddleSwitch.Backrest:type_name -> VehicleCabinSeatRow2MiddleSwitchBackrest
	207, // 214: VehicleCabinSeatRow2MiddleSwitch.Seating:type_name -> VehicleCabinSeatRow2MiddleSwitchSeating
	208, // 215: VehicleCabinSeatRow2MiddleSwitch.Headrest:type_name -> VehicleCabinSeatRow2MiddleSwitchHeadrest
	209, // 216: VehicleCabinSeatRow2MiddleSwitch.Massage:type_name -> VehicleCabinSeatRow2MiddleSwitchMassage
	205, // 217: VehicleCabinSeatRow2MiddleSwitchBackrest.Lumbar:type_name -> VehicleCabinSeatRow2MiddleSwitchBackrestLumbar
	206, // 218: VehicleCabinSeatRow2MiddleSwitchBackrest.SideBolster:type_name -> VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster
	211, // 219: VehicleCabinSeatRow2PassengerSide.Occupant:type_name -> VehicleCabinSeatRow2PassengerSideOccupant
	213, // 220: VehicleCabinSeatRow2PassengerSide.Backrest:type_name -> VehicleCabinSeatRow2PassengerSideBackrest
	216, // 221: VehicleCabinSeatRow2PassengerSide.Seating:type_name -> VehicleCabinSeatRow2PassengerSideSeating
	217, // 222: VehicleCabinSeatRow2PassengerSide.Headrest:type_name -> VehicleCabinSeatRow2PassengerSideHeadrest
	218, // 223: VehicleCabinSeatRow2PassengerSide.Airbag:type_name -> VehicleCabinSeatRow2PassengerSideAirbag
	219, // 224: VehicleCabinSeatRow2PassengerSide.Switch:type_name -> VehicleCabinSeatRow2PassengerSideSwitch
	212, // 225: VehicleCabinSeatRow2PassengerSideOccupant.Identifier:type_name -> VehicleCabinSeatRow2PassengerSideOccupantIdentifier
	214, // 226: VehicleCabinSeatRow2PassengerSideBackrest.Lumbar:type_name -> VehicleCabinSeatRow2PassengerSideBackrestLumbar
	215, // 227: VehicleCabinSeatRow2PassengerSideBackrest.SideBolster:type_name -> VehicleCabinSeatRow2PassengerSideBackrestSideBolster
	220, // 228: VehicleCabinSeatRow2PassengerSideSwitch.Backrest:type_name -> VehicleCabinSeatRow2PassengerSideSwitchBackrest
	223, // 229: VehicleCabinSeatRow2PassengerSideSwitch.Seating:type_name -> VehicleCabinSeatRow2PassengerSideSwitchSeating
	224, // 230: VehicleCabinSeatRow2PassengerSideSwitch.Headrest:type_name -> VehicleCabinSeatRow2PassengerSideSwitchHeadrest
	225, // 231: VehicleCabinSeatRow2PassengerSideSwitch.Massage:type_name -> VehicleCabinSeatRow2PassengerSideSwitchMassage
	221, // 232: VehicleCabinSeatRow2PassengerSideSwitchBackrest.Lumbar:type_name -> VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar
	222, // 233: VehicleCabinSeatRow2PassengerSideSwitchBackrest.SideBolster:type_name -> VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster
	228, // 234: VehicleADAS.CruiseControl:type_name -> VehicleADASCruiseControl
	229, // 235: VehicleADAS.LaneDepartureDetection:type_name -> VehicleADASLaneDepartureDetection
	230, // 236: VehicleADAS.ObstacleDetection:type_name -> VehicleADASObstacleDetection
	231, // 237: VehicleADAS.ABS:type_name -> VehicleADASABS
	232, // 238: VehicleADAS.TCS:type_name -> VehicleADASTCS
	233, // 239: VehicleADAS.ESC:type_name -> VehicleADASESC
	235, // 240: VehicleADAS.EBD:type_name -> VehicleADASEBD
	236, // 241: VehicleADAS.EBA:type_name -> VehicleADASEBA
	237, // 242: VehicleADAS.DMS:type_name -> VehicleADASDMS
	234, // 243: VehicleADASESC.RoadFriction:type_name -> VehicleADASESCRoadFriction
	239, // 244: VehicleChassis.Axle:type_name -> VehicleChassisAxle
	256, // 245: VehicleChassis.ParkingBrake:type_name -> VehicleChassisParkingBrake
	257, // 246: VehicleChassis.SteeringWheel:type_name -> VehicleChassisSteeringWheel
	258, // 247: VehicleChassis.Accelerator:type_name -> VehicleChassisAccelerator
	259, // 248: VehicleChassis.Brake:type_name -> VehicleChassisBrake
	240, // 249: VehicleChassisAxle.Row1:type_name -> VehicleChassisAxleRow1
	248, // 250: VehicleChassisAxle.Row2:type_name -> VehicleChassisAxleRow2
	241, // 251: VehicleChassisAxleRow1.Wheel:type_name -> VehicleChassisAxleRow1Wheel
	242, // 252: VehicleChassisAxleRow1Wheel.Left:type_name -> VehicleChassisAxleRow1WheelLeft
	245, // 253: VehicleChassisAxleRow1Wheel.Right:type_name -> VehicleChassisAxleRow1WheelRight
	243, // 254: VehicleChassisAxleRow1WheelLeft.Brake:type_name -> VehicleChassisAxleRow1WheelLeftBrake
	244, // 255: VehicleChassisAxleRow1WheelLeft.Tire:type_name -> VehicleChassisAxleRow1WheelLeftTire
	246, // 256: VehicleChassisAxleRow1WheelRight.Brake:type_name -> VehicleChassisAxleRow1WheelRightBrake
	247, // 257: VehicleChassisAxleRow1WheelRight.Tire:type_name -> VehicleChassisAxleRow1WheelRightTire
	249, // 258: VehicleChassisAxleRow2.Wheel:type_name -> VehicleChassisAxleRow2Wheel
	250, // 259: VehicleChassisAxleRow2Wheel.Left:type_name -> VehicleChassisAxleRow2WheelLeft
	253, // 260: VehicleChassisAxleRow2Wheel.Right:type_name -> VehicleChassisAxleRow2WheelRight
	251, // 261: VehicleChassisAxleRow2WheelLeft.Brake:type_name -> VehicleChassisAxleRow2WheelLeftBrake
	252, // 262: VehicleChassisAxleRow2WheelLeft.Tire:type_name -> VehicleChassisAxleRow2WheelLeftTire
	254, // 263: VehicleChassisAxleRow2WheelRight.Brake:type_name -> VehicleChassisAxleRow2WheelRightBrake
	255, // 264: VehicleChassisAxleRow2WheelRight.Tire:type_name -> VehicleChassisAxleRow2WheelRightTire
	261, // 265: VehicleOBD.Status:type_name -> VehicleOBDStatus
	262, // 266: VehicleOBD.O2:type_name -> VehicleOBDO2
	271, // 267: VehicleOBD.O2WR:type_name -> VehicleOBDO2WR
	280, // 268: VehicleOBD.Catalyst:type_name -> VehicleOBDCatalyst
	283, // 269: VehicleOBD.DriveCycleStatus:type_name -> VehicleOBDDriveCycleStatus
	263, // 270: VehicleOBDO2.Sensor1:type_name -> VehicleOBDO2Sensor1
	264, // 271: VehicleOBDO2.Sensor2:type_name -> VehicleOBDO2Sensor2
	265, // 272: VehicleOBDO2.Sensor3:type_name -> VehicleOBDO2Sensor3
	266, // 273: VehicleOBDO2.Sensor4:type_name -> VehicleOBDO2Sensor4
	267, // 274: VehicleOBDO2.Sensor5:type_name -> VehicleOBDO2Sensor5
	268, // 275: VehicleOBDO2.Sensor6:type_name -> VehicleOBDO2Sensor6
	269, // 276: VehicleOBDO2.Sensor7:type_name -> VehicleOBDO2Sensor7
	270, // 277: VehicleOBDO2.Sensor8:type_name -> VehicleOBDO2Sensor8
	272, // 278: VehicleOBDO2WR.Sensor1:type_name -> VehicleOBDO2WRSensor1
	273, // 279: VehicleOBDO2WR.Sensor2:type_name -> VehicleOBDO2WRSensor2
	274, // 280: VehicleOBDO2WR.Sensor3:type_name -> VehicleOBDO2WRSensor3
	275, // 281: VehicleOBDO2WR.Sensor4:type_name -> VehicleOBDO2WRSensor4
	276, // 282: VehicleOBDO2WR.Sensor5:type_name -> VehicleOBDO2WRSensor5
	277, // 283: VehicleOBDO2WR.Sensor6:type_name -> VehicleOBDO2WRSensor6
	278, // 284: VehicleOBDO2WR.Sensor7:type_name -> VehicleOBDO2WRSensor7
	279, // 285: VehicleOBDO2WR.Sensor8:type_name -> VehicleOBDO2WRSensor8
	281, // 286: VehicleOBDCatalyst.Bank1:type_name -> VehicleOBDCatalystBank1
	282, // 287: VehicleOBDCatalyst.Bank2:type_name -> VehicleOBDCatalystBank2
	285, // 288: VehicleDriver.Identifier:type_name -> VehicleDriverIdentifier
	289, // [289:289] is the sub-list for method output_type
	289, // [289:289] is the sub-list for method input_type
	289, // [289:289] is the sub-list for extension type_name
	289, // [289:289] is the sub-list for extension extendee
	0,   // [0:289] is the sub-list for field type_name
}

func init() { file_vspec_proto_init() }
func file_vspec_proto_init() {
	if File_vspec_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vspec_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleVersionVSS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleVehicleIdentification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleLowVoltageBattery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleAcceleration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleAngularVelocity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleTrailer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCurrentLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCurrentLocationGNSSReceiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCurrentLocationGNSSReceiverMountingPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainCombustionEngine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainCombustionEngineDieselExhaustFluid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainCombustionEngineDieselParticulateFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainTransmission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainElectricMotor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainTractionBattery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainTractionBatteryTemperature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainTractionBatteryCellVoltage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainTractionBatteryStateOfCharge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainTractionBatteryCharging); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainTractionBatteryChargingMaximumChargingCurrent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainTractionBatteryChargingChargeCurrent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainTractionBatteryChargingChargeVoltage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainTractionBatteryChargingLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainTractionBatteryChargingTimer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainTractionBatteryDCDC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePowertrainFuelSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyHood); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyTrunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyTrunkFront); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyTrunkRear); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyHorn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyRaindetection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyWindshield); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyWindshieldFront); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyWindshieldFrontWiping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyWindshieldFrontWipingSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyWindshieldFrontWasherFluid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyWindshieldRear); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyWindshieldRearWiping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyWindshieldRearWipingSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyWindshieldRearWasherFluid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsBeam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsBeamLow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsBeamHigh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsRunning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsParking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsFog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsFogRear); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsFogFront); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsLicensePlate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsBrake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsHazard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsDirectionIndicator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsDirectionIndicatorLeft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyLightsDirectionIndicatorRight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyMirrors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyMirrorsDriverSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleBodyMirrorsPassengerSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinRearShade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinHVAC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinHVACStation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinHVACStationRow1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinHVACStationRow1Driver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinHVACStationRow1Passenger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinHVACStationRow2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinHVACStationRow2Driver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinHVACStationRow2Passenger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinHVACStationRow3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinHVACStationRow3Driver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinHVACStationRow3Passenger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinHVACStationRow4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinHVACStationRow4Driver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinHVACStationRow4Passenger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinInfotainment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinInfotainmentMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinInfotainmentMediaPlayed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinInfotainmentNavigation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinInfotainmentNavigationDestinationSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinInfotainmentNavigationMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinInfotainmentHMI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinInfotainmentSmartphoneProjection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSunroof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSunroofShade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinRearviewMirror); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightSpotlight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightSpotlightRow1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightSpotlightRow1DriverSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightSpotlightRow1PassengerSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightSpotlightRow2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightSpotlightRow2DriverSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightSpotlightRow2PassengerSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightSpotlightRow3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightSpotlightRow3DriverSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightSpotlightRow3PassengerSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightSpotlightRow4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightSpotlightRow4DriverSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightSpotlightRow4PassengerSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightAmbientLight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightAmbientLightRow1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightAmbientLightRow1DriverSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightAmbientLightRow1PassengerSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightAmbientLightRow2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightAmbientLightRow2DriverSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightAmbientLightRow2PassengerSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinLightInteractiveLightBar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoorRow1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoorRow1DriverSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoorRow1DriverSideWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoorRow1DriverSideShade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoorRow1PassengerSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoorRow1PassengerSideWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoorRow1PassengerSideShade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoorRow2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoorRow2DriverSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoorRow2DriverSideWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoorRow2DriverSideShade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoorRow2PassengerSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoorRow2PassengerSideWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinDoorRow2PassengerSideShade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideOccupant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideOccupantIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideBackrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideBackrestLumbar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideBackrestSideBolster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideSeating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideHeadrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideAirbag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideSwitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideSwitchBackrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideSwitchBackrestLumbar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideSwitchBackrestSideBolster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideSwitchSeating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideSwitchHeadrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1DriverSideSwitchMassage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1Middle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleOccupant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleOccupantIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleBackrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleBackrestLumbar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleBackrestSideBolster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleSeating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleHeadrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleAirbag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleSwitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleSwitchBackrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleSwitchBackrestLumbar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleSwitchBackrestSideBolster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleSwitchSeating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleSwitchHeadrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1MiddleSwitchMassage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideOccupant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideOccupantIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideBackrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideBackrestLumbar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideBackrestSideBolster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideSeating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideHeadrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideAirbag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideSwitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideSwitchBackrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideSwitchBackrestLumbar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideSwitchBackrestSideBolster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideSwitchSeating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideSwitchHeadrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow1PassengerSideSwitchMassage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideOccupant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideOccupantIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideBackrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideBackrestLumbar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideBackrestSideBolster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideSeating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideHeadrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideAirbag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideSwitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideSwitchBackrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideSwitchBackrestLumbar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideSwitchBackrestSideBolster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideSwitchSeating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideSwitchHeadrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2DriverSideSwitchMassage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2Middle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleOccupant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleOccupantIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleBackrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleBackrestLumbar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleBackrestSideBolster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleSeating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleHeadrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleAirbag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleSwitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleSwitchBackrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleSwitchBackrestLumbar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleSwitchBackrestSideBolster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleSwitchSeating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleSwitchHeadrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2MiddleSwitchMassage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideOccupant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideOccupantIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideBackrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideBackrestLumbar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideBackrestSideBolster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideSeating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideHeadrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideAirbag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideSwitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideSwitchBackrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideSwitchBackrestLumbar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideSwitchBackrestSideBolster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideSwitchSeating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideSwitchHeadrest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinSeatRow2PassengerSideSwitchMassage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleCabinConvertible); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleADAS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleADASCruiseControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleADASLaneDepartureDetection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleADASObstacleDetection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleADASABS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleADASTCS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleADASESC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleADASESCRoadFriction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleADASEBD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleADASEBA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleADASDMS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow1Wheel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow1WheelLeft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow1WheelLeftBrake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow1WheelLeftTire); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow1WheelRight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow1WheelRightBrake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow1WheelRightTire); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow2Wheel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow2WheelLeft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow2WheelLeftBrake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow2WheelLeftTire); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow2WheelRight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow2WheelRightBrake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAxleRow2WheelRightTire); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisParkingBrake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisSteeringWheel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisAccelerator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleChassisBrake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2Sensor1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2Sensor2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2Sensor3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2Sensor4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2Sensor5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2Sensor6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2Sensor7); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2Sensor8); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2WR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2WRSensor1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2WRSensor2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2WRSensor3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2WRSensor4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2WRSensor5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2WRSensor6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2WRSensor7); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDO2WRSensor8); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDCatalyst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDCatalystBank1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[282].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDCatalystBank2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[283].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleOBDDriveCycleStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[284].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleDriver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[285].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleDriverIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[286].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleExterior); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[287].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[288].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleConnectivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vspec_proto_msgTypes[289].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleDIMO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vspec_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   290,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vspec_proto_goTypes,
		DependencyIndexes: file_vspec_proto_depIdxs,
		MessageInfos:      file_vspec_proto_msgTypes,
	}.Build()
	File_vspec_proto = out.File
	file_vspec_proto_rawDesc = nil
	file_vspec_proto_goTypes = nil
	file_vspec_proto_depIdxs = nil
}



